
eclipse_project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002430  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  00002430  000024c4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000006  00800068  00800068  000024cc  2**0
                  ALLOC
  3 .stab         00001344  00000000  00000000  000024cc  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000008b2  00000000  00000000  00003810  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000140  00000000  00000000  000040c2  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000170  00000000  00000000  00004202  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001c49  00000000  00000000  00004372  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000eeb  00000000  00000000  00005fbb  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000dad  00000000  00000000  00006ea6  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000160  00000000  00000000  00007c54  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000028d  00000000  00000000  00007db4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000007ce  00000000  00000000  00008041  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  0000880f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 a3 05 	jmp	0xb46	; 0xb46 <__vector_1>
       8:	0c 94 b9 05 	jmp	0xb72	; 0xb72 <__vector_2>
       c:	0c 94 dd 05 	jmp	0xbba	; 0xbba <__vector_3>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 09 06 	jmp	0xc12	; 0xc12 <__vector_7>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a8 e6       	ldi	r26, 0x68	; 104
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
      68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
      6a:	ae 36       	cpi	r26, 0x6E	; 110
      6c:	b1 07       	cpc	r27, r17
      6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>

00000070 <__do_copy_data>:
      70:	10 e0       	ldi	r17, 0x00	; 0
      72:	a0 e6       	ldi	r26, 0x60	; 96
      74:	b0 e0       	ldi	r27, 0x00	; 0
      76:	e0 e3       	ldi	r30, 0x30	; 48
      78:	f4 e2       	ldi	r31, 0x24	; 36
      7a:	02 c0       	rjmp	.+4      	; 0x80 <.do_copy_data_start>

0000007c <.do_copy_data_loop>:
      7c:	05 90       	lpm	r0, Z+
      7e:	0d 92       	st	X+, r0

00000080 <.do_copy_data_start>:
      80:	a8 36       	cpi	r26, 0x68	; 104
      82:	b1 07       	cpc	r27, r17
      84:	d9 f7       	brne	.-10     	; 0x7c <.do_copy_data_loop>
      86:	0e 94 a9 06 	call	0xd52	; 0xd52 <main>
      8a:	0c 94 16 12 	jmp	0x242c	; 0x242c <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 49 03 	call	0x692	; 0x692 <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
      be:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <_fpadd_parts>:
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 df 11 	jmp	0x23be	; 0x23be <__prologue_saves__>
      f6:	dc 01       	movw	r26, r24
      f8:	2b 01       	movw	r4, r22
      fa:	fa 01       	movw	r30, r20
      fc:	9c 91       	ld	r25, X
      fe:	92 30       	cpi	r25, 0x02	; 2
     100:	08 f4       	brcc	.+2      	; 0x104 <_fpadd_parts+0x1a>
     102:	39 c1       	rjmp	.+626    	; 0x376 <_fpadd_parts+0x28c>
     104:	eb 01       	movw	r28, r22
     106:	88 81       	ld	r24, Y
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	08 f4       	brcc	.+2      	; 0x10e <_fpadd_parts+0x24>
     10c:	33 c1       	rjmp	.+614    	; 0x374 <_fpadd_parts+0x28a>
     10e:	94 30       	cpi	r25, 0x04	; 4
     110:	69 f4       	brne	.+26     	; 0x12c <_fpadd_parts+0x42>
     112:	84 30       	cpi	r24, 0x04	; 4
     114:	09 f0       	breq	.+2      	; 0x118 <_fpadd_parts+0x2e>
     116:	2f c1       	rjmp	.+606    	; 0x376 <_fpadd_parts+0x28c>
     118:	11 96       	adiw	r26, 0x01	; 1
     11a:	9c 91       	ld	r25, X
     11c:	11 97       	sbiw	r26, 0x01	; 1
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	98 17       	cp	r25, r24
     122:	09 f4       	brne	.+2      	; 0x126 <_fpadd_parts+0x3c>
     124:	28 c1       	rjmp	.+592    	; 0x376 <_fpadd_parts+0x28c>
     126:	a0 e6       	ldi	r26, 0x60	; 96
     128:	b0 e0       	ldi	r27, 0x00	; 0
     12a:	25 c1       	rjmp	.+586    	; 0x376 <_fpadd_parts+0x28c>
     12c:	84 30       	cpi	r24, 0x04	; 4
     12e:	09 f4       	brne	.+2      	; 0x132 <_fpadd_parts+0x48>
     130:	21 c1       	rjmp	.+578    	; 0x374 <_fpadd_parts+0x28a>
     132:	82 30       	cpi	r24, 0x02	; 2
     134:	a9 f4       	brne	.+42     	; 0x160 <_fpadd_parts+0x76>
     136:	92 30       	cpi	r25, 0x02	; 2
     138:	09 f0       	breq	.+2      	; 0x13c <_fpadd_parts+0x52>
     13a:	1d c1       	rjmp	.+570    	; 0x376 <_fpadd_parts+0x28c>
     13c:	9a 01       	movw	r18, r20
     13e:	ad 01       	movw	r20, r26
     140:	88 e0       	ldi	r24, 0x08	; 8
     142:	ea 01       	movw	r28, r20
     144:	09 90       	ld	r0, Y+
     146:	ae 01       	movw	r20, r28
     148:	e9 01       	movw	r28, r18
     14a:	09 92       	st	Y+, r0
     14c:	9e 01       	movw	r18, r28
     14e:	81 50       	subi	r24, 0x01	; 1
     150:	c1 f7       	brne	.-16     	; 0x142 <_fpadd_parts+0x58>
     152:	e2 01       	movw	r28, r4
     154:	89 81       	ldd	r24, Y+1	; 0x01
     156:	11 96       	adiw	r26, 0x01	; 1
     158:	9c 91       	ld	r25, X
     15a:	89 23       	and	r24, r25
     15c:	81 83       	std	Z+1, r24	; 0x01
     15e:	08 c1       	rjmp	.+528    	; 0x370 <_fpadd_parts+0x286>
     160:	92 30       	cpi	r25, 0x02	; 2
     162:	09 f4       	brne	.+2      	; 0x166 <_fpadd_parts+0x7c>
     164:	07 c1       	rjmp	.+526    	; 0x374 <_fpadd_parts+0x28a>
     166:	12 96       	adiw	r26, 0x02	; 2
     168:	2d 90       	ld	r2, X+
     16a:	3c 90       	ld	r3, X
     16c:	13 97       	sbiw	r26, 0x03	; 3
     16e:	eb 01       	movw	r28, r22
     170:	8a 81       	ldd	r24, Y+2	; 0x02
     172:	9b 81       	ldd	r25, Y+3	; 0x03
     174:	14 96       	adiw	r26, 0x04	; 4
     176:	ad 90       	ld	r10, X+
     178:	bd 90       	ld	r11, X+
     17a:	cd 90       	ld	r12, X+
     17c:	dc 90       	ld	r13, X
     17e:	17 97       	sbiw	r26, 0x07	; 7
     180:	ec 80       	ldd	r14, Y+4	; 0x04
     182:	fd 80       	ldd	r15, Y+5	; 0x05
     184:	0e 81       	ldd	r16, Y+6	; 0x06
     186:	1f 81       	ldd	r17, Y+7	; 0x07
     188:	91 01       	movw	r18, r2
     18a:	28 1b       	sub	r18, r24
     18c:	39 0b       	sbc	r19, r25
     18e:	b9 01       	movw	r22, r18
     190:	37 ff       	sbrs	r19, 7
     192:	04 c0       	rjmp	.+8      	; 0x19c <_fpadd_parts+0xb2>
     194:	66 27       	eor	r22, r22
     196:	77 27       	eor	r23, r23
     198:	62 1b       	sub	r22, r18
     19a:	73 0b       	sbc	r23, r19
     19c:	60 32       	cpi	r22, 0x20	; 32
     19e:	71 05       	cpc	r23, r1
     1a0:	0c f0       	brlt	.+2      	; 0x1a4 <_fpadd_parts+0xba>
     1a2:	61 c0       	rjmp	.+194    	; 0x266 <_fpadd_parts+0x17c>
     1a4:	12 16       	cp	r1, r18
     1a6:	13 06       	cpc	r1, r19
     1a8:	6c f5       	brge	.+90     	; 0x204 <_fpadd_parts+0x11a>
     1aa:	37 01       	movw	r6, r14
     1ac:	48 01       	movw	r8, r16
     1ae:	06 2e       	mov	r0, r22
     1b0:	04 c0       	rjmp	.+8      	; 0x1ba <_fpadd_parts+0xd0>
     1b2:	96 94       	lsr	r9
     1b4:	87 94       	ror	r8
     1b6:	77 94       	ror	r7
     1b8:	67 94       	ror	r6
     1ba:	0a 94       	dec	r0
     1bc:	d2 f7       	brpl	.-12     	; 0x1b2 <_fpadd_parts+0xc8>
     1be:	21 e0       	ldi	r18, 0x01	; 1
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	40 e0       	ldi	r20, 0x00	; 0
     1c4:	50 e0       	ldi	r21, 0x00	; 0
     1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <_fpadd_parts+0xe6>
     1c8:	22 0f       	add	r18, r18
     1ca:	33 1f       	adc	r19, r19
     1cc:	44 1f       	adc	r20, r20
     1ce:	55 1f       	adc	r21, r21
     1d0:	6a 95       	dec	r22
     1d2:	d2 f7       	brpl	.-12     	; 0x1c8 <_fpadd_parts+0xde>
     1d4:	21 50       	subi	r18, 0x01	; 1
     1d6:	30 40       	sbci	r19, 0x00	; 0
     1d8:	40 40       	sbci	r20, 0x00	; 0
     1da:	50 40       	sbci	r21, 0x00	; 0
     1dc:	2e 21       	and	r18, r14
     1de:	3f 21       	and	r19, r15
     1e0:	40 23       	and	r20, r16
     1e2:	51 23       	and	r21, r17
     1e4:	21 15       	cp	r18, r1
     1e6:	31 05       	cpc	r19, r1
     1e8:	41 05       	cpc	r20, r1
     1ea:	51 05       	cpc	r21, r1
     1ec:	21 f0       	breq	.+8      	; 0x1f6 <_fpadd_parts+0x10c>
     1ee:	21 e0       	ldi	r18, 0x01	; 1
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	40 e0       	ldi	r20, 0x00	; 0
     1f4:	50 e0       	ldi	r21, 0x00	; 0
     1f6:	79 01       	movw	r14, r18
     1f8:	8a 01       	movw	r16, r20
     1fa:	e6 28       	or	r14, r6
     1fc:	f7 28       	or	r15, r7
     1fe:	08 29       	or	r16, r8
     200:	19 29       	or	r17, r9
     202:	3c c0       	rjmp	.+120    	; 0x27c <_fpadd_parts+0x192>
     204:	23 2b       	or	r18, r19
     206:	d1 f1       	breq	.+116    	; 0x27c <_fpadd_parts+0x192>
     208:	26 0e       	add	r2, r22
     20a:	37 1e       	adc	r3, r23
     20c:	35 01       	movw	r6, r10
     20e:	46 01       	movw	r8, r12
     210:	06 2e       	mov	r0, r22
     212:	04 c0       	rjmp	.+8      	; 0x21c <_fpadd_parts+0x132>
     214:	96 94       	lsr	r9
     216:	87 94       	ror	r8
     218:	77 94       	ror	r7
     21a:	67 94       	ror	r6
     21c:	0a 94       	dec	r0
     21e:	d2 f7       	brpl	.-12     	; 0x214 <_fpadd_parts+0x12a>
     220:	21 e0       	ldi	r18, 0x01	; 1
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	04 c0       	rjmp	.+8      	; 0x232 <_fpadd_parts+0x148>
     22a:	22 0f       	add	r18, r18
     22c:	33 1f       	adc	r19, r19
     22e:	44 1f       	adc	r20, r20
     230:	55 1f       	adc	r21, r21
     232:	6a 95       	dec	r22
     234:	d2 f7       	brpl	.-12     	; 0x22a <_fpadd_parts+0x140>
     236:	21 50       	subi	r18, 0x01	; 1
     238:	30 40       	sbci	r19, 0x00	; 0
     23a:	40 40       	sbci	r20, 0x00	; 0
     23c:	50 40       	sbci	r21, 0x00	; 0
     23e:	2a 21       	and	r18, r10
     240:	3b 21       	and	r19, r11
     242:	4c 21       	and	r20, r12
     244:	5d 21       	and	r21, r13
     246:	21 15       	cp	r18, r1
     248:	31 05       	cpc	r19, r1
     24a:	41 05       	cpc	r20, r1
     24c:	51 05       	cpc	r21, r1
     24e:	21 f0       	breq	.+8      	; 0x258 <_fpadd_parts+0x16e>
     250:	21 e0       	ldi	r18, 0x01	; 1
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e0       	ldi	r20, 0x00	; 0
     256:	50 e0       	ldi	r21, 0x00	; 0
     258:	59 01       	movw	r10, r18
     25a:	6a 01       	movw	r12, r20
     25c:	a6 28       	or	r10, r6
     25e:	b7 28       	or	r11, r7
     260:	c8 28       	or	r12, r8
     262:	d9 28       	or	r13, r9
     264:	0b c0       	rjmp	.+22     	; 0x27c <_fpadd_parts+0x192>
     266:	82 15       	cp	r24, r2
     268:	93 05       	cpc	r25, r3
     26a:	2c f0       	brlt	.+10     	; 0x276 <_fpadd_parts+0x18c>
     26c:	1c 01       	movw	r2, r24
     26e:	aa 24       	eor	r10, r10
     270:	bb 24       	eor	r11, r11
     272:	65 01       	movw	r12, r10
     274:	03 c0       	rjmp	.+6      	; 0x27c <_fpadd_parts+0x192>
     276:	ee 24       	eor	r14, r14
     278:	ff 24       	eor	r15, r15
     27a:	87 01       	movw	r16, r14
     27c:	11 96       	adiw	r26, 0x01	; 1
     27e:	9c 91       	ld	r25, X
     280:	d2 01       	movw	r26, r4
     282:	11 96       	adiw	r26, 0x01	; 1
     284:	8c 91       	ld	r24, X
     286:	98 17       	cp	r25, r24
     288:	09 f4       	brne	.+2      	; 0x28c <_fpadd_parts+0x1a2>
     28a:	45 c0       	rjmp	.+138    	; 0x316 <_fpadd_parts+0x22c>
     28c:	99 23       	and	r25, r25
     28e:	39 f0       	breq	.+14     	; 0x29e <_fpadd_parts+0x1b4>
     290:	a8 01       	movw	r20, r16
     292:	97 01       	movw	r18, r14
     294:	2a 19       	sub	r18, r10
     296:	3b 09       	sbc	r19, r11
     298:	4c 09       	sbc	r20, r12
     29a:	5d 09       	sbc	r21, r13
     29c:	06 c0       	rjmp	.+12     	; 0x2aa <_fpadd_parts+0x1c0>
     29e:	a6 01       	movw	r20, r12
     2a0:	95 01       	movw	r18, r10
     2a2:	2e 19       	sub	r18, r14
     2a4:	3f 09       	sbc	r19, r15
     2a6:	40 0b       	sbc	r20, r16
     2a8:	51 0b       	sbc	r21, r17
     2aa:	57 fd       	sbrc	r21, 7
     2ac:	08 c0       	rjmp	.+16     	; 0x2be <_fpadd_parts+0x1d4>
     2ae:	11 82       	std	Z+1, r1	; 0x01
     2b0:	33 82       	std	Z+3, r3	; 0x03
     2b2:	22 82       	std	Z+2, r2	; 0x02
     2b4:	24 83       	std	Z+4, r18	; 0x04
     2b6:	35 83       	std	Z+5, r19	; 0x05
     2b8:	46 83       	std	Z+6, r20	; 0x06
     2ba:	57 83       	std	Z+7, r21	; 0x07
     2bc:	1d c0       	rjmp	.+58     	; 0x2f8 <_fpadd_parts+0x20e>
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	81 83       	std	Z+1, r24	; 0x01
     2c2:	33 82       	std	Z+3, r3	; 0x03
     2c4:	22 82       	std	Z+2, r2	; 0x02
     2c6:	88 27       	eor	r24, r24
     2c8:	99 27       	eor	r25, r25
     2ca:	dc 01       	movw	r26, r24
     2cc:	82 1b       	sub	r24, r18
     2ce:	93 0b       	sbc	r25, r19
     2d0:	a4 0b       	sbc	r26, r20
     2d2:	b5 0b       	sbc	r27, r21
     2d4:	84 83       	std	Z+4, r24	; 0x04
     2d6:	95 83       	std	Z+5, r25	; 0x05
     2d8:	a6 83       	std	Z+6, r26	; 0x06
     2da:	b7 83       	std	Z+7, r27	; 0x07
     2dc:	0d c0       	rjmp	.+26     	; 0x2f8 <_fpadd_parts+0x20e>
     2de:	22 0f       	add	r18, r18
     2e0:	33 1f       	adc	r19, r19
     2e2:	44 1f       	adc	r20, r20
     2e4:	55 1f       	adc	r21, r21
     2e6:	24 83       	std	Z+4, r18	; 0x04
     2e8:	35 83       	std	Z+5, r19	; 0x05
     2ea:	46 83       	std	Z+6, r20	; 0x06
     2ec:	57 83       	std	Z+7, r21	; 0x07
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	93 81       	ldd	r25, Z+3	; 0x03
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	93 83       	std	Z+3, r25	; 0x03
     2f6:	82 83       	std	Z+2, r24	; 0x02
     2f8:	24 81       	ldd	r18, Z+4	; 0x04
     2fa:	35 81       	ldd	r19, Z+5	; 0x05
     2fc:	46 81       	ldd	r20, Z+6	; 0x06
     2fe:	57 81       	ldd	r21, Z+7	; 0x07
     300:	da 01       	movw	r26, r20
     302:	c9 01       	movw	r24, r18
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	a1 09       	sbc	r26, r1
     308:	b1 09       	sbc	r27, r1
     30a:	8f 5f       	subi	r24, 0xFF	; 255
     30c:	9f 4f       	sbci	r25, 0xFF	; 255
     30e:	af 4f       	sbci	r26, 0xFF	; 255
     310:	bf 43       	sbci	r27, 0x3F	; 63
     312:	28 f3       	brcs	.-54     	; 0x2de <_fpadd_parts+0x1f4>
     314:	0b c0       	rjmp	.+22     	; 0x32c <_fpadd_parts+0x242>
     316:	91 83       	std	Z+1, r25	; 0x01
     318:	33 82       	std	Z+3, r3	; 0x03
     31a:	22 82       	std	Z+2, r2	; 0x02
     31c:	ea 0c       	add	r14, r10
     31e:	fb 1c       	adc	r15, r11
     320:	0c 1d       	adc	r16, r12
     322:	1d 1d       	adc	r17, r13
     324:	e4 82       	std	Z+4, r14	; 0x04
     326:	f5 82       	std	Z+5, r15	; 0x05
     328:	06 83       	std	Z+6, r16	; 0x06
     32a:	17 83       	std	Z+7, r17	; 0x07
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	80 83       	st	Z, r24
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	57 ff       	sbrs	r21, 7
     33a:	1a c0       	rjmp	.+52     	; 0x370 <_fpadd_parts+0x286>
     33c:	c9 01       	movw	r24, r18
     33e:	aa 27       	eor	r26, r26
     340:	97 fd       	sbrc	r25, 7
     342:	a0 95       	com	r26
     344:	ba 2f       	mov	r27, r26
     346:	81 70       	andi	r24, 0x01	; 1
     348:	90 70       	andi	r25, 0x00	; 0
     34a:	a0 70       	andi	r26, 0x00	; 0
     34c:	b0 70       	andi	r27, 0x00	; 0
     34e:	56 95       	lsr	r21
     350:	47 95       	ror	r20
     352:	37 95       	ror	r19
     354:	27 95       	ror	r18
     356:	82 2b       	or	r24, r18
     358:	93 2b       	or	r25, r19
     35a:	a4 2b       	or	r26, r20
     35c:	b5 2b       	or	r27, r21
     35e:	84 83       	std	Z+4, r24	; 0x04
     360:	95 83       	std	Z+5, r25	; 0x05
     362:	a6 83       	std	Z+6, r26	; 0x06
     364:	b7 83       	std	Z+7, r27	; 0x07
     366:	82 81       	ldd	r24, Z+2	; 0x02
     368:	93 81       	ldd	r25, Z+3	; 0x03
     36a:	01 96       	adiw	r24, 0x01	; 1
     36c:	93 83       	std	Z+3, r25	; 0x03
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	df 01       	movw	r26, r30
     372:	01 c0       	rjmp	.+2      	; 0x376 <_fpadd_parts+0x28c>
     374:	d2 01       	movw	r26, r4
     376:	cd 01       	movw	r24, r26
     378:	cd b7       	in	r28, 0x3d	; 61
     37a:	de b7       	in	r29, 0x3e	; 62
     37c:	e2 e1       	ldi	r30, 0x12	; 18
     37e:	0c 94 fb 11 	jmp	0x23f6	; 0x23f6 <__epilogue_restores__>

00000382 <__subsf3>:
     382:	a0 e2       	ldi	r26, 0x20	; 32
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	e7 ec       	ldi	r30, 0xC7	; 199
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	0c 94 eb 11 	jmp	0x23d6	; 0x23d6 <__prologue_saves__+0x18>
     38e:	69 83       	std	Y+1, r22	; 0x01
     390:	7a 83       	std	Y+2, r23	; 0x02
     392:	8b 83       	std	Y+3, r24	; 0x03
     394:	9c 83       	std	Y+4, r25	; 0x04
     396:	2d 83       	std	Y+5, r18	; 0x05
     398:	3e 83       	std	Y+6, r19	; 0x06
     39a:	4f 83       	std	Y+7, r20	; 0x07
     39c:	58 87       	std	Y+8, r21	; 0x08
     39e:	e9 e0       	ldi	r30, 0x09	; 9
     3a0:	ee 2e       	mov	r14, r30
     3a2:	f1 2c       	mov	r15, r1
     3a4:	ec 0e       	add	r14, r28
     3a6:	fd 1e       	adc	r15, r29
     3a8:	ce 01       	movw	r24, r28
     3aa:	01 96       	adiw	r24, 0x01	; 1
     3ac:	b7 01       	movw	r22, r14
     3ae:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     3b2:	8e 01       	movw	r16, r28
     3b4:	0f 5e       	subi	r16, 0xEF	; 239
     3b6:	1f 4f       	sbci	r17, 0xFF	; 255
     3b8:	ce 01       	movw	r24, r28
     3ba:	05 96       	adiw	r24, 0x05	; 5
     3bc:	b8 01       	movw	r22, r16
     3be:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     3c2:	8a 89       	ldd	r24, Y+18	; 0x12
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	89 27       	eor	r24, r25
     3c8:	8a 8b       	std	Y+18, r24	; 0x12
     3ca:	c7 01       	movw	r24, r14
     3cc:	b8 01       	movw	r22, r16
     3ce:	ae 01       	movw	r20, r28
     3d0:	47 5e       	subi	r20, 0xE7	; 231
     3d2:	5f 4f       	sbci	r21, 0xFF	; 255
     3d4:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     3d8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     3dc:	a0 96       	adiw	r28, 0x20	; 32
     3de:	e6 e0       	ldi	r30, 0x06	; 6
     3e0:	0c 94 07 12 	jmp	0x240e	; 0x240e <__epilogue_restores__+0x18>

000003e4 <__addsf3>:
     3e4:	a0 e2       	ldi	r26, 0x20	; 32
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	e8 ef       	ldi	r30, 0xF8	; 248
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	0c 94 eb 11 	jmp	0x23d6	; 0x23d6 <__prologue_saves__+0x18>
     3f0:	69 83       	std	Y+1, r22	; 0x01
     3f2:	7a 83       	std	Y+2, r23	; 0x02
     3f4:	8b 83       	std	Y+3, r24	; 0x03
     3f6:	9c 83       	std	Y+4, r25	; 0x04
     3f8:	2d 83       	std	Y+5, r18	; 0x05
     3fa:	3e 83       	std	Y+6, r19	; 0x06
     3fc:	4f 83       	std	Y+7, r20	; 0x07
     3fe:	58 87       	std	Y+8, r21	; 0x08
     400:	f9 e0       	ldi	r31, 0x09	; 9
     402:	ef 2e       	mov	r14, r31
     404:	f1 2c       	mov	r15, r1
     406:	ec 0e       	add	r14, r28
     408:	fd 1e       	adc	r15, r29
     40a:	ce 01       	movw	r24, r28
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	b7 01       	movw	r22, r14
     410:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     414:	8e 01       	movw	r16, r28
     416:	0f 5e       	subi	r16, 0xEF	; 239
     418:	1f 4f       	sbci	r17, 0xFF	; 255
     41a:	ce 01       	movw	r24, r28
     41c:	05 96       	adiw	r24, 0x05	; 5
     41e:	b8 01       	movw	r22, r16
     420:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     424:	c7 01       	movw	r24, r14
     426:	b8 01       	movw	r22, r16
     428:	ae 01       	movw	r20, r28
     42a:	47 5e       	subi	r20, 0xE7	; 231
     42c:	5f 4f       	sbci	r21, 0xFF	; 255
     42e:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     432:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     436:	a0 96       	adiw	r28, 0x20	; 32
     438:	e6 e0       	ldi	r30, 0x06	; 6
     43a:	0c 94 07 12 	jmp	0x240e	; 0x240e <__epilogue_restores__+0x18>

0000043e <__mulsf3>:
     43e:	a0 e2       	ldi	r26, 0x20	; 32
     440:	b0 e0       	ldi	r27, 0x00	; 0
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f2 e0       	ldi	r31, 0x02	; 2
     446:	0c 94 df 11 	jmp	0x23be	; 0x23be <__prologue_saves__>
     44a:	69 83       	std	Y+1, r22	; 0x01
     44c:	7a 83       	std	Y+2, r23	; 0x02
     44e:	8b 83       	std	Y+3, r24	; 0x03
     450:	9c 83       	std	Y+4, r25	; 0x04
     452:	2d 83       	std	Y+5, r18	; 0x05
     454:	3e 83       	std	Y+6, r19	; 0x06
     456:	4f 83       	std	Y+7, r20	; 0x07
     458:	58 87       	std	Y+8, r21	; 0x08
     45a:	ce 01       	movw	r24, r28
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	be 01       	movw	r22, r28
     460:	67 5f       	subi	r22, 0xF7	; 247
     462:	7f 4f       	sbci	r23, 0xFF	; 255
     464:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     468:	ce 01       	movw	r24, r28
     46a:	05 96       	adiw	r24, 0x05	; 5
     46c:	be 01       	movw	r22, r28
     46e:	6f 5e       	subi	r22, 0xEF	; 239
     470:	7f 4f       	sbci	r23, 0xFF	; 255
     472:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     476:	99 85       	ldd	r25, Y+9	; 0x09
     478:	92 30       	cpi	r25, 0x02	; 2
     47a:	88 f0       	brcs	.+34     	; 0x49e <__mulsf3+0x60>
     47c:	89 89       	ldd	r24, Y+17	; 0x11
     47e:	82 30       	cpi	r24, 0x02	; 2
     480:	c8 f0       	brcs	.+50     	; 0x4b4 <__mulsf3+0x76>
     482:	94 30       	cpi	r25, 0x04	; 4
     484:	19 f4       	brne	.+6      	; 0x48c <__mulsf3+0x4e>
     486:	82 30       	cpi	r24, 0x02	; 2
     488:	51 f4       	brne	.+20     	; 0x49e <__mulsf3+0x60>
     48a:	04 c0       	rjmp	.+8      	; 0x494 <__mulsf3+0x56>
     48c:	84 30       	cpi	r24, 0x04	; 4
     48e:	29 f4       	brne	.+10     	; 0x49a <__mulsf3+0x5c>
     490:	92 30       	cpi	r25, 0x02	; 2
     492:	81 f4       	brne	.+32     	; 0x4b4 <__mulsf3+0x76>
     494:	80 e6       	ldi	r24, 0x60	; 96
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	c6 c0       	rjmp	.+396    	; 0x626 <__mulsf3+0x1e8>
     49a:	92 30       	cpi	r25, 0x02	; 2
     49c:	49 f4       	brne	.+18     	; 0x4b0 <__mulsf3+0x72>
     49e:	20 e0       	ldi	r18, 0x00	; 0
     4a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a2:	8a 89       	ldd	r24, Y+18	; 0x12
     4a4:	98 13       	cpse	r25, r24
     4a6:	21 e0       	ldi	r18, 0x01	; 1
     4a8:	2a 87       	std	Y+10, r18	; 0x0a
     4aa:	ce 01       	movw	r24, r28
     4ac:	09 96       	adiw	r24, 0x09	; 9
     4ae:	bb c0       	rjmp	.+374    	; 0x626 <__mulsf3+0x1e8>
     4b0:	82 30       	cpi	r24, 0x02	; 2
     4b2:	49 f4       	brne	.+18     	; 0x4c6 <__mulsf3+0x88>
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b8:	8a 89       	ldd	r24, Y+18	; 0x12
     4ba:	98 13       	cpse	r25, r24
     4bc:	21 e0       	ldi	r18, 0x01	; 1
     4be:	2a 8b       	std	Y+18, r18	; 0x12
     4c0:	ce 01       	movw	r24, r28
     4c2:	41 96       	adiw	r24, 0x11	; 17
     4c4:	b0 c0       	rjmp	.+352    	; 0x626 <__mulsf3+0x1e8>
     4c6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4c8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ca:	4f 84       	ldd	r4, Y+15	; 0x0f
     4cc:	58 88       	ldd	r5, Y+16	; 0x10
     4ce:	6d 88       	ldd	r6, Y+21	; 0x15
     4d0:	7e 88       	ldd	r7, Y+22	; 0x16
     4d2:	8f 88       	ldd	r8, Y+23	; 0x17
     4d4:	98 8c       	ldd	r9, Y+24	; 0x18
     4d6:	ee 24       	eor	r14, r14
     4d8:	ff 24       	eor	r15, r15
     4da:	87 01       	movw	r16, r14
     4dc:	aa 24       	eor	r10, r10
     4de:	bb 24       	eor	r11, r11
     4e0:	65 01       	movw	r12, r10
     4e2:	40 e0       	ldi	r20, 0x00	; 0
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	60 e0       	ldi	r22, 0x00	; 0
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	e0 e0       	ldi	r30, 0x00	; 0
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	c1 01       	movw	r24, r2
     4f0:	81 70       	andi	r24, 0x01	; 1
     4f2:	90 70       	andi	r25, 0x00	; 0
     4f4:	89 2b       	or	r24, r25
     4f6:	e9 f0       	breq	.+58     	; 0x532 <__mulsf3+0xf4>
     4f8:	e6 0c       	add	r14, r6
     4fa:	f7 1c       	adc	r15, r7
     4fc:	08 1d       	adc	r16, r8
     4fe:	19 1d       	adc	r17, r9
     500:	9a 01       	movw	r18, r20
     502:	ab 01       	movw	r20, r22
     504:	2a 0d       	add	r18, r10
     506:	3b 1d       	adc	r19, r11
     508:	4c 1d       	adc	r20, r12
     50a:	5d 1d       	adc	r21, r13
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	a0 e0       	ldi	r26, 0x00	; 0
     512:	b0 e0       	ldi	r27, 0x00	; 0
     514:	e6 14       	cp	r14, r6
     516:	f7 04       	cpc	r15, r7
     518:	08 05       	cpc	r16, r8
     51a:	19 05       	cpc	r17, r9
     51c:	20 f4       	brcc	.+8      	; 0x526 <__mulsf3+0xe8>
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	a0 e0       	ldi	r26, 0x00	; 0
     524:	b0 e0       	ldi	r27, 0x00	; 0
     526:	ba 01       	movw	r22, r20
     528:	a9 01       	movw	r20, r18
     52a:	48 0f       	add	r20, r24
     52c:	59 1f       	adc	r21, r25
     52e:	6a 1f       	adc	r22, r26
     530:	7b 1f       	adc	r23, r27
     532:	aa 0c       	add	r10, r10
     534:	bb 1c       	adc	r11, r11
     536:	cc 1c       	adc	r12, r12
     538:	dd 1c       	adc	r13, r13
     53a:	97 fe       	sbrs	r9, 7
     53c:	08 c0       	rjmp	.+16     	; 0x54e <__mulsf3+0x110>
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	a0 e0       	ldi	r26, 0x00	; 0
     544:	b0 e0       	ldi	r27, 0x00	; 0
     546:	a8 2a       	or	r10, r24
     548:	b9 2a       	or	r11, r25
     54a:	ca 2a       	or	r12, r26
     54c:	db 2a       	or	r13, r27
     54e:	31 96       	adiw	r30, 0x01	; 1
     550:	e0 32       	cpi	r30, 0x20	; 32
     552:	f1 05       	cpc	r31, r1
     554:	49 f0       	breq	.+18     	; 0x568 <__mulsf3+0x12a>
     556:	66 0c       	add	r6, r6
     558:	77 1c       	adc	r7, r7
     55a:	88 1c       	adc	r8, r8
     55c:	99 1c       	adc	r9, r9
     55e:	56 94       	lsr	r5
     560:	47 94       	ror	r4
     562:	37 94       	ror	r3
     564:	27 94       	ror	r2
     566:	c3 cf       	rjmp	.-122    	; 0x4ee <__mulsf3+0xb0>
     568:	fa 85       	ldd	r31, Y+10	; 0x0a
     56a:	ea 89       	ldd	r30, Y+18	; 0x12
     56c:	2b 89       	ldd	r18, Y+19	; 0x13
     56e:	3c 89       	ldd	r19, Y+20	; 0x14
     570:	8b 85       	ldd	r24, Y+11	; 0x0b
     572:	9c 85       	ldd	r25, Y+12	; 0x0c
     574:	28 0f       	add	r18, r24
     576:	39 1f       	adc	r19, r25
     578:	2e 5f       	subi	r18, 0xFE	; 254
     57a:	3f 4f       	sbci	r19, 0xFF	; 255
     57c:	17 c0       	rjmp	.+46     	; 0x5ac <__mulsf3+0x16e>
     57e:	ca 01       	movw	r24, r20
     580:	81 70       	andi	r24, 0x01	; 1
     582:	90 70       	andi	r25, 0x00	; 0
     584:	89 2b       	or	r24, r25
     586:	61 f0       	breq	.+24     	; 0x5a0 <__mulsf3+0x162>
     588:	16 95       	lsr	r17
     58a:	07 95       	ror	r16
     58c:	f7 94       	ror	r15
     58e:	e7 94       	ror	r14
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	a0 e0       	ldi	r26, 0x00	; 0
     596:	b0 e8       	ldi	r27, 0x80	; 128
     598:	e8 2a       	or	r14, r24
     59a:	f9 2a       	or	r15, r25
     59c:	0a 2b       	or	r16, r26
     59e:	1b 2b       	or	r17, r27
     5a0:	76 95       	lsr	r23
     5a2:	67 95       	ror	r22
     5a4:	57 95       	ror	r21
     5a6:	47 95       	ror	r20
     5a8:	2f 5f       	subi	r18, 0xFF	; 255
     5aa:	3f 4f       	sbci	r19, 0xFF	; 255
     5ac:	77 fd       	sbrc	r23, 7
     5ae:	e7 cf       	rjmp	.-50     	; 0x57e <__mulsf3+0x140>
     5b0:	0c c0       	rjmp	.+24     	; 0x5ca <__mulsf3+0x18c>
     5b2:	44 0f       	add	r20, r20
     5b4:	55 1f       	adc	r21, r21
     5b6:	66 1f       	adc	r22, r22
     5b8:	77 1f       	adc	r23, r23
     5ba:	17 fd       	sbrc	r17, 7
     5bc:	41 60       	ori	r20, 0x01	; 1
     5be:	ee 0c       	add	r14, r14
     5c0:	ff 1c       	adc	r15, r15
     5c2:	00 1f       	adc	r16, r16
     5c4:	11 1f       	adc	r17, r17
     5c6:	21 50       	subi	r18, 0x01	; 1
     5c8:	30 40       	sbci	r19, 0x00	; 0
     5ca:	40 30       	cpi	r20, 0x00	; 0
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	59 07       	cpc	r21, r25
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	69 07       	cpc	r22, r25
     5d4:	90 e4       	ldi	r25, 0x40	; 64
     5d6:	79 07       	cpc	r23, r25
     5d8:	60 f3       	brcs	.-40     	; 0x5b2 <__mulsf3+0x174>
     5da:	2b 8f       	std	Y+27, r18	; 0x1b
     5dc:	3c 8f       	std	Y+28, r19	; 0x1c
     5de:	db 01       	movw	r26, r22
     5e0:	ca 01       	movw	r24, r20
     5e2:	8f 77       	andi	r24, 0x7F	; 127
     5e4:	90 70       	andi	r25, 0x00	; 0
     5e6:	a0 70       	andi	r26, 0x00	; 0
     5e8:	b0 70       	andi	r27, 0x00	; 0
     5ea:	80 34       	cpi	r24, 0x40	; 64
     5ec:	91 05       	cpc	r25, r1
     5ee:	a1 05       	cpc	r26, r1
     5f0:	b1 05       	cpc	r27, r1
     5f2:	61 f4       	brne	.+24     	; 0x60c <__mulsf3+0x1ce>
     5f4:	47 fd       	sbrc	r20, 7
     5f6:	0a c0       	rjmp	.+20     	; 0x60c <__mulsf3+0x1ce>
     5f8:	e1 14       	cp	r14, r1
     5fa:	f1 04       	cpc	r15, r1
     5fc:	01 05       	cpc	r16, r1
     5fe:	11 05       	cpc	r17, r1
     600:	29 f0       	breq	.+10     	; 0x60c <__mulsf3+0x1ce>
     602:	40 5c       	subi	r20, 0xC0	; 192
     604:	5f 4f       	sbci	r21, 0xFF	; 255
     606:	6f 4f       	sbci	r22, 0xFF	; 255
     608:	7f 4f       	sbci	r23, 0xFF	; 255
     60a:	40 78       	andi	r20, 0x80	; 128
     60c:	1a 8e       	std	Y+26, r1	; 0x1a
     60e:	fe 17       	cp	r31, r30
     610:	11 f0       	breq	.+4      	; 0x616 <__mulsf3+0x1d8>
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	8a 8f       	std	Y+26, r24	; 0x1a
     616:	4d 8f       	std	Y+29, r20	; 0x1d
     618:	5e 8f       	std	Y+30, r21	; 0x1e
     61a:	6f 8f       	std	Y+31, r22	; 0x1f
     61c:	78 a3       	std	Y+32, r23	; 0x20
     61e:	83 e0       	ldi	r24, 0x03	; 3
     620:	89 8f       	std	Y+25, r24	; 0x19
     622:	ce 01       	movw	r24, r28
     624:	49 96       	adiw	r24, 0x19	; 25
     626:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     62a:	a0 96       	adiw	r28, 0x20	; 32
     62c:	e2 e1       	ldi	r30, 0x12	; 18
     62e:	0c 94 fb 11 	jmp	0x23f6	; 0x23f6 <__epilogue_restores__>

00000632 <__gtsf2>:
     632:	a8 e1       	ldi	r26, 0x18	; 24
     634:	b0 e0       	ldi	r27, 0x00	; 0
     636:	ef e1       	ldi	r30, 0x1F	; 31
     638:	f3 e0       	ldi	r31, 0x03	; 3
     63a:	0c 94 eb 11 	jmp	0x23d6	; 0x23d6 <__prologue_saves__+0x18>
     63e:	69 83       	std	Y+1, r22	; 0x01
     640:	7a 83       	std	Y+2, r23	; 0x02
     642:	8b 83       	std	Y+3, r24	; 0x03
     644:	9c 83       	std	Y+4, r25	; 0x04
     646:	2d 83       	std	Y+5, r18	; 0x05
     648:	3e 83       	std	Y+6, r19	; 0x06
     64a:	4f 83       	std	Y+7, r20	; 0x07
     64c:	58 87       	std	Y+8, r21	; 0x08
     64e:	89 e0       	ldi	r24, 0x09	; 9
     650:	e8 2e       	mov	r14, r24
     652:	f1 2c       	mov	r15, r1
     654:	ec 0e       	add	r14, r28
     656:	fd 1e       	adc	r15, r29
     658:	ce 01       	movw	r24, r28
     65a:	01 96       	adiw	r24, 0x01	; 1
     65c:	b7 01       	movw	r22, r14
     65e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     662:	8e 01       	movw	r16, r28
     664:	0f 5e       	subi	r16, 0xEF	; 239
     666:	1f 4f       	sbci	r17, 0xFF	; 255
     668:	ce 01       	movw	r24, r28
     66a:	05 96       	adiw	r24, 0x05	; 5
     66c:	b8 01       	movw	r22, r16
     66e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     672:	89 85       	ldd	r24, Y+9	; 0x09
     674:	82 30       	cpi	r24, 0x02	; 2
     676:	40 f0       	brcs	.+16     	; 0x688 <__gtsf2+0x56>
     678:	89 89       	ldd	r24, Y+17	; 0x11
     67a:	82 30       	cpi	r24, 0x02	; 2
     67c:	28 f0       	brcs	.+10     	; 0x688 <__gtsf2+0x56>
     67e:	c7 01       	movw	r24, r14
     680:	b8 01       	movw	r22, r16
     682:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     686:	01 c0       	rjmp	.+2      	; 0x68a <__gtsf2+0x58>
     688:	8f ef       	ldi	r24, 0xFF	; 255
     68a:	68 96       	adiw	r28, 0x18	; 24
     68c:	e6 e0       	ldi	r30, 0x06	; 6
     68e:	0c 94 07 12 	jmp	0x240e	; 0x240e <__epilogue_restores__+0x18>

00000692 <__gesf2>:
     692:	a8 e1       	ldi	r26, 0x18	; 24
     694:	b0 e0       	ldi	r27, 0x00	; 0
     696:	ef e4       	ldi	r30, 0x4F	; 79
     698:	f3 e0       	ldi	r31, 0x03	; 3
     69a:	0c 94 eb 11 	jmp	0x23d6	; 0x23d6 <__prologue_saves__+0x18>
     69e:	69 83       	std	Y+1, r22	; 0x01
     6a0:	7a 83       	std	Y+2, r23	; 0x02
     6a2:	8b 83       	std	Y+3, r24	; 0x03
     6a4:	9c 83       	std	Y+4, r25	; 0x04
     6a6:	2d 83       	std	Y+5, r18	; 0x05
     6a8:	3e 83       	std	Y+6, r19	; 0x06
     6aa:	4f 83       	std	Y+7, r20	; 0x07
     6ac:	58 87       	std	Y+8, r21	; 0x08
     6ae:	89 e0       	ldi	r24, 0x09	; 9
     6b0:	e8 2e       	mov	r14, r24
     6b2:	f1 2c       	mov	r15, r1
     6b4:	ec 0e       	add	r14, r28
     6b6:	fd 1e       	adc	r15, r29
     6b8:	ce 01       	movw	r24, r28
     6ba:	01 96       	adiw	r24, 0x01	; 1
     6bc:	b7 01       	movw	r22, r14
     6be:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     6c2:	8e 01       	movw	r16, r28
     6c4:	0f 5e       	subi	r16, 0xEF	; 239
     6c6:	1f 4f       	sbci	r17, 0xFF	; 255
     6c8:	ce 01       	movw	r24, r28
     6ca:	05 96       	adiw	r24, 0x05	; 5
     6cc:	b8 01       	movw	r22, r16
     6ce:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     6d2:	89 85       	ldd	r24, Y+9	; 0x09
     6d4:	82 30       	cpi	r24, 0x02	; 2
     6d6:	40 f0       	brcs	.+16     	; 0x6e8 <__gesf2+0x56>
     6d8:	89 89       	ldd	r24, Y+17	; 0x11
     6da:	82 30       	cpi	r24, 0x02	; 2
     6dc:	28 f0       	brcs	.+10     	; 0x6e8 <__gesf2+0x56>
     6de:	c7 01       	movw	r24, r14
     6e0:	b8 01       	movw	r22, r16
     6e2:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     6e6:	01 c0       	rjmp	.+2      	; 0x6ea <__gesf2+0x58>
     6e8:	8f ef       	ldi	r24, 0xFF	; 255
     6ea:	68 96       	adiw	r28, 0x18	; 24
     6ec:	e6 e0       	ldi	r30, 0x06	; 6
     6ee:	0c 94 07 12 	jmp	0x240e	; 0x240e <__epilogue_restores__+0x18>

000006f2 <__ltsf2>:
     6f2:	a8 e1       	ldi	r26, 0x18	; 24
     6f4:	b0 e0       	ldi	r27, 0x00	; 0
     6f6:	ef e7       	ldi	r30, 0x7F	; 127
     6f8:	f3 e0       	ldi	r31, 0x03	; 3
     6fa:	0c 94 eb 11 	jmp	0x23d6	; 0x23d6 <__prologue_saves__+0x18>
     6fe:	69 83       	std	Y+1, r22	; 0x01
     700:	7a 83       	std	Y+2, r23	; 0x02
     702:	8b 83       	std	Y+3, r24	; 0x03
     704:	9c 83       	std	Y+4, r25	; 0x04
     706:	2d 83       	std	Y+5, r18	; 0x05
     708:	3e 83       	std	Y+6, r19	; 0x06
     70a:	4f 83       	std	Y+7, r20	; 0x07
     70c:	58 87       	std	Y+8, r21	; 0x08
     70e:	89 e0       	ldi	r24, 0x09	; 9
     710:	e8 2e       	mov	r14, r24
     712:	f1 2c       	mov	r15, r1
     714:	ec 0e       	add	r14, r28
     716:	fd 1e       	adc	r15, r29
     718:	ce 01       	movw	r24, r28
     71a:	01 96       	adiw	r24, 0x01	; 1
     71c:	b7 01       	movw	r22, r14
     71e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     722:	8e 01       	movw	r16, r28
     724:	0f 5e       	subi	r16, 0xEF	; 239
     726:	1f 4f       	sbci	r17, 0xFF	; 255
     728:	ce 01       	movw	r24, r28
     72a:	05 96       	adiw	r24, 0x05	; 5
     72c:	b8 01       	movw	r22, r16
     72e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     732:	89 85       	ldd	r24, Y+9	; 0x09
     734:	82 30       	cpi	r24, 0x02	; 2
     736:	40 f0       	brcs	.+16     	; 0x748 <__ltsf2+0x56>
     738:	89 89       	ldd	r24, Y+17	; 0x11
     73a:	82 30       	cpi	r24, 0x02	; 2
     73c:	28 f0       	brcs	.+10     	; 0x748 <__ltsf2+0x56>
     73e:	c7 01       	movw	r24, r14
     740:	b8 01       	movw	r22, r16
     742:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     746:	01 c0       	rjmp	.+2      	; 0x74a <__ltsf2+0x58>
     748:	81 e0       	ldi	r24, 0x01	; 1
     74a:	68 96       	adiw	r28, 0x18	; 24
     74c:	e6 e0       	ldi	r30, 0x06	; 6
     74e:	0c 94 07 12 	jmp	0x240e	; 0x240e <__epilogue_restores__+0x18>

00000752 <__fixsfsi>:
     752:	ac e0       	ldi	r26, 0x0C	; 12
     754:	b0 e0       	ldi	r27, 0x00	; 0
     756:	ef ea       	ldi	r30, 0xAF	; 175
     758:	f3 e0       	ldi	r31, 0x03	; 3
     75a:	0c 94 ef 11 	jmp	0x23de	; 0x23de <__prologue_saves__+0x20>
     75e:	69 83       	std	Y+1, r22	; 0x01
     760:	7a 83       	std	Y+2, r23	; 0x02
     762:	8b 83       	std	Y+3, r24	; 0x03
     764:	9c 83       	std	Y+4, r25	; 0x04
     766:	ce 01       	movw	r24, r28
     768:	01 96       	adiw	r24, 0x01	; 1
     76a:	be 01       	movw	r22, r28
     76c:	6b 5f       	subi	r22, 0xFB	; 251
     76e:	7f 4f       	sbci	r23, 0xFF	; 255
     770:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     774:	8d 81       	ldd	r24, Y+5	; 0x05
     776:	82 30       	cpi	r24, 0x02	; 2
     778:	61 f1       	breq	.+88     	; 0x7d2 <__fixsfsi+0x80>
     77a:	82 30       	cpi	r24, 0x02	; 2
     77c:	50 f1       	brcs	.+84     	; 0x7d2 <__fixsfsi+0x80>
     77e:	84 30       	cpi	r24, 0x04	; 4
     780:	21 f4       	brne	.+8      	; 0x78a <__fixsfsi+0x38>
     782:	8e 81       	ldd	r24, Y+6	; 0x06
     784:	88 23       	and	r24, r24
     786:	51 f1       	breq	.+84     	; 0x7dc <__fixsfsi+0x8a>
     788:	2e c0       	rjmp	.+92     	; 0x7e6 <__fixsfsi+0x94>
     78a:	2f 81       	ldd	r18, Y+7	; 0x07
     78c:	38 85       	ldd	r19, Y+8	; 0x08
     78e:	37 fd       	sbrc	r19, 7
     790:	20 c0       	rjmp	.+64     	; 0x7d2 <__fixsfsi+0x80>
     792:	6e 81       	ldd	r22, Y+6	; 0x06
     794:	2f 31       	cpi	r18, 0x1F	; 31
     796:	31 05       	cpc	r19, r1
     798:	1c f0       	brlt	.+6      	; 0x7a0 <__fixsfsi+0x4e>
     79a:	66 23       	and	r22, r22
     79c:	f9 f0       	breq	.+62     	; 0x7dc <__fixsfsi+0x8a>
     79e:	23 c0       	rjmp	.+70     	; 0x7e6 <__fixsfsi+0x94>
     7a0:	8e e1       	ldi	r24, 0x1E	; 30
     7a2:	90 e0       	ldi	r25, 0x00	; 0
     7a4:	82 1b       	sub	r24, r18
     7a6:	93 0b       	sbc	r25, r19
     7a8:	29 85       	ldd	r18, Y+9	; 0x09
     7aa:	3a 85       	ldd	r19, Y+10	; 0x0a
     7ac:	4b 85       	ldd	r20, Y+11	; 0x0b
     7ae:	5c 85       	ldd	r21, Y+12	; 0x0c
     7b0:	04 c0       	rjmp	.+8      	; 0x7ba <__fixsfsi+0x68>
     7b2:	56 95       	lsr	r21
     7b4:	47 95       	ror	r20
     7b6:	37 95       	ror	r19
     7b8:	27 95       	ror	r18
     7ba:	8a 95       	dec	r24
     7bc:	d2 f7       	brpl	.-12     	; 0x7b2 <__fixsfsi+0x60>
     7be:	66 23       	and	r22, r22
     7c0:	b1 f0       	breq	.+44     	; 0x7ee <__fixsfsi+0x9c>
     7c2:	50 95       	com	r21
     7c4:	40 95       	com	r20
     7c6:	30 95       	com	r19
     7c8:	21 95       	neg	r18
     7ca:	3f 4f       	sbci	r19, 0xFF	; 255
     7cc:	4f 4f       	sbci	r20, 0xFF	; 255
     7ce:	5f 4f       	sbci	r21, 0xFF	; 255
     7d0:	0e c0       	rjmp	.+28     	; 0x7ee <__fixsfsi+0x9c>
     7d2:	20 e0       	ldi	r18, 0x00	; 0
     7d4:	30 e0       	ldi	r19, 0x00	; 0
     7d6:	40 e0       	ldi	r20, 0x00	; 0
     7d8:	50 e0       	ldi	r21, 0x00	; 0
     7da:	09 c0       	rjmp	.+18     	; 0x7ee <__fixsfsi+0x9c>
     7dc:	2f ef       	ldi	r18, 0xFF	; 255
     7de:	3f ef       	ldi	r19, 0xFF	; 255
     7e0:	4f ef       	ldi	r20, 0xFF	; 255
     7e2:	5f e7       	ldi	r21, 0x7F	; 127
     7e4:	04 c0       	rjmp	.+8      	; 0x7ee <__fixsfsi+0x9c>
     7e6:	20 e0       	ldi	r18, 0x00	; 0
     7e8:	30 e0       	ldi	r19, 0x00	; 0
     7ea:	40 e0       	ldi	r20, 0x00	; 0
     7ec:	50 e8       	ldi	r21, 0x80	; 128
     7ee:	b9 01       	movw	r22, r18
     7f0:	ca 01       	movw	r24, r20
     7f2:	2c 96       	adiw	r28, 0x0c	; 12
     7f4:	e2 e0       	ldi	r30, 0x02	; 2
     7f6:	0c 94 0b 12 	jmp	0x2416	; 0x2416 <__epilogue_restores__+0x20>

000007fa <__pack_f>:
     7fa:	df 92       	push	r13
     7fc:	ef 92       	push	r14
     7fe:	ff 92       	push	r15
     800:	0f 93       	push	r16
     802:	1f 93       	push	r17
     804:	fc 01       	movw	r30, r24
     806:	e4 80       	ldd	r14, Z+4	; 0x04
     808:	f5 80       	ldd	r15, Z+5	; 0x05
     80a:	06 81       	ldd	r16, Z+6	; 0x06
     80c:	17 81       	ldd	r17, Z+7	; 0x07
     80e:	d1 80       	ldd	r13, Z+1	; 0x01
     810:	80 81       	ld	r24, Z
     812:	82 30       	cpi	r24, 0x02	; 2
     814:	48 f4       	brcc	.+18     	; 0x828 <__pack_f+0x2e>
     816:	80 e0       	ldi	r24, 0x00	; 0
     818:	90 e0       	ldi	r25, 0x00	; 0
     81a:	a0 e1       	ldi	r26, 0x10	; 16
     81c:	b0 e0       	ldi	r27, 0x00	; 0
     81e:	e8 2a       	or	r14, r24
     820:	f9 2a       	or	r15, r25
     822:	0a 2b       	or	r16, r26
     824:	1b 2b       	or	r17, r27
     826:	a5 c0       	rjmp	.+330    	; 0x972 <__stack+0x113>
     828:	84 30       	cpi	r24, 0x04	; 4
     82a:	09 f4       	brne	.+2      	; 0x82e <__pack_f+0x34>
     82c:	9f c0       	rjmp	.+318    	; 0x96c <__stack+0x10d>
     82e:	82 30       	cpi	r24, 0x02	; 2
     830:	21 f4       	brne	.+8      	; 0x83a <__pack_f+0x40>
     832:	ee 24       	eor	r14, r14
     834:	ff 24       	eor	r15, r15
     836:	87 01       	movw	r16, r14
     838:	05 c0       	rjmp	.+10     	; 0x844 <__pack_f+0x4a>
     83a:	e1 14       	cp	r14, r1
     83c:	f1 04       	cpc	r15, r1
     83e:	01 05       	cpc	r16, r1
     840:	11 05       	cpc	r17, r1
     842:	19 f4       	brne	.+6      	; 0x84a <__pack_f+0x50>
     844:	e0 e0       	ldi	r30, 0x00	; 0
     846:	f0 e0       	ldi	r31, 0x00	; 0
     848:	96 c0       	rjmp	.+300    	; 0x976 <__stack+0x117>
     84a:	62 81       	ldd	r22, Z+2	; 0x02
     84c:	73 81       	ldd	r23, Z+3	; 0x03
     84e:	9f ef       	ldi	r25, 0xFF	; 255
     850:	62 38       	cpi	r22, 0x82	; 130
     852:	79 07       	cpc	r23, r25
     854:	0c f0       	brlt	.+2      	; 0x858 <__pack_f+0x5e>
     856:	5b c0       	rjmp	.+182    	; 0x90e <__stack+0xaf>
     858:	22 e8       	ldi	r18, 0x82	; 130
     85a:	3f ef       	ldi	r19, 0xFF	; 255
     85c:	26 1b       	sub	r18, r22
     85e:	37 0b       	sbc	r19, r23
     860:	2a 31       	cpi	r18, 0x1A	; 26
     862:	31 05       	cpc	r19, r1
     864:	2c f0       	brlt	.+10     	; 0x870 <__stack+0x11>
     866:	20 e0       	ldi	r18, 0x00	; 0
     868:	30 e0       	ldi	r19, 0x00	; 0
     86a:	40 e0       	ldi	r20, 0x00	; 0
     86c:	50 e0       	ldi	r21, 0x00	; 0
     86e:	2a c0       	rjmp	.+84     	; 0x8c4 <__stack+0x65>
     870:	b8 01       	movw	r22, r16
     872:	a7 01       	movw	r20, r14
     874:	02 2e       	mov	r0, r18
     876:	04 c0       	rjmp	.+8      	; 0x880 <__stack+0x21>
     878:	76 95       	lsr	r23
     87a:	67 95       	ror	r22
     87c:	57 95       	ror	r21
     87e:	47 95       	ror	r20
     880:	0a 94       	dec	r0
     882:	d2 f7       	brpl	.-12     	; 0x878 <__stack+0x19>
     884:	81 e0       	ldi	r24, 0x01	; 1
     886:	90 e0       	ldi	r25, 0x00	; 0
     888:	a0 e0       	ldi	r26, 0x00	; 0
     88a:	b0 e0       	ldi	r27, 0x00	; 0
     88c:	04 c0       	rjmp	.+8      	; 0x896 <__stack+0x37>
     88e:	88 0f       	add	r24, r24
     890:	99 1f       	adc	r25, r25
     892:	aa 1f       	adc	r26, r26
     894:	bb 1f       	adc	r27, r27
     896:	2a 95       	dec	r18
     898:	d2 f7       	brpl	.-12     	; 0x88e <__stack+0x2f>
     89a:	01 97       	sbiw	r24, 0x01	; 1
     89c:	a1 09       	sbc	r26, r1
     89e:	b1 09       	sbc	r27, r1
     8a0:	8e 21       	and	r24, r14
     8a2:	9f 21       	and	r25, r15
     8a4:	a0 23       	and	r26, r16
     8a6:	b1 23       	and	r27, r17
     8a8:	00 97       	sbiw	r24, 0x00	; 0
     8aa:	a1 05       	cpc	r26, r1
     8ac:	b1 05       	cpc	r27, r1
     8ae:	21 f0       	breq	.+8      	; 0x8b8 <__stack+0x59>
     8b0:	81 e0       	ldi	r24, 0x01	; 1
     8b2:	90 e0       	ldi	r25, 0x00	; 0
     8b4:	a0 e0       	ldi	r26, 0x00	; 0
     8b6:	b0 e0       	ldi	r27, 0x00	; 0
     8b8:	9a 01       	movw	r18, r20
     8ba:	ab 01       	movw	r20, r22
     8bc:	28 2b       	or	r18, r24
     8be:	39 2b       	or	r19, r25
     8c0:	4a 2b       	or	r20, r26
     8c2:	5b 2b       	or	r21, r27
     8c4:	da 01       	movw	r26, r20
     8c6:	c9 01       	movw	r24, r18
     8c8:	8f 77       	andi	r24, 0x7F	; 127
     8ca:	90 70       	andi	r25, 0x00	; 0
     8cc:	a0 70       	andi	r26, 0x00	; 0
     8ce:	b0 70       	andi	r27, 0x00	; 0
     8d0:	80 34       	cpi	r24, 0x40	; 64
     8d2:	91 05       	cpc	r25, r1
     8d4:	a1 05       	cpc	r26, r1
     8d6:	b1 05       	cpc	r27, r1
     8d8:	39 f4       	brne	.+14     	; 0x8e8 <__stack+0x89>
     8da:	27 ff       	sbrs	r18, 7
     8dc:	09 c0       	rjmp	.+18     	; 0x8f0 <__stack+0x91>
     8de:	20 5c       	subi	r18, 0xC0	; 192
     8e0:	3f 4f       	sbci	r19, 0xFF	; 255
     8e2:	4f 4f       	sbci	r20, 0xFF	; 255
     8e4:	5f 4f       	sbci	r21, 0xFF	; 255
     8e6:	04 c0       	rjmp	.+8      	; 0x8f0 <__stack+0x91>
     8e8:	21 5c       	subi	r18, 0xC1	; 193
     8ea:	3f 4f       	sbci	r19, 0xFF	; 255
     8ec:	4f 4f       	sbci	r20, 0xFF	; 255
     8ee:	5f 4f       	sbci	r21, 0xFF	; 255
     8f0:	e0 e0       	ldi	r30, 0x00	; 0
     8f2:	f0 e0       	ldi	r31, 0x00	; 0
     8f4:	20 30       	cpi	r18, 0x00	; 0
     8f6:	a0 e0       	ldi	r26, 0x00	; 0
     8f8:	3a 07       	cpc	r19, r26
     8fa:	a0 e0       	ldi	r26, 0x00	; 0
     8fc:	4a 07       	cpc	r20, r26
     8fe:	a0 e4       	ldi	r26, 0x40	; 64
     900:	5a 07       	cpc	r21, r26
     902:	10 f0       	brcs	.+4      	; 0x908 <__stack+0xa9>
     904:	e1 e0       	ldi	r30, 0x01	; 1
     906:	f0 e0       	ldi	r31, 0x00	; 0
     908:	79 01       	movw	r14, r18
     90a:	8a 01       	movw	r16, r20
     90c:	27 c0       	rjmp	.+78     	; 0x95c <__stack+0xfd>
     90e:	60 38       	cpi	r22, 0x80	; 128
     910:	71 05       	cpc	r23, r1
     912:	64 f5       	brge	.+88     	; 0x96c <__stack+0x10d>
     914:	fb 01       	movw	r30, r22
     916:	e1 58       	subi	r30, 0x81	; 129
     918:	ff 4f       	sbci	r31, 0xFF	; 255
     91a:	d8 01       	movw	r26, r16
     91c:	c7 01       	movw	r24, r14
     91e:	8f 77       	andi	r24, 0x7F	; 127
     920:	90 70       	andi	r25, 0x00	; 0
     922:	a0 70       	andi	r26, 0x00	; 0
     924:	b0 70       	andi	r27, 0x00	; 0
     926:	80 34       	cpi	r24, 0x40	; 64
     928:	91 05       	cpc	r25, r1
     92a:	a1 05       	cpc	r26, r1
     92c:	b1 05       	cpc	r27, r1
     92e:	39 f4       	brne	.+14     	; 0x93e <__stack+0xdf>
     930:	e7 fe       	sbrs	r14, 7
     932:	0d c0       	rjmp	.+26     	; 0x94e <__stack+0xef>
     934:	80 e4       	ldi	r24, 0x40	; 64
     936:	90 e0       	ldi	r25, 0x00	; 0
     938:	a0 e0       	ldi	r26, 0x00	; 0
     93a:	b0 e0       	ldi	r27, 0x00	; 0
     93c:	04 c0       	rjmp	.+8      	; 0x946 <__stack+0xe7>
     93e:	8f e3       	ldi	r24, 0x3F	; 63
     940:	90 e0       	ldi	r25, 0x00	; 0
     942:	a0 e0       	ldi	r26, 0x00	; 0
     944:	b0 e0       	ldi	r27, 0x00	; 0
     946:	e8 0e       	add	r14, r24
     948:	f9 1e       	adc	r15, r25
     94a:	0a 1f       	adc	r16, r26
     94c:	1b 1f       	adc	r17, r27
     94e:	17 ff       	sbrs	r17, 7
     950:	05 c0       	rjmp	.+10     	; 0x95c <__stack+0xfd>
     952:	16 95       	lsr	r17
     954:	07 95       	ror	r16
     956:	f7 94       	ror	r15
     958:	e7 94       	ror	r14
     95a:	31 96       	adiw	r30, 0x01	; 1
     95c:	87 e0       	ldi	r24, 0x07	; 7
     95e:	16 95       	lsr	r17
     960:	07 95       	ror	r16
     962:	f7 94       	ror	r15
     964:	e7 94       	ror	r14
     966:	8a 95       	dec	r24
     968:	d1 f7       	brne	.-12     	; 0x95e <__stack+0xff>
     96a:	05 c0       	rjmp	.+10     	; 0x976 <__stack+0x117>
     96c:	ee 24       	eor	r14, r14
     96e:	ff 24       	eor	r15, r15
     970:	87 01       	movw	r16, r14
     972:	ef ef       	ldi	r30, 0xFF	; 255
     974:	f0 e0       	ldi	r31, 0x00	; 0
     976:	6e 2f       	mov	r22, r30
     978:	67 95       	ror	r22
     97a:	66 27       	eor	r22, r22
     97c:	67 95       	ror	r22
     97e:	90 2f       	mov	r25, r16
     980:	9f 77       	andi	r25, 0x7F	; 127
     982:	d7 94       	ror	r13
     984:	dd 24       	eor	r13, r13
     986:	d7 94       	ror	r13
     988:	8e 2f       	mov	r24, r30
     98a:	86 95       	lsr	r24
     98c:	49 2f       	mov	r20, r25
     98e:	46 2b       	or	r20, r22
     990:	58 2f       	mov	r21, r24
     992:	5d 29       	or	r21, r13
     994:	b7 01       	movw	r22, r14
     996:	ca 01       	movw	r24, r20
     998:	1f 91       	pop	r17
     99a:	0f 91       	pop	r16
     99c:	ff 90       	pop	r15
     99e:	ef 90       	pop	r14
     9a0:	df 90       	pop	r13
     9a2:	08 95       	ret

000009a4 <__unpack_f>:
     9a4:	fc 01       	movw	r30, r24
     9a6:	db 01       	movw	r26, r22
     9a8:	40 81       	ld	r20, Z
     9aa:	51 81       	ldd	r21, Z+1	; 0x01
     9ac:	22 81       	ldd	r18, Z+2	; 0x02
     9ae:	62 2f       	mov	r22, r18
     9b0:	6f 77       	andi	r22, 0x7F	; 127
     9b2:	70 e0       	ldi	r23, 0x00	; 0
     9b4:	22 1f       	adc	r18, r18
     9b6:	22 27       	eor	r18, r18
     9b8:	22 1f       	adc	r18, r18
     9ba:	93 81       	ldd	r25, Z+3	; 0x03
     9bc:	89 2f       	mov	r24, r25
     9be:	88 0f       	add	r24, r24
     9c0:	82 2b       	or	r24, r18
     9c2:	28 2f       	mov	r18, r24
     9c4:	30 e0       	ldi	r19, 0x00	; 0
     9c6:	99 1f       	adc	r25, r25
     9c8:	99 27       	eor	r25, r25
     9ca:	99 1f       	adc	r25, r25
     9cc:	11 96       	adiw	r26, 0x01	; 1
     9ce:	9c 93       	st	X, r25
     9d0:	11 97       	sbiw	r26, 0x01	; 1
     9d2:	21 15       	cp	r18, r1
     9d4:	31 05       	cpc	r19, r1
     9d6:	a9 f5       	brne	.+106    	; 0xa42 <__unpack_f+0x9e>
     9d8:	41 15       	cp	r20, r1
     9da:	51 05       	cpc	r21, r1
     9dc:	61 05       	cpc	r22, r1
     9de:	71 05       	cpc	r23, r1
     9e0:	11 f4       	brne	.+4      	; 0x9e6 <__unpack_f+0x42>
     9e2:	82 e0       	ldi	r24, 0x02	; 2
     9e4:	37 c0       	rjmp	.+110    	; 0xa54 <__unpack_f+0xb0>
     9e6:	82 e8       	ldi	r24, 0x82	; 130
     9e8:	9f ef       	ldi	r25, 0xFF	; 255
     9ea:	13 96       	adiw	r26, 0x03	; 3
     9ec:	9c 93       	st	X, r25
     9ee:	8e 93       	st	-X, r24
     9f0:	12 97       	sbiw	r26, 0x02	; 2
     9f2:	9a 01       	movw	r18, r20
     9f4:	ab 01       	movw	r20, r22
     9f6:	67 e0       	ldi	r22, 0x07	; 7
     9f8:	22 0f       	add	r18, r18
     9fa:	33 1f       	adc	r19, r19
     9fc:	44 1f       	adc	r20, r20
     9fe:	55 1f       	adc	r21, r21
     a00:	6a 95       	dec	r22
     a02:	d1 f7       	brne	.-12     	; 0x9f8 <__unpack_f+0x54>
     a04:	83 e0       	ldi	r24, 0x03	; 3
     a06:	8c 93       	st	X, r24
     a08:	0d c0       	rjmp	.+26     	; 0xa24 <__unpack_f+0x80>
     a0a:	22 0f       	add	r18, r18
     a0c:	33 1f       	adc	r19, r19
     a0e:	44 1f       	adc	r20, r20
     a10:	55 1f       	adc	r21, r21
     a12:	12 96       	adiw	r26, 0x02	; 2
     a14:	8d 91       	ld	r24, X+
     a16:	9c 91       	ld	r25, X
     a18:	13 97       	sbiw	r26, 0x03	; 3
     a1a:	01 97       	sbiw	r24, 0x01	; 1
     a1c:	13 96       	adiw	r26, 0x03	; 3
     a1e:	9c 93       	st	X, r25
     a20:	8e 93       	st	-X, r24
     a22:	12 97       	sbiw	r26, 0x02	; 2
     a24:	20 30       	cpi	r18, 0x00	; 0
     a26:	80 e0       	ldi	r24, 0x00	; 0
     a28:	38 07       	cpc	r19, r24
     a2a:	80 e0       	ldi	r24, 0x00	; 0
     a2c:	48 07       	cpc	r20, r24
     a2e:	80 e4       	ldi	r24, 0x40	; 64
     a30:	58 07       	cpc	r21, r24
     a32:	58 f3       	brcs	.-42     	; 0xa0a <__unpack_f+0x66>
     a34:	14 96       	adiw	r26, 0x04	; 4
     a36:	2d 93       	st	X+, r18
     a38:	3d 93       	st	X+, r19
     a3a:	4d 93       	st	X+, r20
     a3c:	5c 93       	st	X, r21
     a3e:	17 97       	sbiw	r26, 0x07	; 7
     a40:	08 95       	ret
     a42:	2f 3f       	cpi	r18, 0xFF	; 255
     a44:	31 05       	cpc	r19, r1
     a46:	79 f4       	brne	.+30     	; 0xa66 <__unpack_f+0xc2>
     a48:	41 15       	cp	r20, r1
     a4a:	51 05       	cpc	r21, r1
     a4c:	61 05       	cpc	r22, r1
     a4e:	71 05       	cpc	r23, r1
     a50:	19 f4       	brne	.+6      	; 0xa58 <__unpack_f+0xb4>
     a52:	84 e0       	ldi	r24, 0x04	; 4
     a54:	8c 93       	st	X, r24
     a56:	08 95       	ret
     a58:	64 ff       	sbrs	r22, 4
     a5a:	03 c0       	rjmp	.+6      	; 0xa62 <__unpack_f+0xbe>
     a5c:	81 e0       	ldi	r24, 0x01	; 1
     a5e:	8c 93       	st	X, r24
     a60:	12 c0       	rjmp	.+36     	; 0xa86 <__unpack_f+0xe2>
     a62:	1c 92       	st	X, r1
     a64:	10 c0       	rjmp	.+32     	; 0xa86 <__unpack_f+0xe2>
     a66:	2f 57       	subi	r18, 0x7F	; 127
     a68:	30 40       	sbci	r19, 0x00	; 0
     a6a:	13 96       	adiw	r26, 0x03	; 3
     a6c:	3c 93       	st	X, r19
     a6e:	2e 93       	st	-X, r18
     a70:	12 97       	sbiw	r26, 0x02	; 2
     a72:	83 e0       	ldi	r24, 0x03	; 3
     a74:	8c 93       	st	X, r24
     a76:	87 e0       	ldi	r24, 0x07	; 7
     a78:	44 0f       	add	r20, r20
     a7a:	55 1f       	adc	r21, r21
     a7c:	66 1f       	adc	r22, r22
     a7e:	77 1f       	adc	r23, r23
     a80:	8a 95       	dec	r24
     a82:	d1 f7       	brne	.-12     	; 0xa78 <__unpack_f+0xd4>
     a84:	70 64       	ori	r23, 0x40	; 64
     a86:	14 96       	adiw	r26, 0x04	; 4
     a88:	4d 93       	st	X+, r20
     a8a:	5d 93       	st	X+, r21
     a8c:	6d 93       	st	X+, r22
     a8e:	7c 93       	st	X, r23
     a90:	17 97       	sbiw	r26, 0x07	; 7
     a92:	08 95       	ret

00000a94 <__fpcmp_parts_f>:
     a94:	1f 93       	push	r17
     a96:	dc 01       	movw	r26, r24
     a98:	fb 01       	movw	r30, r22
     a9a:	9c 91       	ld	r25, X
     a9c:	92 30       	cpi	r25, 0x02	; 2
     a9e:	08 f4       	brcc	.+2      	; 0xaa2 <__fpcmp_parts_f+0xe>
     aa0:	47 c0       	rjmp	.+142    	; 0xb30 <__fpcmp_parts_f+0x9c>
     aa2:	80 81       	ld	r24, Z
     aa4:	82 30       	cpi	r24, 0x02	; 2
     aa6:	08 f4       	brcc	.+2      	; 0xaaa <__fpcmp_parts_f+0x16>
     aa8:	43 c0       	rjmp	.+134    	; 0xb30 <__fpcmp_parts_f+0x9c>
     aaa:	94 30       	cpi	r25, 0x04	; 4
     aac:	51 f4       	brne	.+20     	; 0xac2 <__fpcmp_parts_f+0x2e>
     aae:	11 96       	adiw	r26, 0x01	; 1
     ab0:	1c 91       	ld	r17, X
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	99 f5       	brne	.+102    	; 0xb1c <__fpcmp_parts_f+0x88>
     ab6:	81 81       	ldd	r24, Z+1	; 0x01
     ab8:	68 2f       	mov	r22, r24
     aba:	70 e0       	ldi	r23, 0x00	; 0
     abc:	61 1b       	sub	r22, r17
     abe:	71 09       	sbc	r23, r1
     ac0:	3f c0       	rjmp	.+126    	; 0xb40 <__fpcmp_parts_f+0xac>
     ac2:	84 30       	cpi	r24, 0x04	; 4
     ac4:	21 f0       	breq	.+8      	; 0xace <__fpcmp_parts_f+0x3a>
     ac6:	92 30       	cpi	r25, 0x02	; 2
     ac8:	31 f4       	brne	.+12     	; 0xad6 <__fpcmp_parts_f+0x42>
     aca:	82 30       	cpi	r24, 0x02	; 2
     acc:	b9 f1       	breq	.+110    	; 0xb3c <__fpcmp_parts_f+0xa8>
     ace:	81 81       	ldd	r24, Z+1	; 0x01
     ad0:	88 23       	and	r24, r24
     ad2:	89 f1       	breq	.+98     	; 0xb36 <__fpcmp_parts_f+0xa2>
     ad4:	2d c0       	rjmp	.+90     	; 0xb30 <__fpcmp_parts_f+0x9c>
     ad6:	11 96       	adiw	r26, 0x01	; 1
     ad8:	1c 91       	ld	r17, X
     ada:	11 97       	sbiw	r26, 0x01	; 1
     adc:	82 30       	cpi	r24, 0x02	; 2
     ade:	f1 f0       	breq	.+60     	; 0xb1c <__fpcmp_parts_f+0x88>
     ae0:	81 81       	ldd	r24, Z+1	; 0x01
     ae2:	18 17       	cp	r17, r24
     ae4:	d9 f4       	brne	.+54     	; 0xb1c <__fpcmp_parts_f+0x88>
     ae6:	12 96       	adiw	r26, 0x02	; 2
     ae8:	2d 91       	ld	r18, X+
     aea:	3c 91       	ld	r19, X
     aec:	13 97       	sbiw	r26, 0x03	; 3
     aee:	82 81       	ldd	r24, Z+2	; 0x02
     af0:	93 81       	ldd	r25, Z+3	; 0x03
     af2:	82 17       	cp	r24, r18
     af4:	93 07       	cpc	r25, r19
     af6:	94 f0       	brlt	.+36     	; 0xb1c <__fpcmp_parts_f+0x88>
     af8:	28 17       	cp	r18, r24
     afa:	39 07       	cpc	r19, r25
     afc:	bc f0       	brlt	.+46     	; 0xb2c <__fpcmp_parts_f+0x98>
     afe:	14 96       	adiw	r26, 0x04	; 4
     b00:	8d 91       	ld	r24, X+
     b02:	9d 91       	ld	r25, X+
     b04:	0d 90       	ld	r0, X+
     b06:	bc 91       	ld	r27, X
     b08:	a0 2d       	mov	r26, r0
     b0a:	24 81       	ldd	r18, Z+4	; 0x04
     b0c:	35 81       	ldd	r19, Z+5	; 0x05
     b0e:	46 81       	ldd	r20, Z+6	; 0x06
     b10:	57 81       	ldd	r21, Z+7	; 0x07
     b12:	28 17       	cp	r18, r24
     b14:	39 07       	cpc	r19, r25
     b16:	4a 07       	cpc	r20, r26
     b18:	5b 07       	cpc	r21, r27
     b1a:	18 f4       	brcc	.+6      	; 0xb22 <__fpcmp_parts_f+0x8e>
     b1c:	11 23       	and	r17, r17
     b1e:	41 f0       	breq	.+16     	; 0xb30 <__fpcmp_parts_f+0x9c>
     b20:	0a c0       	rjmp	.+20     	; 0xb36 <__fpcmp_parts_f+0xa2>
     b22:	82 17       	cp	r24, r18
     b24:	93 07       	cpc	r25, r19
     b26:	a4 07       	cpc	r26, r20
     b28:	b5 07       	cpc	r27, r21
     b2a:	40 f4       	brcc	.+16     	; 0xb3c <__fpcmp_parts_f+0xa8>
     b2c:	11 23       	and	r17, r17
     b2e:	19 f0       	breq	.+6      	; 0xb36 <__fpcmp_parts_f+0xa2>
     b30:	61 e0       	ldi	r22, 0x01	; 1
     b32:	70 e0       	ldi	r23, 0x00	; 0
     b34:	05 c0       	rjmp	.+10     	; 0xb40 <__fpcmp_parts_f+0xac>
     b36:	6f ef       	ldi	r22, 0xFF	; 255
     b38:	7f ef       	ldi	r23, 0xFF	; 255
     b3a:	02 c0       	rjmp	.+4      	; 0xb40 <__fpcmp_parts_f+0xac>
     b3c:	60 e0       	ldi	r22, 0x00	; 0
     b3e:	70 e0       	ldi	r23, 0x00	; 0
     b40:	cb 01       	movw	r24, r22
     b42:	1f 91       	pop	r17
     b44:	08 95       	ret

00000b46 <__vector_1>:

signed char seconds=0, minutes=0, hours=0;
char counter=0;  //to count buzzer alerts

// Reset PB
ISR(INT0_vect){
     b46:	1f 92       	push	r1
     b48:	0f 92       	push	r0
     b4a:	0f b6       	in	r0, 0x3f	; 63
     b4c:	0f 92       	push	r0
     b4e:	11 24       	eor	r1, r1
     b50:	df 93       	push	r29
     b52:	cf 93       	push	r28
     b54:	cd b7       	in	r28, 0x3d	; 61
     b56:	de b7       	in	r29, 0x3e	; 62
	seconds=0;
     b58:	10 92 6a 00 	sts	0x006A, r1
	minutes=0;
     b5c:	10 92 6b 00 	sts	0x006B, r1
	hours=0;
     b60:	10 92 6c 00 	sts	0x006C, r1
}
     b64:	cf 91       	pop	r28
     b66:	df 91       	pop	r29
     b68:	0f 90       	pop	r0
     b6a:	0f be       	out	0x3f, r0	; 63
     b6c:	0f 90       	pop	r0
     b6e:	1f 90       	pop	r1
     b70:	18 95       	reti

00000b72 <__vector_2>:

// Pause PB
ISR(INT1_vect){
     b72:	1f 92       	push	r1
     b74:	0f 92       	push	r0
     b76:	0f b6       	in	r0, 0x3f	; 63
     b78:	0f 92       	push	r0
     b7a:	11 24       	eor	r1, r1
     b7c:	8f 93       	push	r24
     b7e:	af 93       	push	r26
     b80:	bf 93       	push	r27
     b82:	ef 93       	push	r30
     b84:	ff 93       	push	r31
     b86:	df 93       	push	r29
     b88:	cf 93       	push	r28
     b8a:	cd b7       	in	r28, 0x3d	; 61
     b8c:	de b7       	in	r29, 0x3e	; 62
	state = COUNT_OFF;
     b8e:	81 e0       	ldi	r24, 0x01	; 1
     b90:	80 93 69 00 	sts	0x0069, r24
	TIMSK  &= ~(1<<OCIE1A);
     b94:	a9 e5       	ldi	r26, 0x59	; 89
     b96:	b0 e0       	ldi	r27, 0x00	; 0
     b98:	e9 e5       	ldi	r30, 0x59	; 89
     b9a:	f0 e0       	ldi	r31, 0x00	; 0
     b9c:	80 81       	ld	r24, Z
     b9e:	8f 7e       	andi	r24, 0xEF	; 239
     ba0:	8c 93       	st	X, r24
}
     ba2:	cf 91       	pop	r28
     ba4:	df 91       	pop	r29
     ba6:	ff 91       	pop	r31
     ba8:	ef 91       	pop	r30
     baa:	bf 91       	pop	r27
     bac:	af 91       	pop	r26
     bae:	8f 91       	pop	r24
     bb0:	0f 90       	pop	r0
     bb2:	0f be       	out	0x3f, r0	; 63
     bb4:	0f 90       	pop	r0
     bb6:	1f 90       	pop	r1
     bb8:	18 95       	reti

00000bba <__vector_3>:

// Resume PB
ISR(INT2_vect){
     bba:	1f 92       	push	r1
     bbc:	0f 92       	push	r0
     bbe:	0f b6       	in	r0, 0x3f	; 63
     bc0:	0f 92       	push	r0
     bc2:	11 24       	eor	r1, r1
     bc4:	2f 93       	push	r18
     bc6:	3f 93       	push	r19
     bc8:	4f 93       	push	r20
     bca:	5f 93       	push	r21
     bcc:	6f 93       	push	r22
     bce:	7f 93       	push	r23
     bd0:	8f 93       	push	r24
     bd2:	9f 93       	push	r25
     bd4:	af 93       	push	r26
     bd6:	bf 93       	push	r27
     bd8:	ef 93       	push	r30
     bda:	ff 93       	push	r31
     bdc:	df 93       	push	r29
     bde:	cf 93       	push	r28
     be0:	cd b7       	in	r28, 0x3d	; 61
     be2:	de b7       	in	r29, 0x3e	; 62
	state = COUNT_ON;
     be4:	10 92 69 00 	sts	0x0069, r1
	timer1_CTC_init();
     be8:	0e 94 8d 11 	call	0x231a	; 0x231a <timer1_CTC_init>
}
     bec:	cf 91       	pop	r28
     bee:	df 91       	pop	r29
     bf0:	ff 91       	pop	r31
     bf2:	ef 91       	pop	r30
     bf4:	bf 91       	pop	r27
     bf6:	af 91       	pop	r26
     bf8:	9f 91       	pop	r25
     bfa:	8f 91       	pop	r24
     bfc:	7f 91       	pop	r23
     bfe:	6f 91       	pop	r22
     c00:	5f 91       	pop	r21
     c02:	4f 91       	pop	r20
     c04:	3f 91       	pop	r19
     c06:	2f 91       	pop	r18
     c08:	0f 90       	pop	r0
     c0a:	0f be       	out	0x3f, r0	; 63
     c0c:	0f 90       	pop	r0
     c0e:	1f 90       	pop	r1
     c10:	18 95       	reti

00000c12 <__vector_7>:

ISR(TIMER1_COMPA_vect){
     c12:	1f 92       	push	r1
     c14:	0f 92       	push	r0
     c16:	0f b6       	in	r0, 0x3f	; 63
     c18:	0f 92       	push	r0
     c1a:	11 24       	eor	r1, r1
     c1c:	8f 93       	push	r24
     c1e:	9f 93       	push	r25
     c20:	af 93       	push	r26
     c22:	bf 93       	push	r27
     c24:	ef 93       	push	r30
     c26:	ff 93       	push	r31
     c28:	df 93       	push	r29
     c2a:	cf 93       	push	r28
     c2c:	cd b7       	in	r28, 0x3d	; 61
     c2e:	de b7       	in	r29, 0x3e	; 62
	if(mode == COUNT_UP){
     c30:	80 91 68 00 	lds	r24, 0x0068
     c34:	88 23       	and	r24, r24
     c36:	19 f5       	brne	.+70     	; 0xc7e <__vector_7+0x6c>
		seconds++;
     c38:	80 91 6a 00 	lds	r24, 0x006A
     c3c:	8f 5f       	subi	r24, 0xFF	; 255
     c3e:	80 93 6a 00 	sts	0x006A, r24
		if(seconds>=60){minutes++;seconds=0;}
     c42:	80 91 6a 00 	lds	r24, 0x006A
     c46:	8c 33       	cpi	r24, 0x3C	; 60
     c48:	3c f0       	brlt	.+14     	; 0xc58 <__vector_7+0x46>
     c4a:	80 91 6b 00 	lds	r24, 0x006B
     c4e:	8f 5f       	subi	r24, 0xFF	; 255
     c50:	80 93 6b 00 	sts	0x006B, r24
     c54:	10 92 6a 00 	sts	0x006A, r1
		if(minutes>=60){hours++;minutes=0;}
     c58:	80 91 6b 00 	lds	r24, 0x006B
     c5c:	8c 33       	cpi	r24, 0x3C	; 60
     c5e:	3c f0       	brlt	.+14     	; 0xc6e <__vector_7+0x5c>
     c60:	80 91 6c 00 	lds	r24, 0x006C
     c64:	8f 5f       	subi	r24, 0xFF	; 255
     c66:	80 93 6c 00 	sts	0x006C, r24
     c6a:	10 92 6b 00 	sts	0x006B, r1
		if(hours>=24)hours=0;
     c6e:	80 91 6c 00 	lds	r24, 0x006C
     c72:	88 31       	cpi	r24, 0x18	; 24
     c74:	0c f4       	brge	.+2      	; 0xc78 <__vector_7+0x66>
     c76:	60 c0       	rjmp	.+192    	; 0xd38 <__vector_7+0x126>
     c78:	10 92 6c 00 	sts	0x006C, r1
     c7c:	5d c0       	rjmp	.+186    	; 0xd38 <__vector_7+0x126>
	}else{
		if(state == COUNT_ON){
     c7e:	80 91 69 00 	lds	r24, 0x0069
     c82:	88 23       	and	r24, r24
     c84:	d1 f5       	brne	.+116    	; 0xcfa <__vector_7+0xe8>
			seconds--;
     c86:	80 91 6a 00 	lds	r24, 0x006A
     c8a:	81 50       	subi	r24, 0x01	; 1
     c8c:	80 93 6a 00 	sts	0x006A, r24
			if(seconds<0){minutes--;seconds=59;}
     c90:	80 91 6a 00 	lds	r24, 0x006A
     c94:	88 23       	and	r24, r24
     c96:	44 f4       	brge	.+16     	; 0xca8 <__vector_7+0x96>
     c98:	80 91 6b 00 	lds	r24, 0x006B
     c9c:	81 50       	subi	r24, 0x01	; 1
     c9e:	80 93 6b 00 	sts	0x006B, r24
     ca2:	8b e3       	ldi	r24, 0x3B	; 59
     ca4:	80 93 6a 00 	sts	0x006A, r24
			if(minutes<0){hours--;minutes=59;}
     ca8:	80 91 6b 00 	lds	r24, 0x006B
     cac:	88 23       	and	r24, r24
     cae:	44 f4       	brge	.+16     	; 0xcc0 <__vector_7+0xae>
     cb0:	80 91 6c 00 	lds	r24, 0x006C
     cb4:	81 50       	subi	r24, 0x01	; 1
     cb6:	80 93 6c 00 	sts	0x006C, r24
     cba:	8b e3       	ldi	r24, 0x3B	; 59
     cbc:	80 93 6b 00 	sts	0x006B, r24
			if(hours<0){
     cc0:	80 91 6c 00 	lds	r24, 0x006C
     cc4:	88 23       	and	r24, r24
     cc6:	c4 f5       	brge	.+112    	; 0xd38 <__vector_7+0x126>
				state = COUNT_OFF;
     cc8:	81 e0       	ldi	r24, 0x01	; 1
     cca:	80 93 69 00 	sts	0x0069, r24
				PORTD |= (1<<0); //operate buzzer
     cce:	a2 e3       	ldi	r26, 0x32	; 50
     cd0:	b0 e0       	ldi	r27, 0x00	; 0
     cd2:	e2 e3       	ldi	r30, 0x32	; 50
     cd4:	f0 e0       	ldi	r31, 0x00	; 0
     cd6:	80 81       	ld	r24, Z
     cd8:	81 60       	ori	r24, 0x01	; 1
     cda:	8c 93       	st	X, r24
				seconds = 0;
     cdc:	10 92 6a 00 	sts	0x006A, r1
				minutes = 0;
     ce0:	10 92 6b 00 	sts	0x006B, r1
				hours=0;
     ce4:	10 92 6c 00 	sts	0x006C, r1
				OCR1A  = 3906;; //set timer1 interrupt to 0.25s
     ce8:	ea e4       	ldi	r30, 0x4A	; 74
     cea:	f0 e0       	ldi	r31, 0x00	; 0
     cec:	82 e4       	ldi	r24, 0x42	; 66
     cee:	9f e0       	ldi	r25, 0x0F	; 15
     cf0:	91 83       	std	Z+1, r25	; 0x01
     cf2:	80 83       	st	Z, r24
				counter=0;
     cf4:	10 92 6d 00 	sts	0x006D, r1
     cf8:	1f c0       	rjmp	.+62     	; 0xd38 <__vector_7+0x126>
			}
		}else{ //Count_OFF state
			PORTD ^= (1<<0); // toggle buzzer
     cfa:	a2 e3       	ldi	r26, 0x32	; 50
     cfc:	b0 e0       	ldi	r27, 0x00	; 0
     cfe:	e2 e3       	ldi	r30, 0x32	; 50
     d00:	f0 e0       	ldi	r31, 0x00	; 0
     d02:	90 81       	ld	r25, Z
     d04:	81 e0       	ldi	r24, 0x01	; 1
     d06:	89 27       	eor	r24, r25
     d08:	8c 93       	st	X, r24
			counter++;
     d0a:	80 91 6d 00 	lds	r24, 0x006D
     d0e:	8f 5f       	subi	r24, 0xFF	; 255
     d10:	80 93 6d 00 	sts	0x006D, r24
			if(counter >=BUZZER_ALERTS){
     d14:	80 91 6d 00 	lds	r24, 0x006D
     d18:	8a 30       	cpi	r24, 0x0A	; 10
     d1a:	70 f0       	brcs	.+28     	; 0xd38 <__vector_7+0x126>
				PORTD &= ~(1<<0);
     d1c:	a2 e3       	ldi	r26, 0x32	; 50
     d1e:	b0 e0       	ldi	r27, 0x00	; 0
     d20:	e2 e3       	ldi	r30, 0x32	; 50
     d22:	f0 e0       	ldi	r31, 0x00	; 0
     d24:	80 81       	ld	r24, Z
     d26:	8e 7f       	andi	r24, 0xFE	; 254
     d28:	8c 93       	st	X, r24
				TIMSK  &= ~(1<<OCIE1A);  //turn off Timer1
     d2a:	a9 e5       	ldi	r26, 0x59	; 89
     d2c:	b0 e0       	ldi	r27, 0x00	; 0
     d2e:	e9 e5       	ldi	r30, 0x59	; 89
     d30:	f0 e0       	ldi	r31, 0x00	; 0
     d32:	80 81       	ld	r24, Z
     d34:	8f 7e       	andi	r24, 0xEF	; 239
     d36:	8c 93       	st	X, r24
			}
		}
	}
}
     d38:	cf 91       	pop	r28
     d3a:	df 91       	pop	r29
     d3c:	ff 91       	pop	r31
     d3e:	ef 91       	pop	r30
     d40:	bf 91       	pop	r27
     d42:	af 91       	pop	r26
     d44:	9f 91       	pop	r25
     d46:	8f 91       	pop	r24
     d48:	0f 90       	pop	r0
     d4a:	0f be       	out	0x3f, r0	; 63
     d4c:	0f 90       	pop	r0
     d4e:	1f 90       	pop	r1
     d50:	18 95       	reti

00000d52 <main>:


int main(void){
     d52:	0f 93       	push	r16
     d54:	1f 93       	push	r17
     d56:	df 93       	push	r29
     d58:	cf 93       	push	r28
     d5a:	cd b7       	in	r28, 0x3d	; 61
     d5c:	de b7       	in	r29, 0x3e	; 62
     d5e:	cd 5b       	subi	r28, 0xBD	; 189
     d60:	d0 40       	sbci	r29, 0x00	; 0
     d62:	0f b6       	in	r0, 0x3f	; 63
     d64:	f8 94       	cli
     d66:	de bf       	out	0x3e, r29	; 62
     d68:	0f be       	out	0x3f, r0	; 63
     d6a:	cd bf       	out	0x3d, r28	; 61
	//initialize Timer1 and Ex. Interrupts
	SREG   |=(1<<7);
     d6c:	af e5       	ldi	r26, 0x5F	; 95
     d6e:	b0 e0       	ldi	r27, 0x00	; 0
     d70:	ef e5       	ldi	r30, 0x5F	; 95
     d72:	f0 e0       	ldi	r31, 0x00	; 0
     d74:	80 81       	ld	r24, Z
     d76:	80 68       	ori	r24, 0x80	; 128
     d78:	8c 93       	st	X, r24
	timer1_CTC_init();
     d7a:	0e 94 8d 11 	call	0x231a	; 0x231a <timer1_CTC_init>
	EX_Interrupts_init();
     d7e:	0e 94 ad 11 	call	0x235a	; 0x235a <EX_Interrupts_init>

	// setting first 6 pins of PORTA as outputs and reset them
	DDRA |= 0x3F;
     d82:	aa e3       	ldi	r26, 0x3A	; 58
     d84:	b0 e0       	ldi	r27, 0x00	; 0
     d86:	ea e3       	ldi	r30, 0x3A	; 58
     d88:	f0 e0       	ldi	r31, 0x00	; 0
     d8a:	80 81       	ld	r24, Z
     d8c:	8f 63       	ori	r24, 0x3F	; 63
     d8e:	8c 93       	st	X, r24
	PORTC &= ~(0x3F);
     d90:	a5 e3       	ldi	r26, 0x35	; 53
     d92:	b0 e0       	ldi	r27, 0x00	; 0
     d94:	e5 e3       	ldi	r30, 0x35	; 53
     d96:	f0 e0       	ldi	r31, 0x00	; 0
     d98:	80 81       	ld	r24, Z
     d9a:	80 7c       	andi	r24, 0xC0	; 192
     d9c:	8c 93       	st	X, r24

	// setting whole PORTB as input and enable the PU resistor
	DDRB = 0x00;
     d9e:	e7 e3       	ldi	r30, 0x37	; 55
     da0:	f0 e0       	ldi	r31, 0x00	; 0
     da2:	10 82       	st	Z, r1
	PORTB = 0xFF;
     da4:	e8 e3       	ldi	r30, 0x38	; 56
     da6:	f0 e0       	ldi	r31, 0x00	; 0
     da8:	8f ef       	ldi	r24, 0xFF	; 255
     daa:	80 83       	st	Z, r24

	// setting first 4 pins of PORTC as outputs and reset them
	DDRC |= 0x0F;
     dac:	a4 e3       	ldi	r26, 0x34	; 52
     dae:	b0 e0       	ldi	r27, 0x00	; 0
     db0:	e4 e3       	ldi	r30, 0x34	; 52
     db2:	f0 e0       	ldi	r31, 0x00	; 0
     db4:	80 81       	ld	r24, Z
     db6:	8f 60       	ori	r24, 0x0F	; 15
     db8:	8c 93       	st	X, r24
	PORTC &= ~(0x0F);
     dba:	a5 e3       	ldi	r26, 0x35	; 53
     dbc:	b0 e0       	ldi	r27, 0x00	; 0
     dbe:	e5 e3       	ldi	r30, 0x35	; 53
     dc0:	f0 e0       	ldi	r31, 0x00	; 0
     dc2:	80 81       	ld	r24, Z
     dc4:	80 7f       	andi	r24, 0xF0	; 240
     dc6:	8c 93       	st	X, r24

	// setting PD2 & PD3 as inputs, with PD2 has internal resistor
	// setting PD0, PD4, and PD5 as outputs and reset them except PD4
	DDRD &= ~(0x0C);
     dc8:	a1 e3       	ldi	r26, 0x31	; 49
     dca:	b0 e0       	ldi	r27, 0x00	; 0
     dcc:	e1 e3       	ldi	r30, 0x31	; 49
     dce:	f0 e0       	ldi	r31, 0x00	; 0
     dd0:	80 81       	ld	r24, Z
     dd2:	83 7f       	andi	r24, 0xF3	; 243
     dd4:	8c 93       	st	X, r24
	DDRD |= (0x31);
     dd6:	a1 e3       	ldi	r26, 0x31	; 49
     dd8:	b0 e0       	ldi	r27, 0x00	; 0
     dda:	e1 e3       	ldi	r30, 0x31	; 49
     ddc:	f0 e0       	ldi	r31, 0x00	; 0
     dde:	80 81       	ld	r24, Z
     de0:	81 63       	ori	r24, 0x31	; 49
     de2:	8c 93       	st	X, r24
	PORTD |= 0x14;
     de4:	a2 e3       	ldi	r26, 0x32	; 50
     de6:	b0 e0       	ldi	r27, 0x00	; 0
     de8:	e2 e3       	ldi	r30, 0x32	; 50
     dea:	f0 e0       	ldi	r31, 0x00	; 0
     dec:	80 81       	ld	r24, Z
     dee:	84 61       	ori	r24, 0x14	; 20
     df0:	8c 93       	st	X, r24
	PORTD &= ~(0x21);
     df2:	a2 e3       	ldi	r26, 0x32	; 50
     df4:	b0 e0       	ldi	r27, 0x00	; 0
     df6:	e2 e3       	ldi	r30, 0x32	; 50
     df8:	f0 e0       	ldi	r31, 0x00	; 0
     dfa:	80 81       	ld	r24, Z
     dfc:	8e 7d       	andi	r24, 0xDE	; 222
     dfe:	8c 93       	st	X, r24

	char MFlag  = 0;  //flag for up/down push button
     e00:	fe 01       	movw	r30, r28
     e02:	e3 54       	subi	r30, 0x43	; 67
     e04:	ff 4f       	sbci	r31, 0xFF	; 255
     e06:	10 82       	st	Z, r1
	char SIFlag = 0;  //flag for seconds increment push button
     e08:	fe 01       	movw	r30, r28
     e0a:	e4 54       	subi	r30, 0x44	; 68
     e0c:	ff 4f       	sbci	r31, 0xFF	; 255
     e0e:	10 82       	st	Z, r1
	char SDFlag = 0;  //flag for seconds decrement push button
     e10:	fe 01       	movw	r30, r28
     e12:	e5 54       	subi	r30, 0x45	; 69
     e14:	ff 4f       	sbci	r31, 0xFF	; 255
     e16:	10 82       	st	Z, r1
	char MIFlag = 0;  //flag for minutes increment push button
     e18:	fe 01       	movw	r30, r28
     e1a:	e6 54       	subi	r30, 0x46	; 70
     e1c:	ff 4f       	sbci	r31, 0xFF	; 255
     e1e:	10 82       	st	Z, r1
	char MDFlag = 0;  //flag for minutes decrement push button
     e20:	fe 01       	movw	r30, r28
     e22:	e7 54       	subi	r30, 0x47	; 71
     e24:	ff 4f       	sbci	r31, 0xFF	; 255
     e26:	10 82       	st	Z, r1
	char HIFlag = 0;  //flag for hours increment push button
     e28:	fe 01       	movw	r30, r28
     e2a:	e8 54       	subi	r30, 0x48	; 72
     e2c:	ff 4f       	sbci	r31, 0xFF	; 255
     e2e:	10 82       	st	Z, r1
	char HDFlag = 0;  //flag for hours decrement push button
     e30:	fe 01       	movw	r30, r28
     e32:	e9 54       	subi	r30, 0x49	; 73
     e34:	ff 4f       	sbci	r31, 0xFF	; 255
     e36:	10 82       	st	Z, r1

	while(1){
		//Display seconds
		PORTA = (PORTA & 0xC0) | (1<<5);
     e38:	ab e3       	ldi	r26, 0x3B	; 59
     e3a:	b0 e0       	ldi	r27, 0x00	; 0
     e3c:	eb e3       	ldi	r30, 0x3B	; 59
     e3e:	f0 e0       	ldi	r31, 0x00	; 0
     e40:	80 81       	ld	r24, Z
     e42:	80 7c       	andi	r24, 0xC0	; 192
     e44:	80 62       	ori	r24, 0x20	; 32
     e46:	8c 93       	st	X, r24
		PORTC = (PORTC & 0xF0) | ((seconds%10) & 0x0F);
     e48:	a5 e3       	ldi	r26, 0x35	; 53
     e4a:	b0 e0       	ldi	r27, 0x00	; 0
     e4c:	e5 e3       	ldi	r30, 0x35	; 53
     e4e:	f0 e0       	ldi	r31, 0x00	; 0
     e50:	80 81       	ld	r24, Z
     e52:	28 2f       	mov	r18, r24
     e54:	20 7f       	andi	r18, 0xF0	; 240
     e56:	80 91 6a 00 	lds	r24, 0x006A
     e5a:	9a e0       	ldi	r25, 0x0A	; 10
     e5c:	69 2f       	mov	r22, r25
     e5e:	0e 94 c6 11 	call	0x238c	; 0x238c <__divmodqi4>
     e62:	89 2f       	mov	r24, r25
     e64:	8f 70       	andi	r24, 0x0F	; 15
     e66:	82 2b       	or	r24, r18
     e68:	8c 93       	st	X, r24
     e6a:	fe 01       	movw	r30, r28
     e6c:	ed 54       	subi	r30, 0x4D	; 77
     e6e:	ff 4f       	sbci	r31, 0xFF	; 255
     e70:	80 e0       	ldi	r24, 0x00	; 0
     e72:	90 e0       	ldi	r25, 0x00	; 0
     e74:	a0 e8       	ldi	r26, 0x80	; 128
     e76:	bf e3       	ldi	r27, 0x3F	; 63
     e78:	80 83       	st	Z, r24
     e7a:	91 83       	std	Z+1, r25	; 0x01
     e7c:	a2 83       	std	Z+2, r26	; 0x02
     e7e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     e80:	8e 01       	movw	r16, r28
     e82:	01 55       	subi	r16, 0x51	; 81
     e84:	1f 4f       	sbci	r17, 0xFF	; 255
     e86:	fe 01       	movw	r30, r28
     e88:	ed 54       	subi	r30, 0x4D	; 77
     e8a:	ff 4f       	sbci	r31, 0xFF	; 255
     e8c:	60 81       	ld	r22, Z
     e8e:	71 81       	ldd	r23, Z+1	; 0x01
     e90:	82 81       	ldd	r24, Z+2	; 0x02
     e92:	93 81       	ldd	r25, Z+3	; 0x03
     e94:	20 e0       	ldi	r18, 0x00	; 0
     e96:	30 e0       	ldi	r19, 0x00	; 0
     e98:	4a e7       	ldi	r20, 0x7A	; 122
     e9a:	55 e4       	ldi	r21, 0x45	; 69
     e9c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     ea0:	dc 01       	movw	r26, r24
     ea2:	cb 01       	movw	r24, r22
     ea4:	f8 01       	movw	r30, r16
     ea6:	80 83       	st	Z, r24
     ea8:	91 83       	std	Z+1, r25	; 0x01
     eaa:	a2 83       	std	Z+2, r26	; 0x02
     eac:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     eae:	fe 01       	movw	r30, r28
     eb0:	e1 55       	subi	r30, 0x51	; 81
     eb2:	ff 4f       	sbci	r31, 0xFF	; 255
     eb4:	60 81       	ld	r22, Z
     eb6:	71 81       	ldd	r23, Z+1	; 0x01
     eb8:	82 81       	ldd	r24, Z+2	; 0x02
     eba:	93 81       	ldd	r25, Z+3	; 0x03
     ebc:	20 e0       	ldi	r18, 0x00	; 0
     ebe:	30 e0       	ldi	r19, 0x00	; 0
     ec0:	40 e8       	ldi	r20, 0x80	; 128
     ec2:	5f e3       	ldi	r21, 0x3F	; 63
     ec4:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
     ec8:	88 23       	and	r24, r24
     eca:	44 f4       	brge	.+16     	; 0xedc <main+0x18a>
		__ticks = 1;
     ecc:	fe 01       	movw	r30, r28
     ece:	e3 55       	subi	r30, 0x53	; 83
     ed0:	ff 4f       	sbci	r31, 0xFF	; 255
     ed2:	81 e0       	ldi	r24, 0x01	; 1
     ed4:	90 e0       	ldi	r25, 0x00	; 0
     ed6:	91 83       	std	Z+1, r25	; 0x01
     ed8:	80 83       	st	Z, r24
     eda:	64 c0       	rjmp	.+200    	; 0xfa4 <main+0x252>
	else if (__tmp > 65535)
     edc:	fe 01       	movw	r30, r28
     ede:	e1 55       	subi	r30, 0x51	; 81
     ee0:	ff 4f       	sbci	r31, 0xFF	; 255
     ee2:	60 81       	ld	r22, Z
     ee4:	71 81       	ldd	r23, Z+1	; 0x01
     ee6:	82 81       	ldd	r24, Z+2	; 0x02
     ee8:	93 81       	ldd	r25, Z+3	; 0x03
     eea:	20 e0       	ldi	r18, 0x00	; 0
     eec:	3f ef       	ldi	r19, 0xFF	; 255
     eee:	4f e7       	ldi	r20, 0x7F	; 127
     ef0:	57 e4       	ldi	r21, 0x47	; 71
     ef2:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
     ef6:	18 16       	cp	r1, r24
     ef8:	0c f0       	brlt	.+2      	; 0xefc <main+0x1aa>
     efa:	43 c0       	rjmp	.+134    	; 0xf82 <main+0x230>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     efc:	fe 01       	movw	r30, r28
     efe:	ed 54       	subi	r30, 0x4D	; 77
     f00:	ff 4f       	sbci	r31, 0xFF	; 255
     f02:	60 81       	ld	r22, Z
     f04:	71 81       	ldd	r23, Z+1	; 0x01
     f06:	82 81       	ldd	r24, Z+2	; 0x02
     f08:	93 81       	ldd	r25, Z+3	; 0x03
     f0a:	20 e0       	ldi	r18, 0x00	; 0
     f0c:	30 e0       	ldi	r19, 0x00	; 0
     f0e:	40 e2       	ldi	r20, 0x20	; 32
     f10:	51 e4       	ldi	r21, 0x41	; 65
     f12:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     f16:	dc 01       	movw	r26, r24
     f18:	cb 01       	movw	r24, r22
     f1a:	8e 01       	movw	r16, r28
     f1c:	03 55       	subi	r16, 0x53	; 83
     f1e:	1f 4f       	sbci	r17, 0xFF	; 255
     f20:	bc 01       	movw	r22, r24
     f22:	cd 01       	movw	r24, r26
     f24:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     f28:	dc 01       	movw	r26, r24
     f2a:	cb 01       	movw	r24, r22
     f2c:	f8 01       	movw	r30, r16
     f2e:	91 83       	std	Z+1, r25	; 0x01
     f30:	80 83       	st	Z, r24
     f32:	1f c0       	rjmp	.+62     	; 0xf72 <main+0x220>
     f34:	fe 01       	movw	r30, r28
     f36:	e5 55       	subi	r30, 0x55	; 85
     f38:	ff 4f       	sbci	r31, 0xFF	; 255
     f3a:	80 e9       	ldi	r24, 0x90	; 144
     f3c:	91 e0       	ldi	r25, 0x01	; 1
     f3e:	91 83       	std	Z+1, r25	; 0x01
     f40:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     f42:	fe 01       	movw	r30, r28
     f44:	e5 55       	subi	r30, 0x55	; 85
     f46:	ff 4f       	sbci	r31, 0xFF	; 255
     f48:	80 81       	ld	r24, Z
     f4a:	91 81       	ldd	r25, Z+1	; 0x01
     f4c:	01 97       	sbiw	r24, 0x01	; 1
     f4e:	f1 f7       	brne	.-4      	; 0xf4c <main+0x1fa>
     f50:	fe 01       	movw	r30, r28
     f52:	e5 55       	subi	r30, 0x55	; 85
     f54:	ff 4f       	sbci	r31, 0xFF	; 255
     f56:	91 83       	std	Z+1, r25	; 0x01
     f58:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     f5a:	de 01       	movw	r26, r28
     f5c:	a3 55       	subi	r26, 0x53	; 83
     f5e:	bf 4f       	sbci	r27, 0xFF	; 255
     f60:	fe 01       	movw	r30, r28
     f62:	e3 55       	subi	r30, 0x53	; 83
     f64:	ff 4f       	sbci	r31, 0xFF	; 255
     f66:	80 81       	ld	r24, Z
     f68:	91 81       	ldd	r25, Z+1	; 0x01
     f6a:	01 97       	sbiw	r24, 0x01	; 1
     f6c:	11 96       	adiw	r26, 0x01	; 1
     f6e:	9c 93       	st	X, r25
     f70:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     f72:	fe 01       	movw	r30, r28
     f74:	e3 55       	subi	r30, 0x53	; 83
     f76:	ff 4f       	sbci	r31, 0xFF	; 255
     f78:	80 81       	ld	r24, Z
     f7a:	91 81       	ldd	r25, Z+1	; 0x01
     f7c:	00 97       	sbiw	r24, 0x00	; 0
     f7e:	d1 f6       	brne	.-76     	; 0xf34 <main+0x1e2>
     f80:	27 c0       	rjmp	.+78     	; 0xfd0 <main+0x27e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     f82:	8e 01       	movw	r16, r28
     f84:	03 55       	subi	r16, 0x53	; 83
     f86:	1f 4f       	sbci	r17, 0xFF	; 255
     f88:	fe 01       	movw	r30, r28
     f8a:	e1 55       	subi	r30, 0x51	; 81
     f8c:	ff 4f       	sbci	r31, 0xFF	; 255
     f8e:	60 81       	ld	r22, Z
     f90:	71 81       	ldd	r23, Z+1	; 0x01
     f92:	82 81       	ldd	r24, Z+2	; 0x02
     f94:	93 81       	ldd	r25, Z+3	; 0x03
     f96:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     f9a:	dc 01       	movw	r26, r24
     f9c:	cb 01       	movw	r24, r22
     f9e:	f8 01       	movw	r30, r16
     fa0:	91 83       	std	Z+1, r25	; 0x01
     fa2:	80 83       	st	Z, r24
     fa4:	de 01       	movw	r26, r28
     fa6:	a7 55       	subi	r26, 0x57	; 87
     fa8:	bf 4f       	sbci	r27, 0xFF	; 255
     faa:	fe 01       	movw	r30, r28
     fac:	e3 55       	subi	r30, 0x53	; 83
     fae:	ff 4f       	sbci	r31, 0xFF	; 255
     fb0:	80 81       	ld	r24, Z
     fb2:	91 81       	ldd	r25, Z+1	; 0x01
     fb4:	8d 93       	st	X+, r24
     fb6:	9c 93       	st	X, r25
     fb8:	fe 01       	movw	r30, r28
     fba:	e7 55       	subi	r30, 0x57	; 87
     fbc:	ff 4f       	sbci	r31, 0xFF	; 255
     fbe:	80 81       	ld	r24, Z
     fc0:	91 81       	ldd	r25, Z+1	; 0x01
     fc2:	01 97       	sbiw	r24, 0x01	; 1
     fc4:	f1 f7       	brne	.-4      	; 0xfc2 <main+0x270>
     fc6:	fe 01       	movw	r30, r28
     fc8:	e7 55       	subi	r30, 0x57	; 87
     fca:	ff 4f       	sbci	r31, 0xFF	; 255
     fcc:	91 83       	std	Z+1, r25	; 0x01
     fce:	80 83       	st	Z, r24
		_delay_ms(1);
		PORTA = (PORTA & 0xC0) | (1<<4);
     fd0:	ab e3       	ldi	r26, 0x3B	; 59
     fd2:	b0 e0       	ldi	r27, 0x00	; 0
     fd4:	eb e3       	ldi	r30, 0x3B	; 59
     fd6:	f0 e0       	ldi	r31, 0x00	; 0
     fd8:	80 81       	ld	r24, Z
     fda:	80 7c       	andi	r24, 0xC0	; 192
     fdc:	80 61       	ori	r24, 0x10	; 16
     fde:	8c 93       	st	X, r24
		PORTC = (PORTC & 0xF0) | ((seconds/10%10) & 0x0F);
     fe0:	a5 e3       	ldi	r26, 0x35	; 53
     fe2:	b0 e0       	ldi	r27, 0x00	; 0
     fe4:	e5 e3       	ldi	r30, 0x35	; 53
     fe6:	f0 e0       	ldi	r31, 0x00	; 0
     fe8:	80 81       	ld	r24, Z
     fea:	28 2f       	mov	r18, r24
     fec:	20 7f       	andi	r18, 0xF0	; 240
     fee:	80 91 6a 00 	lds	r24, 0x006A
     ff2:	9a e0       	ldi	r25, 0x0A	; 10
     ff4:	69 2f       	mov	r22, r25
     ff6:	0e 94 c6 11 	call	0x238c	; 0x238c <__divmodqi4>
     ffa:	9a e0       	ldi	r25, 0x0A	; 10
     ffc:	69 2f       	mov	r22, r25
     ffe:	0e 94 c6 11 	call	0x238c	; 0x238c <__divmodqi4>
    1002:	89 2f       	mov	r24, r25
    1004:	8f 70       	andi	r24, 0x0F	; 15
    1006:	82 2b       	or	r24, r18
    1008:	8c 93       	st	X, r24
    100a:	fe 01       	movw	r30, r28
    100c:	eb 55       	subi	r30, 0x5B	; 91
    100e:	ff 4f       	sbci	r31, 0xFF	; 255
    1010:	80 e0       	ldi	r24, 0x00	; 0
    1012:	90 e0       	ldi	r25, 0x00	; 0
    1014:	a0 e8       	ldi	r26, 0x80	; 128
    1016:	bf e3       	ldi	r27, 0x3F	; 63
    1018:	80 83       	st	Z, r24
    101a:	91 83       	std	Z+1, r25	; 0x01
    101c:	a2 83       	std	Z+2, r26	; 0x02
    101e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1020:	8e 01       	movw	r16, r28
    1022:	0f 55       	subi	r16, 0x5F	; 95
    1024:	1f 4f       	sbci	r17, 0xFF	; 255
    1026:	fe 01       	movw	r30, r28
    1028:	eb 55       	subi	r30, 0x5B	; 91
    102a:	ff 4f       	sbci	r31, 0xFF	; 255
    102c:	60 81       	ld	r22, Z
    102e:	71 81       	ldd	r23, Z+1	; 0x01
    1030:	82 81       	ldd	r24, Z+2	; 0x02
    1032:	93 81       	ldd	r25, Z+3	; 0x03
    1034:	20 e0       	ldi	r18, 0x00	; 0
    1036:	30 e0       	ldi	r19, 0x00	; 0
    1038:	4a e7       	ldi	r20, 0x7A	; 122
    103a:	55 e4       	ldi	r21, 0x45	; 69
    103c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1040:	dc 01       	movw	r26, r24
    1042:	cb 01       	movw	r24, r22
    1044:	f8 01       	movw	r30, r16
    1046:	80 83       	st	Z, r24
    1048:	91 83       	std	Z+1, r25	; 0x01
    104a:	a2 83       	std	Z+2, r26	; 0x02
    104c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    104e:	fe 01       	movw	r30, r28
    1050:	ef 55       	subi	r30, 0x5F	; 95
    1052:	ff 4f       	sbci	r31, 0xFF	; 255
    1054:	60 81       	ld	r22, Z
    1056:	71 81       	ldd	r23, Z+1	; 0x01
    1058:	82 81       	ldd	r24, Z+2	; 0x02
    105a:	93 81       	ldd	r25, Z+3	; 0x03
    105c:	20 e0       	ldi	r18, 0x00	; 0
    105e:	30 e0       	ldi	r19, 0x00	; 0
    1060:	40 e8       	ldi	r20, 0x80	; 128
    1062:	5f e3       	ldi	r21, 0x3F	; 63
    1064:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1068:	88 23       	and	r24, r24
    106a:	44 f4       	brge	.+16     	; 0x107c <main+0x32a>
		__ticks = 1;
    106c:	fe 01       	movw	r30, r28
    106e:	e1 56       	subi	r30, 0x61	; 97
    1070:	ff 4f       	sbci	r31, 0xFF	; 255
    1072:	81 e0       	ldi	r24, 0x01	; 1
    1074:	90 e0       	ldi	r25, 0x00	; 0
    1076:	91 83       	std	Z+1, r25	; 0x01
    1078:	80 83       	st	Z, r24
    107a:	64 c0       	rjmp	.+200    	; 0x1144 <main+0x3f2>
	else if (__tmp > 65535)
    107c:	fe 01       	movw	r30, r28
    107e:	ef 55       	subi	r30, 0x5F	; 95
    1080:	ff 4f       	sbci	r31, 0xFF	; 255
    1082:	60 81       	ld	r22, Z
    1084:	71 81       	ldd	r23, Z+1	; 0x01
    1086:	82 81       	ldd	r24, Z+2	; 0x02
    1088:	93 81       	ldd	r25, Z+3	; 0x03
    108a:	20 e0       	ldi	r18, 0x00	; 0
    108c:	3f ef       	ldi	r19, 0xFF	; 255
    108e:	4f e7       	ldi	r20, 0x7F	; 127
    1090:	57 e4       	ldi	r21, 0x47	; 71
    1092:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1096:	18 16       	cp	r1, r24
    1098:	0c f0       	brlt	.+2      	; 0x109c <main+0x34a>
    109a:	43 c0       	rjmp	.+134    	; 0x1122 <main+0x3d0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    109c:	fe 01       	movw	r30, r28
    109e:	eb 55       	subi	r30, 0x5B	; 91
    10a0:	ff 4f       	sbci	r31, 0xFF	; 255
    10a2:	60 81       	ld	r22, Z
    10a4:	71 81       	ldd	r23, Z+1	; 0x01
    10a6:	82 81       	ldd	r24, Z+2	; 0x02
    10a8:	93 81       	ldd	r25, Z+3	; 0x03
    10aa:	20 e0       	ldi	r18, 0x00	; 0
    10ac:	30 e0       	ldi	r19, 0x00	; 0
    10ae:	40 e2       	ldi	r20, 0x20	; 32
    10b0:	51 e4       	ldi	r21, 0x41	; 65
    10b2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    10b6:	dc 01       	movw	r26, r24
    10b8:	cb 01       	movw	r24, r22
    10ba:	8e 01       	movw	r16, r28
    10bc:	01 56       	subi	r16, 0x61	; 97
    10be:	1f 4f       	sbci	r17, 0xFF	; 255
    10c0:	bc 01       	movw	r22, r24
    10c2:	cd 01       	movw	r24, r26
    10c4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    10c8:	dc 01       	movw	r26, r24
    10ca:	cb 01       	movw	r24, r22
    10cc:	f8 01       	movw	r30, r16
    10ce:	91 83       	std	Z+1, r25	; 0x01
    10d0:	80 83       	st	Z, r24
    10d2:	1f c0       	rjmp	.+62     	; 0x1112 <main+0x3c0>
    10d4:	fe 01       	movw	r30, r28
    10d6:	e3 56       	subi	r30, 0x63	; 99
    10d8:	ff 4f       	sbci	r31, 0xFF	; 255
    10da:	80 e9       	ldi	r24, 0x90	; 144
    10dc:	91 e0       	ldi	r25, 0x01	; 1
    10de:	91 83       	std	Z+1, r25	; 0x01
    10e0:	80 83       	st	Z, r24
    10e2:	fe 01       	movw	r30, r28
    10e4:	e3 56       	subi	r30, 0x63	; 99
    10e6:	ff 4f       	sbci	r31, 0xFF	; 255
    10e8:	80 81       	ld	r24, Z
    10ea:	91 81       	ldd	r25, Z+1	; 0x01
    10ec:	01 97       	sbiw	r24, 0x01	; 1
    10ee:	f1 f7       	brne	.-4      	; 0x10ec <main+0x39a>
    10f0:	fe 01       	movw	r30, r28
    10f2:	e3 56       	subi	r30, 0x63	; 99
    10f4:	ff 4f       	sbci	r31, 0xFF	; 255
    10f6:	91 83       	std	Z+1, r25	; 0x01
    10f8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    10fa:	de 01       	movw	r26, r28
    10fc:	a1 56       	subi	r26, 0x61	; 97
    10fe:	bf 4f       	sbci	r27, 0xFF	; 255
    1100:	fe 01       	movw	r30, r28
    1102:	e1 56       	subi	r30, 0x61	; 97
    1104:	ff 4f       	sbci	r31, 0xFF	; 255
    1106:	80 81       	ld	r24, Z
    1108:	91 81       	ldd	r25, Z+1	; 0x01
    110a:	01 97       	sbiw	r24, 0x01	; 1
    110c:	11 96       	adiw	r26, 0x01	; 1
    110e:	9c 93       	st	X, r25
    1110:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1112:	fe 01       	movw	r30, r28
    1114:	e1 56       	subi	r30, 0x61	; 97
    1116:	ff 4f       	sbci	r31, 0xFF	; 255
    1118:	80 81       	ld	r24, Z
    111a:	91 81       	ldd	r25, Z+1	; 0x01
    111c:	00 97       	sbiw	r24, 0x00	; 0
    111e:	d1 f6       	brne	.-76     	; 0x10d4 <main+0x382>
    1120:	27 c0       	rjmp	.+78     	; 0x1170 <main+0x41e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1122:	8e 01       	movw	r16, r28
    1124:	01 56       	subi	r16, 0x61	; 97
    1126:	1f 4f       	sbci	r17, 0xFF	; 255
    1128:	fe 01       	movw	r30, r28
    112a:	ef 55       	subi	r30, 0x5F	; 95
    112c:	ff 4f       	sbci	r31, 0xFF	; 255
    112e:	60 81       	ld	r22, Z
    1130:	71 81       	ldd	r23, Z+1	; 0x01
    1132:	82 81       	ldd	r24, Z+2	; 0x02
    1134:	93 81       	ldd	r25, Z+3	; 0x03
    1136:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    113a:	dc 01       	movw	r26, r24
    113c:	cb 01       	movw	r24, r22
    113e:	f8 01       	movw	r30, r16
    1140:	91 83       	std	Z+1, r25	; 0x01
    1142:	80 83       	st	Z, r24
    1144:	de 01       	movw	r26, r28
    1146:	a5 56       	subi	r26, 0x65	; 101
    1148:	bf 4f       	sbci	r27, 0xFF	; 255
    114a:	fe 01       	movw	r30, r28
    114c:	e1 56       	subi	r30, 0x61	; 97
    114e:	ff 4f       	sbci	r31, 0xFF	; 255
    1150:	80 81       	ld	r24, Z
    1152:	91 81       	ldd	r25, Z+1	; 0x01
    1154:	8d 93       	st	X+, r24
    1156:	9c 93       	st	X, r25
    1158:	fe 01       	movw	r30, r28
    115a:	e5 56       	subi	r30, 0x65	; 101
    115c:	ff 4f       	sbci	r31, 0xFF	; 255
    115e:	80 81       	ld	r24, Z
    1160:	91 81       	ldd	r25, Z+1	; 0x01
    1162:	01 97       	sbiw	r24, 0x01	; 1
    1164:	f1 f7       	brne	.-4      	; 0x1162 <main+0x410>
    1166:	fe 01       	movw	r30, r28
    1168:	e5 56       	subi	r30, 0x65	; 101
    116a:	ff 4f       	sbci	r31, 0xFF	; 255
    116c:	91 83       	std	Z+1, r25	; 0x01
    116e:	80 83       	st	Z, r24
		_delay_ms(1);

		//Display minutes
		PORTA = (PORTA & 0xC0) | (1<<3);
    1170:	ab e3       	ldi	r26, 0x3B	; 59
    1172:	b0 e0       	ldi	r27, 0x00	; 0
    1174:	eb e3       	ldi	r30, 0x3B	; 59
    1176:	f0 e0       	ldi	r31, 0x00	; 0
    1178:	80 81       	ld	r24, Z
    117a:	80 7c       	andi	r24, 0xC0	; 192
    117c:	88 60       	ori	r24, 0x08	; 8
    117e:	8c 93       	st	X, r24
		PORTC = (PORTC & 0xF0) | ((minutes%10) & 0x0F);
    1180:	a5 e3       	ldi	r26, 0x35	; 53
    1182:	b0 e0       	ldi	r27, 0x00	; 0
    1184:	e5 e3       	ldi	r30, 0x35	; 53
    1186:	f0 e0       	ldi	r31, 0x00	; 0
    1188:	80 81       	ld	r24, Z
    118a:	28 2f       	mov	r18, r24
    118c:	20 7f       	andi	r18, 0xF0	; 240
    118e:	80 91 6b 00 	lds	r24, 0x006B
    1192:	9a e0       	ldi	r25, 0x0A	; 10
    1194:	69 2f       	mov	r22, r25
    1196:	0e 94 c6 11 	call	0x238c	; 0x238c <__divmodqi4>
    119a:	89 2f       	mov	r24, r25
    119c:	8f 70       	andi	r24, 0x0F	; 15
    119e:	82 2b       	or	r24, r18
    11a0:	8c 93       	st	X, r24
    11a2:	fe 01       	movw	r30, r28
    11a4:	e9 56       	subi	r30, 0x69	; 105
    11a6:	ff 4f       	sbci	r31, 0xFF	; 255
    11a8:	80 e0       	ldi	r24, 0x00	; 0
    11aa:	90 e0       	ldi	r25, 0x00	; 0
    11ac:	a0 e8       	ldi	r26, 0x80	; 128
    11ae:	bf e3       	ldi	r27, 0x3F	; 63
    11b0:	80 83       	st	Z, r24
    11b2:	91 83       	std	Z+1, r25	; 0x01
    11b4:	a2 83       	std	Z+2, r26	; 0x02
    11b6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    11b8:	8e 01       	movw	r16, r28
    11ba:	0d 56       	subi	r16, 0x6D	; 109
    11bc:	1f 4f       	sbci	r17, 0xFF	; 255
    11be:	fe 01       	movw	r30, r28
    11c0:	e9 56       	subi	r30, 0x69	; 105
    11c2:	ff 4f       	sbci	r31, 0xFF	; 255
    11c4:	60 81       	ld	r22, Z
    11c6:	71 81       	ldd	r23, Z+1	; 0x01
    11c8:	82 81       	ldd	r24, Z+2	; 0x02
    11ca:	93 81       	ldd	r25, Z+3	; 0x03
    11cc:	20 e0       	ldi	r18, 0x00	; 0
    11ce:	30 e0       	ldi	r19, 0x00	; 0
    11d0:	4a e7       	ldi	r20, 0x7A	; 122
    11d2:	55 e4       	ldi	r21, 0x45	; 69
    11d4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    11d8:	dc 01       	movw	r26, r24
    11da:	cb 01       	movw	r24, r22
    11dc:	f8 01       	movw	r30, r16
    11de:	80 83       	st	Z, r24
    11e0:	91 83       	std	Z+1, r25	; 0x01
    11e2:	a2 83       	std	Z+2, r26	; 0x02
    11e4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    11e6:	fe 01       	movw	r30, r28
    11e8:	ed 56       	subi	r30, 0x6D	; 109
    11ea:	ff 4f       	sbci	r31, 0xFF	; 255
    11ec:	60 81       	ld	r22, Z
    11ee:	71 81       	ldd	r23, Z+1	; 0x01
    11f0:	82 81       	ldd	r24, Z+2	; 0x02
    11f2:	93 81       	ldd	r25, Z+3	; 0x03
    11f4:	20 e0       	ldi	r18, 0x00	; 0
    11f6:	30 e0       	ldi	r19, 0x00	; 0
    11f8:	40 e8       	ldi	r20, 0x80	; 128
    11fa:	5f e3       	ldi	r21, 0x3F	; 63
    11fc:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1200:	88 23       	and	r24, r24
    1202:	44 f4       	brge	.+16     	; 0x1214 <main+0x4c2>
		__ticks = 1;
    1204:	fe 01       	movw	r30, r28
    1206:	ef 56       	subi	r30, 0x6F	; 111
    1208:	ff 4f       	sbci	r31, 0xFF	; 255
    120a:	81 e0       	ldi	r24, 0x01	; 1
    120c:	90 e0       	ldi	r25, 0x00	; 0
    120e:	91 83       	std	Z+1, r25	; 0x01
    1210:	80 83       	st	Z, r24
    1212:	64 c0       	rjmp	.+200    	; 0x12dc <main+0x58a>
	else if (__tmp > 65535)
    1214:	fe 01       	movw	r30, r28
    1216:	ed 56       	subi	r30, 0x6D	; 109
    1218:	ff 4f       	sbci	r31, 0xFF	; 255
    121a:	60 81       	ld	r22, Z
    121c:	71 81       	ldd	r23, Z+1	; 0x01
    121e:	82 81       	ldd	r24, Z+2	; 0x02
    1220:	93 81       	ldd	r25, Z+3	; 0x03
    1222:	20 e0       	ldi	r18, 0x00	; 0
    1224:	3f ef       	ldi	r19, 0xFF	; 255
    1226:	4f e7       	ldi	r20, 0x7F	; 127
    1228:	57 e4       	ldi	r21, 0x47	; 71
    122a:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    122e:	18 16       	cp	r1, r24
    1230:	0c f0       	brlt	.+2      	; 0x1234 <main+0x4e2>
    1232:	43 c0       	rjmp	.+134    	; 0x12ba <main+0x568>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1234:	fe 01       	movw	r30, r28
    1236:	e9 56       	subi	r30, 0x69	; 105
    1238:	ff 4f       	sbci	r31, 0xFF	; 255
    123a:	60 81       	ld	r22, Z
    123c:	71 81       	ldd	r23, Z+1	; 0x01
    123e:	82 81       	ldd	r24, Z+2	; 0x02
    1240:	93 81       	ldd	r25, Z+3	; 0x03
    1242:	20 e0       	ldi	r18, 0x00	; 0
    1244:	30 e0       	ldi	r19, 0x00	; 0
    1246:	40 e2       	ldi	r20, 0x20	; 32
    1248:	51 e4       	ldi	r21, 0x41	; 65
    124a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    124e:	dc 01       	movw	r26, r24
    1250:	cb 01       	movw	r24, r22
    1252:	8e 01       	movw	r16, r28
    1254:	0f 56       	subi	r16, 0x6F	; 111
    1256:	1f 4f       	sbci	r17, 0xFF	; 255
    1258:	bc 01       	movw	r22, r24
    125a:	cd 01       	movw	r24, r26
    125c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1260:	dc 01       	movw	r26, r24
    1262:	cb 01       	movw	r24, r22
    1264:	f8 01       	movw	r30, r16
    1266:	91 83       	std	Z+1, r25	; 0x01
    1268:	80 83       	st	Z, r24
    126a:	1f c0       	rjmp	.+62     	; 0x12aa <main+0x558>
    126c:	fe 01       	movw	r30, r28
    126e:	e1 57       	subi	r30, 0x71	; 113
    1270:	ff 4f       	sbci	r31, 0xFF	; 255
    1272:	80 e9       	ldi	r24, 0x90	; 144
    1274:	91 e0       	ldi	r25, 0x01	; 1
    1276:	91 83       	std	Z+1, r25	; 0x01
    1278:	80 83       	st	Z, r24
    127a:	fe 01       	movw	r30, r28
    127c:	e1 57       	subi	r30, 0x71	; 113
    127e:	ff 4f       	sbci	r31, 0xFF	; 255
    1280:	80 81       	ld	r24, Z
    1282:	91 81       	ldd	r25, Z+1	; 0x01
    1284:	01 97       	sbiw	r24, 0x01	; 1
    1286:	f1 f7       	brne	.-4      	; 0x1284 <main+0x532>
    1288:	fe 01       	movw	r30, r28
    128a:	e1 57       	subi	r30, 0x71	; 113
    128c:	ff 4f       	sbci	r31, 0xFF	; 255
    128e:	91 83       	std	Z+1, r25	; 0x01
    1290:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1292:	de 01       	movw	r26, r28
    1294:	af 56       	subi	r26, 0x6F	; 111
    1296:	bf 4f       	sbci	r27, 0xFF	; 255
    1298:	fe 01       	movw	r30, r28
    129a:	ef 56       	subi	r30, 0x6F	; 111
    129c:	ff 4f       	sbci	r31, 0xFF	; 255
    129e:	80 81       	ld	r24, Z
    12a0:	91 81       	ldd	r25, Z+1	; 0x01
    12a2:	01 97       	sbiw	r24, 0x01	; 1
    12a4:	11 96       	adiw	r26, 0x01	; 1
    12a6:	9c 93       	st	X, r25
    12a8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    12aa:	fe 01       	movw	r30, r28
    12ac:	ef 56       	subi	r30, 0x6F	; 111
    12ae:	ff 4f       	sbci	r31, 0xFF	; 255
    12b0:	80 81       	ld	r24, Z
    12b2:	91 81       	ldd	r25, Z+1	; 0x01
    12b4:	00 97       	sbiw	r24, 0x00	; 0
    12b6:	d1 f6       	brne	.-76     	; 0x126c <main+0x51a>
    12b8:	27 c0       	rjmp	.+78     	; 0x1308 <main+0x5b6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    12ba:	8e 01       	movw	r16, r28
    12bc:	0f 56       	subi	r16, 0x6F	; 111
    12be:	1f 4f       	sbci	r17, 0xFF	; 255
    12c0:	fe 01       	movw	r30, r28
    12c2:	ed 56       	subi	r30, 0x6D	; 109
    12c4:	ff 4f       	sbci	r31, 0xFF	; 255
    12c6:	60 81       	ld	r22, Z
    12c8:	71 81       	ldd	r23, Z+1	; 0x01
    12ca:	82 81       	ldd	r24, Z+2	; 0x02
    12cc:	93 81       	ldd	r25, Z+3	; 0x03
    12ce:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    12d2:	dc 01       	movw	r26, r24
    12d4:	cb 01       	movw	r24, r22
    12d6:	f8 01       	movw	r30, r16
    12d8:	91 83       	std	Z+1, r25	; 0x01
    12da:	80 83       	st	Z, r24
    12dc:	de 01       	movw	r26, r28
    12de:	a3 57       	subi	r26, 0x73	; 115
    12e0:	bf 4f       	sbci	r27, 0xFF	; 255
    12e2:	fe 01       	movw	r30, r28
    12e4:	ef 56       	subi	r30, 0x6F	; 111
    12e6:	ff 4f       	sbci	r31, 0xFF	; 255
    12e8:	80 81       	ld	r24, Z
    12ea:	91 81       	ldd	r25, Z+1	; 0x01
    12ec:	8d 93       	st	X+, r24
    12ee:	9c 93       	st	X, r25
    12f0:	fe 01       	movw	r30, r28
    12f2:	e3 57       	subi	r30, 0x73	; 115
    12f4:	ff 4f       	sbci	r31, 0xFF	; 255
    12f6:	80 81       	ld	r24, Z
    12f8:	91 81       	ldd	r25, Z+1	; 0x01
    12fa:	01 97       	sbiw	r24, 0x01	; 1
    12fc:	f1 f7       	brne	.-4      	; 0x12fa <main+0x5a8>
    12fe:	fe 01       	movw	r30, r28
    1300:	e3 57       	subi	r30, 0x73	; 115
    1302:	ff 4f       	sbci	r31, 0xFF	; 255
    1304:	91 83       	std	Z+1, r25	; 0x01
    1306:	80 83       	st	Z, r24
		_delay_ms(1);
		PORTA = (PORTA & 0xC0) | (1<<2);
    1308:	ab e3       	ldi	r26, 0x3B	; 59
    130a:	b0 e0       	ldi	r27, 0x00	; 0
    130c:	eb e3       	ldi	r30, 0x3B	; 59
    130e:	f0 e0       	ldi	r31, 0x00	; 0
    1310:	80 81       	ld	r24, Z
    1312:	80 7c       	andi	r24, 0xC0	; 192
    1314:	84 60       	ori	r24, 0x04	; 4
    1316:	8c 93       	st	X, r24
		PORTC = (PORTC & 0xF0) | ((minutes/10%10) & 0x0F);
    1318:	a5 e3       	ldi	r26, 0x35	; 53
    131a:	b0 e0       	ldi	r27, 0x00	; 0
    131c:	e5 e3       	ldi	r30, 0x35	; 53
    131e:	f0 e0       	ldi	r31, 0x00	; 0
    1320:	80 81       	ld	r24, Z
    1322:	28 2f       	mov	r18, r24
    1324:	20 7f       	andi	r18, 0xF0	; 240
    1326:	80 91 6b 00 	lds	r24, 0x006B
    132a:	9a e0       	ldi	r25, 0x0A	; 10
    132c:	69 2f       	mov	r22, r25
    132e:	0e 94 c6 11 	call	0x238c	; 0x238c <__divmodqi4>
    1332:	9a e0       	ldi	r25, 0x0A	; 10
    1334:	69 2f       	mov	r22, r25
    1336:	0e 94 c6 11 	call	0x238c	; 0x238c <__divmodqi4>
    133a:	89 2f       	mov	r24, r25
    133c:	8f 70       	andi	r24, 0x0F	; 15
    133e:	82 2b       	or	r24, r18
    1340:	8c 93       	st	X, r24
    1342:	fe 01       	movw	r30, r28
    1344:	e7 57       	subi	r30, 0x77	; 119
    1346:	ff 4f       	sbci	r31, 0xFF	; 255
    1348:	80 e0       	ldi	r24, 0x00	; 0
    134a:	90 e0       	ldi	r25, 0x00	; 0
    134c:	a0 e8       	ldi	r26, 0x80	; 128
    134e:	bf e3       	ldi	r27, 0x3F	; 63
    1350:	80 83       	st	Z, r24
    1352:	91 83       	std	Z+1, r25	; 0x01
    1354:	a2 83       	std	Z+2, r26	; 0x02
    1356:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1358:	8e 01       	movw	r16, r28
    135a:	0b 57       	subi	r16, 0x7B	; 123
    135c:	1f 4f       	sbci	r17, 0xFF	; 255
    135e:	fe 01       	movw	r30, r28
    1360:	e7 57       	subi	r30, 0x77	; 119
    1362:	ff 4f       	sbci	r31, 0xFF	; 255
    1364:	60 81       	ld	r22, Z
    1366:	71 81       	ldd	r23, Z+1	; 0x01
    1368:	82 81       	ldd	r24, Z+2	; 0x02
    136a:	93 81       	ldd	r25, Z+3	; 0x03
    136c:	20 e0       	ldi	r18, 0x00	; 0
    136e:	30 e0       	ldi	r19, 0x00	; 0
    1370:	4a e7       	ldi	r20, 0x7A	; 122
    1372:	55 e4       	ldi	r21, 0x45	; 69
    1374:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1378:	dc 01       	movw	r26, r24
    137a:	cb 01       	movw	r24, r22
    137c:	f8 01       	movw	r30, r16
    137e:	80 83       	st	Z, r24
    1380:	91 83       	std	Z+1, r25	; 0x01
    1382:	a2 83       	std	Z+2, r26	; 0x02
    1384:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1386:	fe 01       	movw	r30, r28
    1388:	eb 57       	subi	r30, 0x7B	; 123
    138a:	ff 4f       	sbci	r31, 0xFF	; 255
    138c:	60 81       	ld	r22, Z
    138e:	71 81       	ldd	r23, Z+1	; 0x01
    1390:	82 81       	ldd	r24, Z+2	; 0x02
    1392:	93 81       	ldd	r25, Z+3	; 0x03
    1394:	20 e0       	ldi	r18, 0x00	; 0
    1396:	30 e0       	ldi	r19, 0x00	; 0
    1398:	40 e8       	ldi	r20, 0x80	; 128
    139a:	5f e3       	ldi	r21, 0x3F	; 63
    139c:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    13a0:	88 23       	and	r24, r24
    13a2:	44 f4       	brge	.+16     	; 0x13b4 <main+0x662>
		__ticks = 1;
    13a4:	fe 01       	movw	r30, r28
    13a6:	ed 57       	subi	r30, 0x7D	; 125
    13a8:	ff 4f       	sbci	r31, 0xFF	; 255
    13aa:	81 e0       	ldi	r24, 0x01	; 1
    13ac:	90 e0       	ldi	r25, 0x00	; 0
    13ae:	91 83       	std	Z+1, r25	; 0x01
    13b0:	80 83       	st	Z, r24
    13b2:	64 c0       	rjmp	.+200    	; 0x147c <main+0x72a>
	else if (__tmp > 65535)
    13b4:	fe 01       	movw	r30, r28
    13b6:	eb 57       	subi	r30, 0x7B	; 123
    13b8:	ff 4f       	sbci	r31, 0xFF	; 255
    13ba:	60 81       	ld	r22, Z
    13bc:	71 81       	ldd	r23, Z+1	; 0x01
    13be:	82 81       	ldd	r24, Z+2	; 0x02
    13c0:	93 81       	ldd	r25, Z+3	; 0x03
    13c2:	20 e0       	ldi	r18, 0x00	; 0
    13c4:	3f ef       	ldi	r19, 0xFF	; 255
    13c6:	4f e7       	ldi	r20, 0x7F	; 127
    13c8:	57 e4       	ldi	r21, 0x47	; 71
    13ca:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    13ce:	18 16       	cp	r1, r24
    13d0:	0c f0       	brlt	.+2      	; 0x13d4 <main+0x682>
    13d2:	43 c0       	rjmp	.+134    	; 0x145a <main+0x708>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    13d4:	fe 01       	movw	r30, r28
    13d6:	e7 57       	subi	r30, 0x77	; 119
    13d8:	ff 4f       	sbci	r31, 0xFF	; 255
    13da:	60 81       	ld	r22, Z
    13dc:	71 81       	ldd	r23, Z+1	; 0x01
    13de:	82 81       	ldd	r24, Z+2	; 0x02
    13e0:	93 81       	ldd	r25, Z+3	; 0x03
    13e2:	20 e0       	ldi	r18, 0x00	; 0
    13e4:	30 e0       	ldi	r19, 0x00	; 0
    13e6:	40 e2       	ldi	r20, 0x20	; 32
    13e8:	51 e4       	ldi	r21, 0x41	; 65
    13ea:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    13ee:	dc 01       	movw	r26, r24
    13f0:	cb 01       	movw	r24, r22
    13f2:	8e 01       	movw	r16, r28
    13f4:	0d 57       	subi	r16, 0x7D	; 125
    13f6:	1f 4f       	sbci	r17, 0xFF	; 255
    13f8:	bc 01       	movw	r22, r24
    13fa:	cd 01       	movw	r24, r26
    13fc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1400:	dc 01       	movw	r26, r24
    1402:	cb 01       	movw	r24, r22
    1404:	f8 01       	movw	r30, r16
    1406:	91 83       	std	Z+1, r25	; 0x01
    1408:	80 83       	st	Z, r24
    140a:	1f c0       	rjmp	.+62     	; 0x144a <main+0x6f8>
    140c:	fe 01       	movw	r30, r28
    140e:	ef 57       	subi	r30, 0x7F	; 127
    1410:	ff 4f       	sbci	r31, 0xFF	; 255
    1412:	80 e9       	ldi	r24, 0x90	; 144
    1414:	91 e0       	ldi	r25, 0x01	; 1
    1416:	91 83       	std	Z+1, r25	; 0x01
    1418:	80 83       	st	Z, r24
    141a:	fe 01       	movw	r30, r28
    141c:	ef 57       	subi	r30, 0x7F	; 127
    141e:	ff 4f       	sbci	r31, 0xFF	; 255
    1420:	80 81       	ld	r24, Z
    1422:	91 81       	ldd	r25, Z+1	; 0x01
    1424:	01 97       	sbiw	r24, 0x01	; 1
    1426:	f1 f7       	brne	.-4      	; 0x1424 <main+0x6d2>
    1428:	fe 01       	movw	r30, r28
    142a:	ef 57       	subi	r30, 0x7F	; 127
    142c:	ff 4f       	sbci	r31, 0xFF	; 255
    142e:	91 83       	std	Z+1, r25	; 0x01
    1430:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1432:	de 01       	movw	r26, r28
    1434:	ad 57       	subi	r26, 0x7D	; 125
    1436:	bf 4f       	sbci	r27, 0xFF	; 255
    1438:	fe 01       	movw	r30, r28
    143a:	ed 57       	subi	r30, 0x7D	; 125
    143c:	ff 4f       	sbci	r31, 0xFF	; 255
    143e:	80 81       	ld	r24, Z
    1440:	91 81       	ldd	r25, Z+1	; 0x01
    1442:	01 97       	sbiw	r24, 0x01	; 1
    1444:	11 96       	adiw	r26, 0x01	; 1
    1446:	9c 93       	st	X, r25
    1448:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    144a:	fe 01       	movw	r30, r28
    144c:	ed 57       	subi	r30, 0x7D	; 125
    144e:	ff 4f       	sbci	r31, 0xFF	; 255
    1450:	80 81       	ld	r24, Z
    1452:	91 81       	ldd	r25, Z+1	; 0x01
    1454:	00 97       	sbiw	r24, 0x00	; 0
    1456:	d1 f6       	brne	.-76     	; 0x140c <main+0x6ba>
    1458:	27 c0       	rjmp	.+78     	; 0x14a8 <main+0x756>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    145a:	8e 01       	movw	r16, r28
    145c:	0d 57       	subi	r16, 0x7D	; 125
    145e:	1f 4f       	sbci	r17, 0xFF	; 255
    1460:	fe 01       	movw	r30, r28
    1462:	eb 57       	subi	r30, 0x7B	; 123
    1464:	ff 4f       	sbci	r31, 0xFF	; 255
    1466:	60 81       	ld	r22, Z
    1468:	71 81       	ldd	r23, Z+1	; 0x01
    146a:	82 81       	ldd	r24, Z+2	; 0x02
    146c:	93 81       	ldd	r25, Z+3	; 0x03
    146e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1472:	dc 01       	movw	r26, r24
    1474:	cb 01       	movw	r24, r22
    1476:	f8 01       	movw	r30, r16
    1478:	91 83       	std	Z+1, r25	; 0x01
    147a:	80 83       	st	Z, r24
    147c:	de 01       	movw	r26, r28
    147e:	a1 58       	subi	r26, 0x81	; 129
    1480:	bf 4f       	sbci	r27, 0xFF	; 255
    1482:	fe 01       	movw	r30, r28
    1484:	ed 57       	subi	r30, 0x7D	; 125
    1486:	ff 4f       	sbci	r31, 0xFF	; 255
    1488:	80 81       	ld	r24, Z
    148a:	91 81       	ldd	r25, Z+1	; 0x01
    148c:	8d 93       	st	X+, r24
    148e:	9c 93       	st	X, r25
    1490:	fe 01       	movw	r30, r28
    1492:	e1 58       	subi	r30, 0x81	; 129
    1494:	ff 4f       	sbci	r31, 0xFF	; 255
    1496:	80 81       	ld	r24, Z
    1498:	91 81       	ldd	r25, Z+1	; 0x01
    149a:	01 97       	sbiw	r24, 0x01	; 1
    149c:	f1 f7       	brne	.-4      	; 0x149a <main+0x748>
    149e:	fe 01       	movw	r30, r28
    14a0:	e1 58       	subi	r30, 0x81	; 129
    14a2:	ff 4f       	sbci	r31, 0xFF	; 255
    14a4:	91 83       	std	Z+1, r25	; 0x01
    14a6:	80 83       	st	Z, r24
		_delay_ms(1);

		//Display hours
		PORTA = (PORTA & 0xC0) | (1<<1);
    14a8:	ab e3       	ldi	r26, 0x3B	; 59
    14aa:	b0 e0       	ldi	r27, 0x00	; 0
    14ac:	eb e3       	ldi	r30, 0x3B	; 59
    14ae:	f0 e0       	ldi	r31, 0x00	; 0
    14b0:	80 81       	ld	r24, Z
    14b2:	80 7c       	andi	r24, 0xC0	; 192
    14b4:	82 60       	ori	r24, 0x02	; 2
    14b6:	8c 93       	st	X, r24
		PORTC = (PORTC & 0xF0) | ((hours%10) & 0x0F);
    14b8:	a5 e3       	ldi	r26, 0x35	; 53
    14ba:	b0 e0       	ldi	r27, 0x00	; 0
    14bc:	e5 e3       	ldi	r30, 0x35	; 53
    14be:	f0 e0       	ldi	r31, 0x00	; 0
    14c0:	80 81       	ld	r24, Z
    14c2:	28 2f       	mov	r18, r24
    14c4:	20 7f       	andi	r18, 0xF0	; 240
    14c6:	80 91 6c 00 	lds	r24, 0x006C
    14ca:	9a e0       	ldi	r25, 0x0A	; 10
    14cc:	69 2f       	mov	r22, r25
    14ce:	0e 94 c6 11 	call	0x238c	; 0x238c <__divmodqi4>
    14d2:	89 2f       	mov	r24, r25
    14d4:	8f 70       	andi	r24, 0x0F	; 15
    14d6:	82 2b       	or	r24, r18
    14d8:	8c 93       	st	X, r24
    14da:	fe 01       	movw	r30, r28
    14dc:	e5 58       	subi	r30, 0x85	; 133
    14de:	ff 4f       	sbci	r31, 0xFF	; 255
    14e0:	80 e0       	ldi	r24, 0x00	; 0
    14e2:	90 e0       	ldi	r25, 0x00	; 0
    14e4:	a0 e8       	ldi	r26, 0x80	; 128
    14e6:	bf e3       	ldi	r27, 0x3F	; 63
    14e8:	80 83       	st	Z, r24
    14ea:	91 83       	std	Z+1, r25	; 0x01
    14ec:	a2 83       	std	Z+2, r26	; 0x02
    14ee:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    14f0:	8e 01       	movw	r16, r28
    14f2:	09 58       	subi	r16, 0x89	; 137
    14f4:	1f 4f       	sbci	r17, 0xFF	; 255
    14f6:	fe 01       	movw	r30, r28
    14f8:	e5 58       	subi	r30, 0x85	; 133
    14fa:	ff 4f       	sbci	r31, 0xFF	; 255
    14fc:	60 81       	ld	r22, Z
    14fe:	71 81       	ldd	r23, Z+1	; 0x01
    1500:	82 81       	ldd	r24, Z+2	; 0x02
    1502:	93 81       	ldd	r25, Z+3	; 0x03
    1504:	20 e0       	ldi	r18, 0x00	; 0
    1506:	30 e0       	ldi	r19, 0x00	; 0
    1508:	4a e7       	ldi	r20, 0x7A	; 122
    150a:	55 e4       	ldi	r21, 0x45	; 69
    150c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1510:	dc 01       	movw	r26, r24
    1512:	cb 01       	movw	r24, r22
    1514:	f8 01       	movw	r30, r16
    1516:	80 83       	st	Z, r24
    1518:	91 83       	std	Z+1, r25	; 0x01
    151a:	a2 83       	std	Z+2, r26	; 0x02
    151c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    151e:	fe 01       	movw	r30, r28
    1520:	e9 58       	subi	r30, 0x89	; 137
    1522:	ff 4f       	sbci	r31, 0xFF	; 255
    1524:	60 81       	ld	r22, Z
    1526:	71 81       	ldd	r23, Z+1	; 0x01
    1528:	82 81       	ldd	r24, Z+2	; 0x02
    152a:	93 81       	ldd	r25, Z+3	; 0x03
    152c:	20 e0       	ldi	r18, 0x00	; 0
    152e:	30 e0       	ldi	r19, 0x00	; 0
    1530:	40 e8       	ldi	r20, 0x80	; 128
    1532:	5f e3       	ldi	r21, 0x3F	; 63
    1534:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1538:	88 23       	and	r24, r24
    153a:	44 f4       	brge	.+16     	; 0x154c <main+0x7fa>
		__ticks = 1;
    153c:	fe 01       	movw	r30, r28
    153e:	eb 58       	subi	r30, 0x8B	; 139
    1540:	ff 4f       	sbci	r31, 0xFF	; 255
    1542:	81 e0       	ldi	r24, 0x01	; 1
    1544:	90 e0       	ldi	r25, 0x00	; 0
    1546:	91 83       	std	Z+1, r25	; 0x01
    1548:	80 83       	st	Z, r24
    154a:	64 c0       	rjmp	.+200    	; 0x1614 <main+0x8c2>
	else if (__tmp > 65535)
    154c:	fe 01       	movw	r30, r28
    154e:	e9 58       	subi	r30, 0x89	; 137
    1550:	ff 4f       	sbci	r31, 0xFF	; 255
    1552:	60 81       	ld	r22, Z
    1554:	71 81       	ldd	r23, Z+1	; 0x01
    1556:	82 81       	ldd	r24, Z+2	; 0x02
    1558:	93 81       	ldd	r25, Z+3	; 0x03
    155a:	20 e0       	ldi	r18, 0x00	; 0
    155c:	3f ef       	ldi	r19, 0xFF	; 255
    155e:	4f e7       	ldi	r20, 0x7F	; 127
    1560:	57 e4       	ldi	r21, 0x47	; 71
    1562:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1566:	18 16       	cp	r1, r24
    1568:	0c f0       	brlt	.+2      	; 0x156c <main+0x81a>
    156a:	43 c0       	rjmp	.+134    	; 0x15f2 <main+0x8a0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    156c:	fe 01       	movw	r30, r28
    156e:	e5 58       	subi	r30, 0x85	; 133
    1570:	ff 4f       	sbci	r31, 0xFF	; 255
    1572:	60 81       	ld	r22, Z
    1574:	71 81       	ldd	r23, Z+1	; 0x01
    1576:	82 81       	ldd	r24, Z+2	; 0x02
    1578:	93 81       	ldd	r25, Z+3	; 0x03
    157a:	20 e0       	ldi	r18, 0x00	; 0
    157c:	30 e0       	ldi	r19, 0x00	; 0
    157e:	40 e2       	ldi	r20, 0x20	; 32
    1580:	51 e4       	ldi	r21, 0x41	; 65
    1582:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1586:	dc 01       	movw	r26, r24
    1588:	cb 01       	movw	r24, r22
    158a:	8e 01       	movw	r16, r28
    158c:	0b 58       	subi	r16, 0x8B	; 139
    158e:	1f 4f       	sbci	r17, 0xFF	; 255
    1590:	bc 01       	movw	r22, r24
    1592:	cd 01       	movw	r24, r26
    1594:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1598:	dc 01       	movw	r26, r24
    159a:	cb 01       	movw	r24, r22
    159c:	f8 01       	movw	r30, r16
    159e:	91 83       	std	Z+1, r25	; 0x01
    15a0:	80 83       	st	Z, r24
    15a2:	1f c0       	rjmp	.+62     	; 0x15e2 <main+0x890>
    15a4:	fe 01       	movw	r30, r28
    15a6:	ed 58       	subi	r30, 0x8D	; 141
    15a8:	ff 4f       	sbci	r31, 0xFF	; 255
    15aa:	80 e9       	ldi	r24, 0x90	; 144
    15ac:	91 e0       	ldi	r25, 0x01	; 1
    15ae:	91 83       	std	Z+1, r25	; 0x01
    15b0:	80 83       	st	Z, r24
    15b2:	fe 01       	movw	r30, r28
    15b4:	ed 58       	subi	r30, 0x8D	; 141
    15b6:	ff 4f       	sbci	r31, 0xFF	; 255
    15b8:	80 81       	ld	r24, Z
    15ba:	91 81       	ldd	r25, Z+1	; 0x01
    15bc:	01 97       	sbiw	r24, 0x01	; 1
    15be:	f1 f7       	brne	.-4      	; 0x15bc <main+0x86a>
    15c0:	fe 01       	movw	r30, r28
    15c2:	ed 58       	subi	r30, 0x8D	; 141
    15c4:	ff 4f       	sbci	r31, 0xFF	; 255
    15c6:	91 83       	std	Z+1, r25	; 0x01
    15c8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    15ca:	de 01       	movw	r26, r28
    15cc:	ab 58       	subi	r26, 0x8B	; 139
    15ce:	bf 4f       	sbci	r27, 0xFF	; 255
    15d0:	fe 01       	movw	r30, r28
    15d2:	eb 58       	subi	r30, 0x8B	; 139
    15d4:	ff 4f       	sbci	r31, 0xFF	; 255
    15d6:	80 81       	ld	r24, Z
    15d8:	91 81       	ldd	r25, Z+1	; 0x01
    15da:	01 97       	sbiw	r24, 0x01	; 1
    15dc:	11 96       	adiw	r26, 0x01	; 1
    15de:	9c 93       	st	X, r25
    15e0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    15e2:	fe 01       	movw	r30, r28
    15e4:	eb 58       	subi	r30, 0x8B	; 139
    15e6:	ff 4f       	sbci	r31, 0xFF	; 255
    15e8:	80 81       	ld	r24, Z
    15ea:	91 81       	ldd	r25, Z+1	; 0x01
    15ec:	00 97       	sbiw	r24, 0x00	; 0
    15ee:	d1 f6       	brne	.-76     	; 0x15a4 <main+0x852>
    15f0:	27 c0       	rjmp	.+78     	; 0x1640 <main+0x8ee>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    15f2:	8e 01       	movw	r16, r28
    15f4:	0b 58       	subi	r16, 0x8B	; 139
    15f6:	1f 4f       	sbci	r17, 0xFF	; 255
    15f8:	fe 01       	movw	r30, r28
    15fa:	e9 58       	subi	r30, 0x89	; 137
    15fc:	ff 4f       	sbci	r31, 0xFF	; 255
    15fe:	60 81       	ld	r22, Z
    1600:	71 81       	ldd	r23, Z+1	; 0x01
    1602:	82 81       	ldd	r24, Z+2	; 0x02
    1604:	93 81       	ldd	r25, Z+3	; 0x03
    1606:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    160a:	dc 01       	movw	r26, r24
    160c:	cb 01       	movw	r24, r22
    160e:	f8 01       	movw	r30, r16
    1610:	91 83       	std	Z+1, r25	; 0x01
    1612:	80 83       	st	Z, r24
    1614:	de 01       	movw	r26, r28
    1616:	af 58       	subi	r26, 0x8F	; 143
    1618:	bf 4f       	sbci	r27, 0xFF	; 255
    161a:	fe 01       	movw	r30, r28
    161c:	eb 58       	subi	r30, 0x8B	; 139
    161e:	ff 4f       	sbci	r31, 0xFF	; 255
    1620:	80 81       	ld	r24, Z
    1622:	91 81       	ldd	r25, Z+1	; 0x01
    1624:	8d 93       	st	X+, r24
    1626:	9c 93       	st	X, r25
    1628:	fe 01       	movw	r30, r28
    162a:	ef 58       	subi	r30, 0x8F	; 143
    162c:	ff 4f       	sbci	r31, 0xFF	; 255
    162e:	80 81       	ld	r24, Z
    1630:	91 81       	ldd	r25, Z+1	; 0x01
    1632:	01 97       	sbiw	r24, 0x01	; 1
    1634:	f1 f7       	brne	.-4      	; 0x1632 <main+0x8e0>
    1636:	fe 01       	movw	r30, r28
    1638:	ef 58       	subi	r30, 0x8F	; 143
    163a:	ff 4f       	sbci	r31, 0xFF	; 255
    163c:	91 83       	std	Z+1, r25	; 0x01
    163e:	80 83       	st	Z, r24
		_delay_ms(1);
		PORTA = (PORTA & 0xC0) | (1<<0);
    1640:	ab e3       	ldi	r26, 0x3B	; 59
    1642:	b0 e0       	ldi	r27, 0x00	; 0
    1644:	eb e3       	ldi	r30, 0x3B	; 59
    1646:	f0 e0       	ldi	r31, 0x00	; 0
    1648:	80 81       	ld	r24, Z
    164a:	80 7c       	andi	r24, 0xC0	; 192
    164c:	81 60       	ori	r24, 0x01	; 1
    164e:	8c 93       	st	X, r24
		PORTC = (PORTC & 0xF0) | ((hours/10%10) & 0x0F);
    1650:	a5 e3       	ldi	r26, 0x35	; 53
    1652:	b0 e0       	ldi	r27, 0x00	; 0
    1654:	e5 e3       	ldi	r30, 0x35	; 53
    1656:	f0 e0       	ldi	r31, 0x00	; 0
    1658:	80 81       	ld	r24, Z
    165a:	28 2f       	mov	r18, r24
    165c:	20 7f       	andi	r18, 0xF0	; 240
    165e:	80 91 6c 00 	lds	r24, 0x006C
    1662:	9a e0       	ldi	r25, 0x0A	; 10
    1664:	69 2f       	mov	r22, r25
    1666:	0e 94 c6 11 	call	0x238c	; 0x238c <__divmodqi4>
    166a:	9a e0       	ldi	r25, 0x0A	; 10
    166c:	69 2f       	mov	r22, r25
    166e:	0e 94 c6 11 	call	0x238c	; 0x238c <__divmodqi4>
    1672:	89 2f       	mov	r24, r25
    1674:	8f 70       	andi	r24, 0x0F	; 15
    1676:	82 2b       	or	r24, r18
    1678:	8c 93       	st	X, r24
    167a:	fe 01       	movw	r30, r28
    167c:	e3 59       	subi	r30, 0x93	; 147
    167e:	ff 4f       	sbci	r31, 0xFF	; 255
    1680:	80 e0       	ldi	r24, 0x00	; 0
    1682:	90 e0       	ldi	r25, 0x00	; 0
    1684:	a0 e8       	ldi	r26, 0x80	; 128
    1686:	bf e3       	ldi	r27, 0x3F	; 63
    1688:	80 83       	st	Z, r24
    168a:	91 83       	std	Z+1, r25	; 0x01
    168c:	a2 83       	std	Z+2, r26	; 0x02
    168e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1690:	8e 01       	movw	r16, r28
    1692:	07 59       	subi	r16, 0x97	; 151
    1694:	1f 4f       	sbci	r17, 0xFF	; 255
    1696:	fe 01       	movw	r30, r28
    1698:	e3 59       	subi	r30, 0x93	; 147
    169a:	ff 4f       	sbci	r31, 0xFF	; 255
    169c:	60 81       	ld	r22, Z
    169e:	71 81       	ldd	r23, Z+1	; 0x01
    16a0:	82 81       	ldd	r24, Z+2	; 0x02
    16a2:	93 81       	ldd	r25, Z+3	; 0x03
    16a4:	20 e0       	ldi	r18, 0x00	; 0
    16a6:	30 e0       	ldi	r19, 0x00	; 0
    16a8:	4a e7       	ldi	r20, 0x7A	; 122
    16aa:	55 e4       	ldi	r21, 0x45	; 69
    16ac:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    16b0:	dc 01       	movw	r26, r24
    16b2:	cb 01       	movw	r24, r22
    16b4:	f8 01       	movw	r30, r16
    16b6:	80 83       	st	Z, r24
    16b8:	91 83       	std	Z+1, r25	; 0x01
    16ba:	a2 83       	std	Z+2, r26	; 0x02
    16bc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    16be:	fe 01       	movw	r30, r28
    16c0:	e7 59       	subi	r30, 0x97	; 151
    16c2:	ff 4f       	sbci	r31, 0xFF	; 255
    16c4:	60 81       	ld	r22, Z
    16c6:	71 81       	ldd	r23, Z+1	; 0x01
    16c8:	82 81       	ldd	r24, Z+2	; 0x02
    16ca:	93 81       	ldd	r25, Z+3	; 0x03
    16cc:	20 e0       	ldi	r18, 0x00	; 0
    16ce:	30 e0       	ldi	r19, 0x00	; 0
    16d0:	40 e8       	ldi	r20, 0x80	; 128
    16d2:	5f e3       	ldi	r21, 0x3F	; 63
    16d4:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    16d8:	88 23       	and	r24, r24
    16da:	44 f4       	brge	.+16     	; 0x16ec <main+0x99a>
		__ticks = 1;
    16dc:	fe 01       	movw	r30, r28
    16de:	e9 59       	subi	r30, 0x99	; 153
    16e0:	ff 4f       	sbci	r31, 0xFF	; 255
    16e2:	81 e0       	ldi	r24, 0x01	; 1
    16e4:	90 e0       	ldi	r25, 0x00	; 0
    16e6:	91 83       	std	Z+1, r25	; 0x01
    16e8:	80 83       	st	Z, r24
    16ea:	64 c0       	rjmp	.+200    	; 0x17b4 <main+0xa62>
	else if (__tmp > 65535)
    16ec:	fe 01       	movw	r30, r28
    16ee:	e7 59       	subi	r30, 0x97	; 151
    16f0:	ff 4f       	sbci	r31, 0xFF	; 255
    16f2:	60 81       	ld	r22, Z
    16f4:	71 81       	ldd	r23, Z+1	; 0x01
    16f6:	82 81       	ldd	r24, Z+2	; 0x02
    16f8:	93 81       	ldd	r25, Z+3	; 0x03
    16fa:	20 e0       	ldi	r18, 0x00	; 0
    16fc:	3f ef       	ldi	r19, 0xFF	; 255
    16fe:	4f e7       	ldi	r20, 0x7F	; 127
    1700:	57 e4       	ldi	r21, 0x47	; 71
    1702:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1706:	18 16       	cp	r1, r24
    1708:	0c f0       	brlt	.+2      	; 0x170c <main+0x9ba>
    170a:	43 c0       	rjmp	.+134    	; 0x1792 <main+0xa40>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    170c:	fe 01       	movw	r30, r28
    170e:	e3 59       	subi	r30, 0x93	; 147
    1710:	ff 4f       	sbci	r31, 0xFF	; 255
    1712:	60 81       	ld	r22, Z
    1714:	71 81       	ldd	r23, Z+1	; 0x01
    1716:	82 81       	ldd	r24, Z+2	; 0x02
    1718:	93 81       	ldd	r25, Z+3	; 0x03
    171a:	20 e0       	ldi	r18, 0x00	; 0
    171c:	30 e0       	ldi	r19, 0x00	; 0
    171e:	40 e2       	ldi	r20, 0x20	; 32
    1720:	51 e4       	ldi	r21, 0x41	; 65
    1722:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1726:	dc 01       	movw	r26, r24
    1728:	cb 01       	movw	r24, r22
    172a:	8e 01       	movw	r16, r28
    172c:	09 59       	subi	r16, 0x99	; 153
    172e:	1f 4f       	sbci	r17, 0xFF	; 255
    1730:	bc 01       	movw	r22, r24
    1732:	cd 01       	movw	r24, r26
    1734:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1738:	dc 01       	movw	r26, r24
    173a:	cb 01       	movw	r24, r22
    173c:	f8 01       	movw	r30, r16
    173e:	91 83       	std	Z+1, r25	; 0x01
    1740:	80 83       	st	Z, r24
    1742:	1f c0       	rjmp	.+62     	; 0x1782 <main+0xa30>
    1744:	fe 01       	movw	r30, r28
    1746:	eb 59       	subi	r30, 0x9B	; 155
    1748:	ff 4f       	sbci	r31, 0xFF	; 255
    174a:	80 e9       	ldi	r24, 0x90	; 144
    174c:	91 e0       	ldi	r25, 0x01	; 1
    174e:	91 83       	std	Z+1, r25	; 0x01
    1750:	80 83       	st	Z, r24
    1752:	fe 01       	movw	r30, r28
    1754:	eb 59       	subi	r30, 0x9B	; 155
    1756:	ff 4f       	sbci	r31, 0xFF	; 255
    1758:	80 81       	ld	r24, Z
    175a:	91 81       	ldd	r25, Z+1	; 0x01
    175c:	01 97       	sbiw	r24, 0x01	; 1
    175e:	f1 f7       	brne	.-4      	; 0x175c <main+0xa0a>
    1760:	fe 01       	movw	r30, r28
    1762:	eb 59       	subi	r30, 0x9B	; 155
    1764:	ff 4f       	sbci	r31, 0xFF	; 255
    1766:	91 83       	std	Z+1, r25	; 0x01
    1768:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    176a:	de 01       	movw	r26, r28
    176c:	a9 59       	subi	r26, 0x99	; 153
    176e:	bf 4f       	sbci	r27, 0xFF	; 255
    1770:	fe 01       	movw	r30, r28
    1772:	e9 59       	subi	r30, 0x99	; 153
    1774:	ff 4f       	sbci	r31, 0xFF	; 255
    1776:	80 81       	ld	r24, Z
    1778:	91 81       	ldd	r25, Z+1	; 0x01
    177a:	01 97       	sbiw	r24, 0x01	; 1
    177c:	11 96       	adiw	r26, 0x01	; 1
    177e:	9c 93       	st	X, r25
    1780:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1782:	fe 01       	movw	r30, r28
    1784:	e9 59       	subi	r30, 0x99	; 153
    1786:	ff 4f       	sbci	r31, 0xFF	; 255
    1788:	80 81       	ld	r24, Z
    178a:	91 81       	ldd	r25, Z+1	; 0x01
    178c:	00 97       	sbiw	r24, 0x00	; 0
    178e:	d1 f6       	brne	.-76     	; 0x1744 <main+0x9f2>
    1790:	28 c0       	rjmp	.+80     	; 0x17e2 <main+0xa90>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1792:	8e 01       	movw	r16, r28
    1794:	09 59       	subi	r16, 0x99	; 153
    1796:	1f 4f       	sbci	r17, 0xFF	; 255
    1798:	fe 01       	movw	r30, r28
    179a:	e7 59       	subi	r30, 0x97	; 151
    179c:	ff 4f       	sbci	r31, 0xFF	; 255
    179e:	60 81       	ld	r22, Z
    17a0:	71 81       	ldd	r23, Z+1	; 0x01
    17a2:	82 81       	ldd	r24, Z+2	; 0x02
    17a4:	93 81       	ldd	r25, Z+3	; 0x03
    17a6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    17aa:	dc 01       	movw	r26, r24
    17ac:	cb 01       	movw	r24, r22
    17ae:	f8 01       	movw	r30, r16
    17b0:	91 83       	std	Z+1, r25	; 0x01
    17b2:	80 83       	st	Z, r24
    17b4:	de 01       	movw	r26, r28
    17b6:	ad 59       	subi	r26, 0x9D	; 157
    17b8:	bf 4f       	sbci	r27, 0xFF	; 255
    17ba:	fe 01       	movw	r30, r28
    17bc:	e9 59       	subi	r30, 0x99	; 153
    17be:	ff 4f       	sbci	r31, 0xFF	; 255
    17c0:	80 81       	ld	r24, Z
    17c2:	91 81       	ldd	r25, Z+1	; 0x01
    17c4:	11 96       	adiw	r26, 0x01	; 1
    17c6:	9c 93       	st	X, r25
    17c8:	8e 93       	st	-X, r24
    17ca:	fe 01       	movw	r30, r28
    17cc:	ed 59       	subi	r30, 0x9D	; 157
    17ce:	ff 4f       	sbci	r31, 0xFF	; 255
    17d0:	80 81       	ld	r24, Z
    17d2:	91 81       	ldd	r25, Z+1	; 0x01
    17d4:	01 97       	sbiw	r24, 0x01	; 1
    17d6:	f1 f7       	brne	.-4      	; 0x17d4 <main+0xa82>
    17d8:	fe 01       	movw	r30, r28
    17da:	ed 59       	subi	r30, 0x9D	; 157
    17dc:	ff 4f       	sbci	r31, 0xFF	; 255
    17de:	91 83       	std	Z+1, r25	; 0x01
    17e0:	80 83       	st	Z, r24
		_delay_ms(1);

		// Up/Down mode select PB
		if(!(PINB & (1<<7)) && state == COUNT_OFF && MFlag == 0){
    17e2:	e6 e3       	ldi	r30, 0x36	; 54
    17e4:	f0 e0       	ldi	r31, 0x00	; 0
    17e6:	80 81       	ld	r24, Z
    17e8:	88 23       	and	r24, r24
    17ea:	0c f4       	brge	.+2      	; 0x17ee <main+0xa9c>
    17ec:	d8 c0       	rjmp	.+432    	; 0x199e <main+0xc4c>
    17ee:	80 91 69 00 	lds	r24, 0x0069
    17f2:	81 30       	cpi	r24, 0x01	; 1
    17f4:	09 f0       	breq	.+2      	; 0x17f8 <main+0xaa6>
    17f6:	d3 c0       	rjmp	.+422    	; 0x199e <main+0xc4c>
    17f8:	fe 01       	movw	r30, r28
    17fa:	e3 54       	subi	r30, 0x43	; 67
    17fc:	ff 4f       	sbci	r31, 0xFF	; 255
    17fe:	80 81       	ld	r24, Z
    1800:	88 23       	and	r24, r24
    1802:	09 f0       	breq	.+2      	; 0x1806 <main+0xab4>
    1804:	cc c0       	rjmp	.+408    	; 0x199e <main+0xc4c>
    1806:	fe 01       	movw	r30, r28
    1808:	e1 5a       	subi	r30, 0xA1	; 161
    180a:	ff 4f       	sbci	r31, 0xFF	; 255
    180c:	80 e0       	ldi	r24, 0x00	; 0
    180e:	90 e0       	ldi	r25, 0x00	; 0
    1810:	a0 ea       	ldi	r26, 0xA0	; 160
    1812:	b1 e4       	ldi	r27, 0x41	; 65
    1814:	80 83       	st	Z, r24
    1816:	91 83       	std	Z+1, r25	; 0x01
    1818:	a2 83       	std	Z+2, r26	; 0x02
    181a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    181c:	8e 01       	movw	r16, r28
    181e:	05 5a       	subi	r16, 0xA5	; 165
    1820:	1f 4f       	sbci	r17, 0xFF	; 255
    1822:	fe 01       	movw	r30, r28
    1824:	e1 5a       	subi	r30, 0xA1	; 161
    1826:	ff 4f       	sbci	r31, 0xFF	; 255
    1828:	60 81       	ld	r22, Z
    182a:	71 81       	ldd	r23, Z+1	; 0x01
    182c:	82 81       	ldd	r24, Z+2	; 0x02
    182e:	93 81       	ldd	r25, Z+3	; 0x03
    1830:	20 e0       	ldi	r18, 0x00	; 0
    1832:	30 e0       	ldi	r19, 0x00	; 0
    1834:	4a e7       	ldi	r20, 0x7A	; 122
    1836:	55 e4       	ldi	r21, 0x45	; 69
    1838:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    183c:	dc 01       	movw	r26, r24
    183e:	cb 01       	movw	r24, r22
    1840:	f8 01       	movw	r30, r16
    1842:	80 83       	st	Z, r24
    1844:	91 83       	std	Z+1, r25	; 0x01
    1846:	a2 83       	std	Z+2, r26	; 0x02
    1848:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    184a:	fe 01       	movw	r30, r28
    184c:	e5 5a       	subi	r30, 0xA5	; 165
    184e:	ff 4f       	sbci	r31, 0xFF	; 255
    1850:	60 81       	ld	r22, Z
    1852:	71 81       	ldd	r23, Z+1	; 0x01
    1854:	82 81       	ldd	r24, Z+2	; 0x02
    1856:	93 81       	ldd	r25, Z+3	; 0x03
    1858:	20 e0       	ldi	r18, 0x00	; 0
    185a:	30 e0       	ldi	r19, 0x00	; 0
    185c:	40 e8       	ldi	r20, 0x80	; 128
    185e:	5f e3       	ldi	r21, 0x3F	; 63
    1860:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1864:	88 23       	and	r24, r24
    1866:	44 f4       	brge	.+16     	; 0x1878 <main+0xb26>
		__ticks = 1;
    1868:	fe 01       	movw	r30, r28
    186a:	e7 5a       	subi	r30, 0xA7	; 167
    186c:	ff 4f       	sbci	r31, 0xFF	; 255
    186e:	81 e0       	ldi	r24, 0x01	; 1
    1870:	90 e0       	ldi	r25, 0x00	; 0
    1872:	91 83       	std	Z+1, r25	; 0x01
    1874:	80 83       	st	Z, r24
    1876:	64 c0       	rjmp	.+200    	; 0x1940 <main+0xbee>
	else if (__tmp > 65535)
    1878:	fe 01       	movw	r30, r28
    187a:	e5 5a       	subi	r30, 0xA5	; 165
    187c:	ff 4f       	sbci	r31, 0xFF	; 255
    187e:	60 81       	ld	r22, Z
    1880:	71 81       	ldd	r23, Z+1	; 0x01
    1882:	82 81       	ldd	r24, Z+2	; 0x02
    1884:	93 81       	ldd	r25, Z+3	; 0x03
    1886:	20 e0       	ldi	r18, 0x00	; 0
    1888:	3f ef       	ldi	r19, 0xFF	; 255
    188a:	4f e7       	ldi	r20, 0x7F	; 127
    188c:	57 e4       	ldi	r21, 0x47	; 71
    188e:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1892:	18 16       	cp	r1, r24
    1894:	0c f0       	brlt	.+2      	; 0x1898 <main+0xb46>
    1896:	43 c0       	rjmp	.+134    	; 0x191e <main+0xbcc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1898:	fe 01       	movw	r30, r28
    189a:	e1 5a       	subi	r30, 0xA1	; 161
    189c:	ff 4f       	sbci	r31, 0xFF	; 255
    189e:	60 81       	ld	r22, Z
    18a0:	71 81       	ldd	r23, Z+1	; 0x01
    18a2:	82 81       	ldd	r24, Z+2	; 0x02
    18a4:	93 81       	ldd	r25, Z+3	; 0x03
    18a6:	20 e0       	ldi	r18, 0x00	; 0
    18a8:	30 e0       	ldi	r19, 0x00	; 0
    18aa:	40 e2       	ldi	r20, 0x20	; 32
    18ac:	51 e4       	ldi	r21, 0x41	; 65
    18ae:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    18b2:	dc 01       	movw	r26, r24
    18b4:	cb 01       	movw	r24, r22
    18b6:	8e 01       	movw	r16, r28
    18b8:	07 5a       	subi	r16, 0xA7	; 167
    18ba:	1f 4f       	sbci	r17, 0xFF	; 255
    18bc:	bc 01       	movw	r22, r24
    18be:	cd 01       	movw	r24, r26
    18c0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    18c4:	dc 01       	movw	r26, r24
    18c6:	cb 01       	movw	r24, r22
    18c8:	f8 01       	movw	r30, r16
    18ca:	91 83       	std	Z+1, r25	; 0x01
    18cc:	80 83       	st	Z, r24
    18ce:	1f c0       	rjmp	.+62     	; 0x190e <main+0xbbc>
    18d0:	fe 01       	movw	r30, r28
    18d2:	e9 5a       	subi	r30, 0xA9	; 169
    18d4:	ff 4f       	sbci	r31, 0xFF	; 255
    18d6:	80 e9       	ldi	r24, 0x90	; 144
    18d8:	91 e0       	ldi	r25, 0x01	; 1
    18da:	91 83       	std	Z+1, r25	; 0x01
    18dc:	80 83       	st	Z, r24
    18de:	fe 01       	movw	r30, r28
    18e0:	e9 5a       	subi	r30, 0xA9	; 169
    18e2:	ff 4f       	sbci	r31, 0xFF	; 255
    18e4:	80 81       	ld	r24, Z
    18e6:	91 81       	ldd	r25, Z+1	; 0x01
    18e8:	01 97       	sbiw	r24, 0x01	; 1
    18ea:	f1 f7       	brne	.-4      	; 0x18e8 <main+0xb96>
    18ec:	fe 01       	movw	r30, r28
    18ee:	e9 5a       	subi	r30, 0xA9	; 169
    18f0:	ff 4f       	sbci	r31, 0xFF	; 255
    18f2:	91 83       	std	Z+1, r25	; 0x01
    18f4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    18f6:	de 01       	movw	r26, r28
    18f8:	a7 5a       	subi	r26, 0xA7	; 167
    18fa:	bf 4f       	sbci	r27, 0xFF	; 255
    18fc:	fe 01       	movw	r30, r28
    18fe:	e7 5a       	subi	r30, 0xA7	; 167
    1900:	ff 4f       	sbci	r31, 0xFF	; 255
    1902:	80 81       	ld	r24, Z
    1904:	91 81       	ldd	r25, Z+1	; 0x01
    1906:	01 97       	sbiw	r24, 0x01	; 1
    1908:	11 96       	adiw	r26, 0x01	; 1
    190a:	9c 93       	st	X, r25
    190c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    190e:	fe 01       	movw	r30, r28
    1910:	e7 5a       	subi	r30, 0xA7	; 167
    1912:	ff 4f       	sbci	r31, 0xFF	; 255
    1914:	80 81       	ld	r24, Z
    1916:	91 81       	ldd	r25, Z+1	; 0x01
    1918:	00 97       	sbiw	r24, 0x00	; 0
    191a:	d1 f6       	brne	.-76     	; 0x18d0 <main+0xb7e>
    191c:	28 c0       	rjmp	.+80     	; 0x196e <main+0xc1c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    191e:	8e 01       	movw	r16, r28
    1920:	07 5a       	subi	r16, 0xA7	; 167
    1922:	1f 4f       	sbci	r17, 0xFF	; 255
    1924:	fe 01       	movw	r30, r28
    1926:	e5 5a       	subi	r30, 0xA5	; 165
    1928:	ff 4f       	sbci	r31, 0xFF	; 255
    192a:	60 81       	ld	r22, Z
    192c:	71 81       	ldd	r23, Z+1	; 0x01
    192e:	82 81       	ldd	r24, Z+2	; 0x02
    1930:	93 81       	ldd	r25, Z+3	; 0x03
    1932:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1936:	dc 01       	movw	r26, r24
    1938:	cb 01       	movw	r24, r22
    193a:	f8 01       	movw	r30, r16
    193c:	91 83       	std	Z+1, r25	; 0x01
    193e:	80 83       	st	Z, r24
    1940:	de 01       	movw	r26, r28
    1942:	ab 5a       	subi	r26, 0xAB	; 171
    1944:	bf 4f       	sbci	r27, 0xFF	; 255
    1946:	fe 01       	movw	r30, r28
    1948:	e7 5a       	subi	r30, 0xA7	; 167
    194a:	ff 4f       	sbci	r31, 0xFF	; 255
    194c:	80 81       	ld	r24, Z
    194e:	91 81       	ldd	r25, Z+1	; 0x01
    1950:	11 96       	adiw	r26, 0x01	; 1
    1952:	9c 93       	st	X, r25
    1954:	8e 93       	st	-X, r24
    1956:	fe 01       	movw	r30, r28
    1958:	eb 5a       	subi	r30, 0xAB	; 171
    195a:	ff 4f       	sbci	r31, 0xFF	; 255
    195c:	80 81       	ld	r24, Z
    195e:	91 81       	ldd	r25, Z+1	; 0x01
    1960:	01 97       	sbiw	r24, 0x01	; 1
    1962:	f1 f7       	brne	.-4      	; 0x1960 <main+0xc0e>
    1964:	fe 01       	movw	r30, r28
    1966:	eb 5a       	subi	r30, 0xAB	; 171
    1968:	ff 4f       	sbci	r31, 0xFF	; 255
    196a:	91 83       	std	Z+1, r25	; 0x01
    196c:	80 83       	st	Z, r24
			_delay_ms(20);
			if(!(PINB & (1<<7))){
    196e:	e6 e3       	ldi	r30, 0x36	; 54
    1970:	f0 e0       	ldi	r31, 0x00	; 0
    1972:	80 81       	ld	r24, Z
    1974:	88 23       	and	r24, r24
    1976:	9c f0       	brlt	.+38     	; 0x199e <main+0xc4c>
				PORTD ^= (0x30);
    1978:	a2 e3       	ldi	r26, 0x32	; 50
    197a:	b0 e0       	ldi	r27, 0x00	; 0
    197c:	e2 e3       	ldi	r30, 0x32	; 50
    197e:	f0 e0       	ldi	r31, 0x00	; 0
    1980:	90 81       	ld	r25, Z
    1982:	80 e3       	ldi	r24, 0x30	; 48
    1984:	89 27       	eor	r24, r25
    1986:	8c 93       	st	X, r24
				mode ^=1;
    1988:	90 91 68 00 	lds	r25, 0x0068
    198c:	81 e0       	ldi	r24, 0x01	; 1
    198e:	89 27       	eor	r24, r25
    1990:	80 93 68 00 	sts	0x0068, r24
				MFlag = 1;
    1994:	fe 01       	movw	r30, r28
    1996:	e3 54       	subi	r30, 0x43	; 67
    1998:	ff 4f       	sbci	r31, 0xFF	; 255
    199a:	81 e0       	ldi	r24, 0x01	; 1
    199c:	80 83       	st	Z, r24
			}
		}

		//the flag is written like this to guarantee not interrupting the seven segment display
		if((PINB & (1<<7)))MFlag=0;
    199e:	e6 e3       	ldi	r30, 0x36	; 54
    19a0:	f0 e0       	ldi	r31, 0x00	; 0
    19a2:	80 81       	ld	r24, Z
    19a4:	88 23       	and	r24, r24
    19a6:	24 f4       	brge	.+8      	; 0x19b0 <main+0xc5e>
    19a8:	fe 01       	movw	r30, r28
    19aa:	e3 54       	subi	r30, 0x43	; 67
    19ac:	ff 4f       	sbci	r31, 0xFF	; 255
    19ae:	10 82       	st	Z, r1

		// Seconds increment PB
		if(!(PINB & (1<<6)) && state == COUNT_OFF && SIFlag == 0){
    19b0:	e6 e3       	ldi	r30, 0x36	; 54
    19b2:	f0 e0       	ldi	r31, 0x00	; 0
    19b4:	80 81       	ld	r24, Z
    19b6:	88 2f       	mov	r24, r24
    19b8:	90 e0       	ldi	r25, 0x00	; 0
    19ba:	80 74       	andi	r24, 0x40	; 64
    19bc:	90 70       	andi	r25, 0x00	; 0
    19be:	00 97       	sbiw	r24, 0x00	; 0
    19c0:	09 f0       	breq	.+2      	; 0x19c4 <main+0xc72>
    19c2:	ef c0       	rjmp	.+478    	; 0x1ba2 <main+0xe50>
    19c4:	80 91 69 00 	lds	r24, 0x0069
    19c8:	81 30       	cpi	r24, 0x01	; 1
    19ca:	09 f0       	breq	.+2      	; 0x19ce <main+0xc7c>
    19cc:	ea c0       	rjmp	.+468    	; 0x1ba2 <main+0xe50>
    19ce:	fe 01       	movw	r30, r28
    19d0:	e4 54       	subi	r30, 0x44	; 68
    19d2:	ff 4f       	sbci	r31, 0xFF	; 255
    19d4:	80 81       	ld	r24, Z
    19d6:	88 23       	and	r24, r24
    19d8:	09 f0       	breq	.+2      	; 0x19dc <main+0xc8a>
    19da:	e3 c0       	rjmp	.+454    	; 0x1ba2 <main+0xe50>
    19dc:	fe 01       	movw	r30, r28
    19de:	ef 5a       	subi	r30, 0xAF	; 175
    19e0:	ff 4f       	sbci	r31, 0xFF	; 255
    19e2:	80 e0       	ldi	r24, 0x00	; 0
    19e4:	90 e0       	ldi	r25, 0x00	; 0
    19e6:	a0 ea       	ldi	r26, 0xA0	; 160
    19e8:	b1 e4       	ldi	r27, 0x41	; 65
    19ea:	80 83       	st	Z, r24
    19ec:	91 83       	std	Z+1, r25	; 0x01
    19ee:	a2 83       	std	Z+2, r26	; 0x02
    19f0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    19f2:	8e 01       	movw	r16, r28
    19f4:	03 5b       	subi	r16, 0xB3	; 179
    19f6:	1f 4f       	sbci	r17, 0xFF	; 255
    19f8:	fe 01       	movw	r30, r28
    19fa:	ef 5a       	subi	r30, 0xAF	; 175
    19fc:	ff 4f       	sbci	r31, 0xFF	; 255
    19fe:	60 81       	ld	r22, Z
    1a00:	71 81       	ldd	r23, Z+1	; 0x01
    1a02:	82 81       	ldd	r24, Z+2	; 0x02
    1a04:	93 81       	ldd	r25, Z+3	; 0x03
    1a06:	20 e0       	ldi	r18, 0x00	; 0
    1a08:	30 e0       	ldi	r19, 0x00	; 0
    1a0a:	4a e7       	ldi	r20, 0x7A	; 122
    1a0c:	55 e4       	ldi	r21, 0x45	; 69
    1a0e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1a12:	dc 01       	movw	r26, r24
    1a14:	cb 01       	movw	r24, r22
    1a16:	f8 01       	movw	r30, r16
    1a18:	80 83       	st	Z, r24
    1a1a:	91 83       	std	Z+1, r25	; 0x01
    1a1c:	a2 83       	std	Z+2, r26	; 0x02
    1a1e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1a20:	fe 01       	movw	r30, r28
    1a22:	e3 5b       	subi	r30, 0xB3	; 179
    1a24:	ff 4f       	sbci	r31, 0xFF	; 255
    1a26:	60 81       	ld	r22, Z
    1a28:	71 81       	ldd	r23, Z+1	; 0x01
    1a2a:	82 81       	ldd	r24, Z+2	; 0x02
    1a2c:	93 81       	ldd	r25, Z+3	; 0x03
    1a2e:	20 e0       	ldi	r18, 0x00	; 0
    1a30:	30 e0       	ldi	r19, 0x00	; 0
    1a32:	40 e8       	ldi	r20, 0x80	; 128
    1a34:	5f e3       	ldi	r21, 0x3F	; 63
    1a36:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1a3a:	88 23       	and	r24, r24
    1a3c:	44 f4       	brge	.+16     	; 0x1a4e <main+0xcfc>
		__ticks = 1;
    1a3e:	fe 01       	movw	r30, r28
    1a40:	e5 5b       	subi	r30, 0xB5	; 181
    1a42:	ff 4f       	sbci	r31, 0xFF	; 255
    1a44:	81 e0       	ldi	r24, 0x01	; 1
    1a46:	90 e0       	ldi	r25, 0x00	; 0
    1a48:	91 83       	std	Z+1, r25	; 0x01
    1a4a:	80 83       	st	Z, r24
    1a4c:	64 c0       	rjmp	.+200    	; 0x1b16 <main+0xdc4>
	else if (__tmp > 65535)
    1a4e:	fe 01       	movw	r30, r28
    1a50:	e3 5b       	subi	r30, 0xB3	; 179
    1a52:	ff 4f       	sbci	r31, 0xFF	; 255
    1a54:	60 81       	ld	r22, Z
    1a56:	71 81       	ldd	r23, Z+1	; 0x01
    1a58:	82 81       	ldd	r24, Z+2	; 0x02
    1a5a:	93 81       	ldd	r25, Z+3	; 0x03
    1a5c:	20 e0       	ldi	r18, 0x00	; 0
    1a5e:	3f ef       	ldi	r19, 0xFF	; 255
    1a60:	4f e7       	ldi	r20, 0x7F	; 127
    1a62:	57 e4       	ldi	r21, 0x47	; 71
    1a64:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1a68:	18 16       	cp	r1, r24
    1a6a:	0c f0       	brlt	.+2      	; 0x1a6e <main+0xd1c>
    1a6c:	43 c0       	rjmp	.+134    	; 0x1af4 <main+0xda2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1a6e:	fe 01       	movw	r30, r28
    1a70:	ef 5a       	subi	r30, 0xAF	; 175
    1a72:	ff 4f       	sbci	r31, 0xFF	; 255
    1a74:	60 81       	ld	r22, Z
    1a76:	71 81       	ldd	r23, Z+1	; 0x01
    1a78:	82 81       	ldd	r24, Z+2	; 0x02
    1a7a:	93 81       	ldd	r25, Z+3	; 0x03
    1a7c:	20 e0       	ldi	r18, 0x00	; 0
    1a7e:	30 e0       	ldi	r19, 0x00	; 0
    1a80:	40 e2       	ldi	r20, 0x20	; 32
    1a82:	51 e4       	ldi	r21, 0x41	; 65
    1a84:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1a88:	dc 01       	movw	r26, r24
    1a8a:	cb 01       	movw	r24, r22
    1a8c:	8e 01       	movw	r16, r28
    1a8e:	05 5b       	subi	r16, 0xB5	; 181
    1a90:	1f 4f       	sbci	r17, 0xFF	; 255
    1a92:	bc 01       	movw	r22, r24
    1a94:	cd 01       	movw	r24, r26
    1a96:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1a9a:	dc 01       	movw	r26, r24
    1a9c:	cb 01       	movw	r24, r22
    1a9e:	f8 01       	movw	r30, r16
    1aa0:	91 83       	std	Z+1, r25	; 0x01
    1aa2:	80 83       	st	Z, r24
    1aa4:	1f c0       	rjmp	.+62     	; 0x1ae4 <main+0xd92>
    1aa6:	fe 01       	movw	r30, r28
    1aa8:	e7 5b       	subi	r30, 0xB7	; 183
    1aaa:	ff 4f       	sbci	r31, 0xFF	; 255
    1aac:	80 e9       	ldi	r24, 0x90	; 144
    1aae:	91 e0       	ldi	r25, 0x01	; 1
    1ab0:	91 83       	std	Z+1, r25	; 0x01
    1ab2:	80 83       	st	Z, r24
    1ab4:	fe 01       	movw	r30, r28
    1ab6:	e7 5b       	subi	r30, 0xB7	; 183
    1ab8:	ff 4f       	sbci	r31, 0xFF	; 255
    1aba:	80 81       	ld	r24, Z
    1abc:	91 81       	ldd	r25, Z+1	; 0x01
    1abe:	01 97       	sbiw	r24, 0x01	; 1
    1ac0:	f1 f7       	brne	.-4      	; 0x1abe <main+0xd6c>
    1ac2:	fe 01       	movw	r30, r28
    1ac4:	e7 5b       	subi	r30, 0xB7	; 183
    1ac6:	ff 4f       	sbci	r31, 0xFF	; 255
    1ac8:	91 83       	std	Z+1, r25	; 0x01
    1aca:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1acc:	de 01       	movw	r26, r28
    1ace:	a5 5b       	subi	r26, 0xB5	; 181
    1ad0:	bf 4f       	sbci	r27, 0xFF	; 255
    1ad2:	fe 01       	movw	r30, r28
    1ad4:	e5 5b       	subi	r30, 0xB5	; 181
    1ad6:	ff 4f       	sbci	r31, 0xFF	; 255
    1ad8:	80 81       	ld	r24, Z
    1ada:	91 81       	ldd	r25, Z+1	; 0x01
    1adc:	01 97       	sbiw	r24, 0x01	; 1
    1ade:	11 96       	adiw	r26, 0x01	; 1
    1ae0:	9c 93       	st	X, r25
    1ae2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1ae4:	fe 01       	movw	r30, r28
    1ae6:	e5 5b       	subi	r30, 0xB5	; 181
    1ae8:	ff 4f       	sbci	r31, 0xFF	; 255
    1aea:	80 81       	ld	r24, Z
    1aec:	91 81       	ldd	r25, Z+1	; 0x01
    1aee:	00 97       	sbiw	r24, 0x00	; 0
    1af0:	d1 f6       	brne	.-76     	; 0x1aa6 <main+0xd54>
    1af2:	28 c0       	rjmp	.+80     	; 0x1b44 <main+0xdf2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1af4:	8e 01       	movw	r16, r28
    1af6:	05 5b       	subi	r16, 0xB5	; 181
    1af8:	1f 4f       	sbci	r17, 0xFF	; 255
    1afa:	fe 01       	movw	r30, r28
    1afc:	e3 5b       	subi	r30, 0xB3	; 179
    1afe:	ff 4f       	sbci	r31, 0xFF	; 255
    1b00:	60 81       	ld	r22, Z
    1b02:	71 81       	ldd	r23, Z+1	; 0x01
    1b04:	82 81       	ldd	r24, Z+2	; 0x02
    1b06:	93 81       	ldd	r25, Z+3	; 0x03
    1b08:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1b0c:	dc 01       	movw	r26, r24
    1b0e:	cb 01       	movw	r24, r22
    1b10:	f8 01       	movw	r30, r16
    1b12:	91 83       	std	Z+1, r25	; 0x01
    1b14:	80 83       	st	Z, r24
    1b16:	de 01       	movw	r26, r28
    1b18:	a9 5b       	subi	r26, 0xB9	; 185
    1b1a:	bf 4f       	sbci	r27, 0xFF	; 255
    1b1c:	fe 01       	movw	r30, r28
    1b1e:	e5 5b       	subi	r30, 0xB5	; 181
    1b20:	ff 4f       	sbci	r31, 0xFF	; 255
    1b22:	80 81       	ld	r24, Z
    1b24:	91 81       	ldd	r25, Z+1	; 0x01
    1b26:	11 96       	adiw	r26, 0x01	; 1
    1b28:	9c 93       	st	X, r25
    1b2a:	8e 93       	st	-X, r24
    1b2c:	fe 01       	movw	r30, r28
    1b2e:	e9 5b       	subi	r30, 0xB9	; 185
    1b30:	ff 4f       	sbci	r31, 0xFF	; 255
    1b32:	80 81       	ld	r24, Z
    1b34:	91 81       	ldd	r25, Z+1	; 0x01
    1b36:	01 97       	sbiw	r24, 0x01	; 1
    1b38:	f1 f7       	brne	.-4      	; 0x1b36 <main+0xde4>
    1b3a:	fe 01       	movw	r30, r28
    1b3c:	e9 5b       	subi	r30, 0xB9	; 185
    1b3e:	ff 4f       	sbci	r31, 0xFF	; 255
    1b40:	91 83       	std	Z+1, r25	; 0x01
    1b42:	80 83       	st	Z, r24
			_delay_ms(20);
			if(!(PINB & (1<<6))){
    1b44:	e6 e3       	ldi	r30, 0x36	; 54
    1b46:	f0 e0       	ldi	r31, 0x00	; 0
    1b48:	80 81       	ld	r24, Z
    1b4a:	88 2f       	mov	r24, r24
    1b4c:	90 e0       	ldi	r25, 0x00	; 0
    1b4e:	80 74       	andi	r24, 0x40	; 64
    1b50:	90 70       	andi	r25, 0x00	; 0
    1b52:	00 97       	sbiw	r24, 0x00	; 0
    1b54:	31 f5       	brne	.+76     	; 0x1ba2 <main+0xe50>
				seconds++;
    1b56:	80 91 6a 00 	lds	r24, 0x006A
    1b5a:	8f 5f       	subi	r24, 0xFF	; 255
    1b5c:	80 93 6a 00 	sts	0x006A, r24
				if(seconds>=60){minutes++;seconds=0;}
    1b60:	80 91 6a 00 	lds	r24, 0x006A
    1b64:	8c 33       	cpi	r24, 0x3C	; 60
    1b66:	3c f0       	brlt	.+14     	; 0x1b76 <main+0xe24>
    1b68:	80 91 6b 00 	lds	r24, 0x006B
    1b6c:	8f 5f       	subi	r24, 0xFF	; 255
    1b6e:	80 93 6b 00 	sts	0x006B, r24
    1b72:	10 92 6a 00 	sts	0x006A, r1
				if(minutes>=60){hours++;minutes=0;}
    1b76:	80 91 6b 00 	lds	r24, 0x006B
    1b7a:	8c 33       	cpi	r24, 0x3C	; 60
    1b7c:	3c f0       	brlt	.+14     	; 0x1b8c <main+0xe3a>
    1b7e:	80 91 6c 00 	lds	r24, 0x006C
    1b82:	8f 5f       	subi	r24, 0xFF	; 255
    1b84:	80 93 6c 00 	sts	0x006C, r24
    1b88:	10 92 6b 00 	sts	0x006B, r1
				if(hours>=24)hours=0;
    1b8c:	80 91 6c 00 	lds	r24, 0x006C
    1b90:	88 31       	cpi	r24, 0x18	; 24
    1b92:	14 f0       	brlt	.+4      	; 0x1b98 <main+0xe46>
    1b94:	10 92 6c 00 	sts	0x006C, r1
				SIFlag=1;
    1b98:	fe 01       	movw	r30, r28
    1b9a:	e4 54       	subi	r30, 0x44	; 68
    1b9c:	ff 4f       	sbci	r31, 0xFF	; 255
    1b9e:	81 e0       	ldi	r24, 0x01	; 1
    1ba0:	80 83       	st	Z, r24
			}
		}
		if((PINB & (1<<6))) SIFlag=0;
    1ba2:	e6 e3       	ldi	r30, 0x36	; 54
    1ba4:	f0 e0       	ldi	r31, 0x00	; 0
    1ba6:	80 81       	ld	r24, Z
    1ba8:	88 2f       	mov	r24, r24
    1baa:	90 e0       	ldi	r25, 0x00	; 0
    1bac:	80 74       	andi	r24, 0x40	; 64
    1bae:	90 70       	andi	r25, 0x00	; 0
    1bb0:	00 97       	sbiw	r24, 0x00	; 0
    1bb2:	21 f0       	breq	.+8      	; 0x1bbc <main+0xe6a>
    1bb4:	fe 01       	movw	r30, r28
    1bb6:	e4 54       	subi	r30, 0x44	; 68
    1bb8:	ff 4f       	sbci	r31, 0xFF	; 255
    1bba:	10 82       	st	Z, r1

		// Seconds decrement PB
		if(!(PINB & (1<<5)) && state == COUNT_OFF && SDFlag == 0){
    1bbc:	e6 e3       	ldi	r30, 0x36	; 54
    1bbe:	f0 e0       	ldi	r31, 0x00	; 0
    1bc0:	80 81       	ld	r24, Z
    1bc2:	88 2f       	mov	r24, r24
    1bc4:	90 e0       	ldi	r25, 0x00	; 0
    1bc6:	80 72       	andi	r24, 0x20	; 32
    1bc8:	90 70       	andi	r25, 0x00	; 0
    1bca:	00 97       	sbiw	r24, 0x00	; 0
    1bcc:	09 f0       	breq	.+2      	; 0x1bd0 <main+0xe7e>
    1bce:	c3 c0       	rjmp	.+390    	; 0x1d56 <main+0x1004>
    1bd0:	80 91 69 00 	lds	r24, 0x0069
    1bd4:	81 30       	cpi	r24, 0x01	; 1
    1bd6:	09 f0       	breq	.+2      	; 0x1bda <main+0xe88>
    1bd8:	be c0       	rjmp	.+380    	; 0x1d56 <main+0x1004>
    1bda:	fe 01       	movw	r30, r28
    1bdc:	e5 54       	subi	r30, 0x45	; 69
    1bde:	ff 4f       	sbci	r31, 0xFF	; 255
    1be0:	80 81       	ld	r24, Z
    1be2:	88 23       	and	r24, r24
    1be4:	09 f0       	breq	.+2      	; 0x1be8 <main+0xe96>
    1be6:	b7 c0       	rjmp	.+366    	; 0x1d56 <main+0x1004>
    1be8:	fe 01       	movw	r30, r28
    1bea:	ed 5b       	subi	r30, 0xBD	; 189
    1bec:	ff 4f       	sbci	r31, 0xFF	; 255
    1bee:	80 e0       	ldi	r24, 0x00	; 0
    1bf0:	90 e0       	ldi	r25, 0x00	; 0
    1bf2:	a0 ea       	ldi	r26, 0xA0	; 160
    1bf4:	b1 e4       	ldi	r27, 0x41	; 65
    1bf6:	80 83       	st	Z, r24
    1bf8:	91 83       	std	Z+1, r25	; 0x01
    1bfa:	a2 83       	std	Z+2, r26	; 0x02
    1bfc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1bfe:	8e 01       	movw	r16, r28
    1c00:	01 5c       	subi	r16, 0xC1	; 193
    1c02:	1f 4f       	sbci	r17, 0xFF	; 255
    1c04:	fe 01       	movw	r30, r28
    1c06:	ed 5b       	subi	r30, 0xBD	; 189
    1c08:	ff 4f       	sbci	r31, 0xFF	; 255
    1c0a:	60 81       	ld	r22, Z
    1c0c:	71 81       	ldd	r23, Z+1	; 0x01
    1c0e:	82 81       	ldd	r24, Z+2	; 0x02
    1c10:	93 81       	ldd	r25, Z+3	; 0x03
    1c12:	20 e0       	ldi	r18, 0x00	; 0
    1c14:	30 e0       	ldi	r19, 0x00	; 0
    1c16:	4a e7       	ldi	r20, 0x7A	; 122
    1c18:	55 e4       	ldi	r21, 0x45	; 69
    1c1a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1c1e:	dc 01       	movw	r26, r24
    1c20:	cb 01       	movw	r24, r22
    1c22:	f8 01       	movw	r30, r16
    1c24:	80 83       	st	Z, r24
    1c26:	91 83       	std	Z+1, r25	; 0x01
    1c28:	a2 83       	std	Z+2, r26	; 0x02
    1c2a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1c2c:	fe 01       	movw	r30, r28
    1c2e:	ff 96       	adiw	r30, 0x3f	; 63
    1c30:	60 81       	ld	r22, Z
    1c32:	71 81       	ldd	r23, Z+1	; 0x01
    1c34:	82 81       	ldd	r24, Z+2	; 0x02
    1c36:	93 81       	ldd	r25, Z+3	; 0x03
    1c38:	20 e0       	ldi	r18, 0x00	; 0
    1c3a:	30 e0       	ldi	r19, 0x00	; 0
    1c3c:	40 e8       	ldi	r20, 0x80	; 128
    1c3e:	5f e3       	ldi	r21, 0x3F	; 63
    1c40:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1c44:	88 23       	and	r24, r24
    1c46:	2c f4       	brge	.+10     	; 0x1c52 <main+0xf00>
		__ticks = 1;
    1c48:	81 e0       	ldi	r24, 0x01	; 1
    1c4a:	90 e0       	ldi	r25, 0x00	; 0
    1c4c:	9e af       	std	Y+62, r25	; 0x3e
    1c4e:	8d af       	std	Y+61, r24	; 0x3d
    1c50:	46 c0       	rjmp	.+140    	; 0x1cde <main+0xf8c>
	else if (__tmp > 65535)
    1c52:	fe 01       	movw	r30, r28
    1c54:	ff 96       	adiw	r30, 0x3f	; 63
    1c56:	60 81       	ld	r22, Z
    1c58:	71 81       	ldd	r23, Z+1	; 0x01
    1c5a:	82 81       	ldd	r24, Z+2	; 0x02
    1c5c:	93 81       	ldd	r25, Z+3	; 0x03
    1c5e:	20 e0       	ldi	r18, 0x00	; 0
    1c60:	3f ef       	ldi	r19, 0xFF	; 255
    1c62:	4f e7       	ldi	r20, 0x7F	; 127
    1c64:	57 e4       	ldi	r21, 0x47	; 71
    1c66:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1c6a:	18 16       	cp	r1, r24
    1c6c:	64 f5       	brge	.+88     	; 0x1cc6 <main+0xf74>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1c6e:	fe 01       	movw	r30, r28
    1c70:	ed 5b       	subi	r30, 0xBD	; 189
    1c72:	ff 4f       	sbci	r31, 0xFF	; 255
    1c74:	60 81       	ld	r22, Z
    1c76:	71 81       	ldd	r23, Z+1	; 0x01
    1c78:	82 81       	ldd	r24, Z+2	; 0x02
    1c7a:	93 81       	ldd	r25, Z+3	; 0x03
    1c7c:	20 e0       	ldi	r18, 0x00	; 0
    1c7e:	30 e0       	ldi	r19, 0x00	; 0
    1c80:	40 e2       	ldi	r20, 0x20	; 32
    1c82:	51 e4       	ldi	r21, 0x41	; 65
    1c84:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1c88:	dc 01       	movw	r26, r24
    1c8a:	cb 01       	movw	r24, r22
    1c8c:	bc 01       	movw	r22, r24
    1c8e:	cd 01       	movw	r24, r26
    1c90:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1c94:	dc 01       	movw	r26, r24
    1c96:	cb 01       	movw	r24, r22
    1c98:	9e af       	std	Y+62, r25	; 0x3e
    1c9a:	8d af       	std	Y+61, r24	; 0x3d
    1c9c:	0f c0       	rjmp	.+30     	; 0x1cbc <main+0xf6a>
    1c9e:	80 e9       	ldi	r24, 0x90	; 144
    1ca0:	91 e0       	ldi	r25, 0x01	; 1
    1ca2:	9c af       	std	Y+60, r25	; 0x3c
    1ca4:	8b af       	std	Y+59, r24	; 0x3b
    1ca6:	8b ad       	ldd	r24, Y+59	; 0x3b
    1ca8:	9c ad       	ldd	r25, Y+60	; 0x3c
    1caa:	01 97       	sbiw	r24, 0x01	; 1
    1cac:	f1 f7       	brne	.-4      	; 0x1caa <main+0xf58>
    1cae:	9c af       	std	Y+60, r25	; 0x3c
    1cb0:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1cb2:	8d ad       	ldd	r24, Y+61	; 0x3d
    1cb4:	9e ad       	ldd	r25, Y+62	; 0x3e
    1cb6:	01 97       	sbiw	r24, 0x01	; 1
    1cb8:	9e af       	std	Y+62, r25	; 0x3e
    1cba:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1cbc:	8d ad       	ldd	r24, Y+61	; 0x3d
    1cbe:	9e ad       	ldd	r25, Y+62	; 0x3e
    1cc0:	00 97       	sbiw	r24, 0x00	; 0
    1cc2:	69 f7       	brne	.-38     	; 0x1c9e <main+0xf4c>
    1cc4:	16 c0       	rjmp	.+44     	; 0x1cf2 <main+0xfa0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1cc6:	fe 01       	movw	r30, r28
    1cc8:	ff 96       	adiw	r30, 0x3f	; 63
    1cca:	60 81       	ld	r22, Z
    1ccc:	71 81       	ldd	r23, Z+1	; 0x01
    1cce:	82 81       	ldd	r24, Z+2	; 0x02
    1cd0:	93 81       	ldd	r25, Z+3	; 0x03
    1cd2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1cd6:	dc 01       	movw	r26, r24
    1cd8:	cb 01       	movw	r24, r22
    1cda:	9e af       	std	Y+62, r25	; 0x3e
    1cdc:	8d af       	std	Y+61, r24	; 0x3d
    1cde:	8d ad       	ldd	r24, Y+61	; 0x3d
    1ce0:	9e ad       	ldd	r25, Y+62	; 0x3e
    1ce2:	9a af       	std	Y+58, r25	; 0x3a
    1ce4:	89 af       	std	Y+57, r24	; 0x39
    1ce6:	89 ad       	ldd	r24, Y+57	; 0x39
    1ce8:	9a ad       	ldd	r25, Y+58	; 0x3a
    1cea:	01 97       	sbiw	r24, 0x01	; 1
    1cec:	f1 f7       	brne	.-4      	; 0x1cea <main+0xf98>
    1cee:	9a af       	std	Y+58, r25	; 0x3a
    1cf0:	89 af       	std	Y+57, r24	; 0x39
			_delay_ms(20);
			if(!(PINB & (1<<5))){
    1cf2:	e6 e3       	ldi	r30, 0x36	; 54
    1cf4:	f0 e0       	ldi	r31, 0x00	; 0
    1cf6:	80 81       	ld	r24, Z
    1cf8:	88 2f       	mov	r24, r24
    1cfa:	90 e0       	ldi	r25, 0x00	; 0
    1cfc:	80 72       	andi	r24, 0x20	; 32
    1cfe:	90 70       	andi	r25, 0x00	; 0
    1d00:	00 97       	sbiw	r24, 0x00	; 0
    1d02:	49 f5       	brne	.+82     	; 0x1d56 <main+0x1004>
				seconds--;
    1d04:	80 91 6a 00 	lds	r24, 0x006A
    1d08:	81 50       	subi	r24, 0x01	; 1
    1d0a:	80 93 6a 00 	sts	0x006A, r24
				if(seconds<0){minutes--;seconds=59;}
    1d0e:	80 91 6a 00 	lds	r24, 0x006A
    1d12:	88 23       	and	r24, r24
    1d14:	44 f4       	brge	.+16     	; 0x1d26 <main+0xfd4>
    1d16:	80 91 6b 00 	lds	r24, 0x006B
    1d1a:	81 50       	subi	r24, 0x01	; 1
    1d1c:	80 93 6b 00 	sts	0x006B, r24
    1d20:	8b e3       	ldi	r24, 0x3B	; 59
    1d22:	80 93 6a 00 	sts	0x006A, r24
				if(minutes<0){hours--;minutes=59;}
    1d26:	80 91 6b 00 	lds	r24, 0x006B
    1d2a:	88 23       	and	r24, r24
    1d2c:	44 f4       	brge	.+16     	; 0x1d3e <main+0xfec>
    1d2e:	80 91 6c 00 	lds	r24, 0x006C
    1d32:	81 50       	subi	r24, 0x01	; 1
    1d34:	80 93 6c 00 	sts	0x006C, r24
    1d38:	8b e3       	ldi	r24, 0x3B	; 59
    1d3a:	80 93 6b 00 	sts	0x006B, r24
				if(hours<0)hours=23;
    1d3e:	80 91 6c 00 	lds	r24, 0x006C
    1d42:	88 23       	and	r24, r24
    1d44:	1c f4       	brge	.+6      	; 0x1d4c <main+0xffa>
    1d46:	87 e1       	ldi	r24, 0x17	; 23
    1d48:	80 93 6c 00 	sts	0x006C, r24
				SDFlag=1;
    1d4c:	fe 01       	movw	r30, r28
    1d4e:	e5 54       	subi	r30, 0x45	; 69
    1d50:	ff 4f       	sbci	r31, 0xFF	; 255
    1d52:	81 e0       	ldi	r24, 0x01	; 1
    1d54:	80 83       	st	Z, r24
			}
		}
		if((PINB & (1<<5))) SDFlag=0;
    1d56:	e6 e3       	ldi	r30, 0x36	; 54
    1d58:	f0 e0       	ldi	r31, 0x00	; 0
    1d5a:	80 81       	ld	r24, Z
    1d5c:	88 2f       	mov	r24, r24
    1d5e:	90 e0       	ldi	r25, 0x00	; 0
    1d60:	80 72       	andi	r24, 0x20	; 32
    1d62:	90 70       	andi	r25, 0x00	; 0
    1d64:	00 97       	sbiw	r24, 0x00	; 0
    1d66:	21 f0       	breq	.+8      	; 0x1d70 <main+0x101e>
    1d68:	fe 01       	movw	r30, r28
    1d6a:	e5 54       	subi	r30, 0x45	; 69
    1d6c:	ff 4f       	sbci	r31, 0xFF	; 255
    1d6e:	10 82       	st	Z, r1

		// Minutes increment PB
		if(!(PINB & (1<<4)) && state == COUNT_OFF && MIFlag == 0){
    1d70:	e6 e3       	ldi	r30, 0x36	; 54
    1d72:	f0 e0       	ldi	r31, 0x00	; 0
    1d74:	80 81       	ld	r24, Z
    1d76:	88 2f       	mov	r24, r24
    1d78:	90 e0       	ldi	r25, 0x00	; 0
    1d7a:	80 71       	andi	r24, 0x10	; 16
    1d7c:	90 70       	andi	r25, 0x00	; 0
    1d7e:	00 97       	sbiw	r24, 0x00	; 0
    1d80:	09 f0       	breq	.+2      	; 0x1d84 <main+0x1032>
    1d82:	a2 c0       	rjmp	.+324    	; 0x1ec8 <main+0x1176>
    1d84:	80 91 69 00 	lds	r24, 0x0069
    1d88:	81 30       	cpi	r24, 0x01	; 1
    1d8a:	09 f0       	breq	.+2      	; 0x1d8e <main+0x103c>
    1d8c:	9d c0       	rjmp	.+314    	; 0x1ec8 <main+0x1176>
    1d8e:	fe 01       	movw	r30, r28
    1d90:	e6 54       	subi	r30, 0x46	; 70
    1d92:	ff 4f       	sbci	r31, 0xFF	; 255
    1d94:	80 81       	ld	r24, Z
    1d96:	88 23       	and	r24, r24
    1d98:	09 f0       	breq	.+2      	; 0x1d9c <main+0x104a>
    1d9a:	96 c0       	rjmp	.+300    	; 0x1ec8 <main+0x1176>
    1d9c:	80 e0       	ldi	r24, 0x00	; 0
    1d9e:	90 e0       	ldi	r25, 0x00	; 0
    1da0:	a0 ea       	ldi	r26, 0xA0	; 160
    1da2:	b1 e4       	ldi	r27, 0x41	; 65
    1da4:	8d ab       	std	Y+53, r24	; 0x35
    1da6:	9e ab       	std	Y+54, r25	; 0x36
    1da8:	af ab       	std	Y+55, r26	; 0x37
    1daa:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1dac:	6d a9       	ldd	r22, Y+53	; 0x35
    1dae:	7e a9       	ldd	r23, Y+54	; 0x36
    1db0:	8f a9       	ldd	r24, Y+55	; 0x37
    1db2:	98 ad       	ldd	r25, Y+56	; 0x38
    1db4:	20 e0       	ldi	r18, 0x00	; 0
    1db6:	30 e0       	ldi	r19, 0x00	; 0
    1db8:	4a e7       	ldi	r20, 0x7A	; 122
    1dba:	55 e4       	ldi	r21, 0x45	; 69
    1dbc:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1dc0:	dc 01       	movw	r26, r24
    1dc2:	cb 01       	movw	r24, r22
    1dc4:	89 ab       	std	Y+49, r24	; 0x31
    1dc6:	9a ab       	std	Y+50, r25	; 0x32
    1dc8:	ab ab       	std	Y+51, r26	; 0x33
    1dca:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    1dcc:	69 a9       	ldd	r22, Y+49	; 0x31
    1dce:	7a a9       	ldd	r23, Y+50	; 0x32
    1dd0:	8b a9       	ldd	r24, Y+51	; 0x33
    1dd2:	9c a9       	ldd	r25, Y+52	; 0x34
    1dd4:	20 e0       	ldi	r18, 0x00	; 0
    1dd6:	30 e0       	ldi	r19, 0x00	; 0
    1dd8:	40 e8       	ldi	r20, 0x80	; 128
    1dda:	5f e3       	ldi	r21, 0x3F	; 63
    1ddc:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1de0:	88 23       	and	r24, r24
    1de2:	2c f4       	brge	.+10     	; 0x1dee <main+0x109c>
		__ticks = 1;
    1de4:	81 e0       	ldi	r24, 0x01	; 1
    1de6:	90 e0       	ldi	r25, 0x00	; 0
    1de8:	98 ab       	std	Y+48, r25	; 0x30
    1dea:	8f a7       	std	Y+47, r24	; 0x2f
    1dec:	3f c0       	rjmp	.+126    	; 0x1e6c <main+0x111a>
	else if (__tmp > 65535)
    1dee:	69 a9       	ldd	r22, Y+49	; 0x31
    1df0:	7a a9       	ldd	r23, Y+50	; 0x32
    1df2:	8b a9       	ldd	r24, Y+51	; 0x33
    1df4:	9c a9       	ldd	r25, Y+52	; 0x34
    1df6:	20 e0       	ldi	r18, 0x00	; 0
    1df8:	3f ef       	ldi	r19, 0xFF	; 255
    1dfa:	4f e7       	ldi	r20, 0x7F	; 127
    1dfc:	57 e4       	ldi	r21, 0x47	; 71
    1dfe:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1e02:	18 16       	cp	r1, r24
    1e04:	4c f5       	brge	.+82     	; 0x1e58 <main+0x1106>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1e06:	6d a9       	ldd	r22, Y+53	; 0x35
    1e08:	7e a9       	ldd	r23, Y+54	; 0x36
    1e0a:	8f a9       	ldd	r24, Y+55	; 0x37
    1e0c:	98 ad       	ldd	r25, Y+56	; 0x38
    1e0e:	20 e0       	ldi	r18, 0x00	; 0
    1e10:	30 e0       	ldi	r19, 0x00	; 0
    1e12:	40 e2       	ldi	r20, 0x20	; 32
    1e14:	51 e4       	ldi	r21, 0x41	; 65
    1e16:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1e1a:	dc 01       	movw	r26, r24
    1e1c:	cb 01       	movw	r24, r22
    1e1e:	bc 01       	movw	r22, r24
    1e20:	cd 01       	movw	r24, r26
    1e22:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1e26:	dc 01       	movw	r26, r24
    1e28:	cb 01       	movw	r24, r22
    1e2a:	98 ab       	std	Y+48, r25	; 0x30
    1e2c:	8f a7       	std	Y+47, r24	; 0x2f
    1e2e:	0f c0       	rjmp	.+30     	; 0x1e4e <main+0x10fc>
    1e30:	80 e9       	ldi	r24, 0x90	; 144
    1e32:	91 e0       	ldi	r25, 0x01	; 1
    1e34:	9e a7       	std	Y+46, r25	; 0x2e
    1e36:	8d a7       	std	Y+45, r24	; 0x2d
    1e38:	8d a5       	ldd	r24, Y+45	; 0x2d
    1e3a:	9e a5       	ldd	r25, Y+46	; 0x2e
    1e3c:	01 97       	sbiw	r24, 0x01	; 1
    1e3e:	f1 f7       	brne	.-4      	; 0x1e3c <main+0x10ea>
    1e40:	9e a7       	std	Y+46, r25	; 0x2e
    1e42:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1e44:	8f a5       	ldd	r24, Y+47	; 0x2f
    1e46:	98 a9       	ldd	r25, Y+48	; 0x30
    1e48:	01 97       	sbiw	r24, 0x01	; 1
    1e4a:	98 ab       	std	Y+48, r25	; 0x30
    1e4c:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1e4e:	8f a5       	ldd	r24, Y+47	; 0x2f
    1e50:	98 a9       	ldd	r25, Y+48	; 0x30
    1e52:	00 97       	sbiw	r24, 0x00	; 0
    1e54:	69 f7       	brne	.-38     	; 0x1e30 <main+0x10de>
    1e56:	14 c0       	rjmp	.+40     	; 0x1e80 <main+0x112e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1e58:	69 a9       	ldd	r22, Y+49	; 0x31
    1e5a:	7a a9       	ldd	r23, Y+50	; 0x32
    1e5c:	8b a9       	ldd	r24, Y+51	; 0x33
    1e5e:	9c a9       	ldd	r25, Y+52	; 0x34
    1e60:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1e64:	dc 01       	movw	r26, r24
    1e66:	cb 01       	movw	r24, r22
    1e68:	98 ab       	std	Y+48, r25	; 0x30
    1e6a:	8f a7       	std	Y+47, r24	; 0x2f
    1e6c:	8f a5       	ldd	r24, Y+47	; 0x2f
    1e6e:	98 a9       	ldd	r25, Y+48	; 0x30
    1e70:	9c a7       	std	Y+44, r25	; 0x2c
    1e72:	8b a7       	std	Y+43, r24	; 0x2b
    1e74:	8b a5       	ldd	r24, Y+43	; 0x2b
    1e76:	9c a5       	ldd	r25, Y+44	; 0x2c
    1e78:	01 97       	sbiw	r24, 0x01	; 1
    1e7a:	f1 f7       	brne	.-4      	; 0x1e78 <main+0x1126>
    1e7c:	9c a7       	std	Y+44, r25	; 0x2c
    1e7e:	8b a7       	std	Y+43, r24	; 0x2b
			_delay_ms(20);
			if(!(PINB & (1<<4))){
    1e80:	e6 e3       	ldi	r30, 0x36	; 54
    1e82:	f0 e0       	ldi	r31, 0x00	; 0
    1e84:	80 81       	ld	r24, Z
    1e86:	88 2f       	mov	r24, r24
    1e88:	90 e0       	ldi	r25, 0x00	; 0
    1e8a:	80 71       	andi	r24, 0x10	; 16
    1e8c:	90 70       	andi	r25, 0x00	; 0
    1e8e:	00 97       	sbiw	r24, 0x00	; 0
    1e90:	d9 f4       	brne	.+54     	; 0x1ec8 <main+0x1176>
				minutes++;
    1e92:	80 91 6b 00 	lds	r24, 0x006B
    1e96:	8f 5f       	subi	r24, 0xFF	; 255
    1e98:	80 93 6b 00 	sts	0x006B, r24
				if(minutes>=60){hours++;minutes=0;}
    1e9c:	80 91 6b 00 	lds	r24, 0x006B
    1ea0:	8c 33       	cpi	r24, 0x3C	; 60
    1ea2:	3c f0       	brlt	.+14     	; 0x1eb2 <main+0x1160>
    1ea4:	80 91 6c 00 	lds	r24, 0x006C
    1ea8:	8f 5f       	subi	r24, 0xFF	; 255
    1eaa:	80 93 6c 00 	sts	0x006C, r24
    1eae:	10 92 6b 00 	sts	0x006B, r1
				if(hours>=24)hours=0;
    1eb2:	80 91 6c 00 	lds	r24, 0x006C
    1eb6:	88 31       	cpi	r24, 0x18	; 24
    1eb8:	14 f0       	brlt	.+4      	; 0x1ebe <main+0x116c>
    1eba:	10 92 6c 00 	sts	0x006C, r1
				MIFlag=1;
    1ebe:	fe 01       	movw	r30, r28
    1ec0:	e6 54       	subi	r30, 0x46	; 70
    1ec2:	ff 4f       	sbci	r31, 0xFF	; 255
    1ec4:	81 e0       	ldi	r24, 0x01	; 1
    1ec6:	80 83       	st	Z, r24
			}
		}
		if((PINB & (1<<4))) MIFlag=0;
    1ec8:	e6 e3       	ldi	r30, 0x36	; 54
    1eca:	f0 e0       	ldi	r31, 0x00	; 0
    1ecc:	80 81       	ld	r24, Z
    1ece:	88 2f       	mov	r24, r24
    1ed0:	90 e0       	ldi	r25, 0x00	; 0
    1ed2:	80 71       	andi	r24, 0x10	; 16
    1ed4:	90 70       	andi	r25, 0x00	; 0
    1ed6:	00 97       	sbiw	r24, 0x00	; 0
    1ed8:	21 f0       	breq	.+8      	; 0x1ee2 <main+0x1190>
    1eda:	fe 01       	movw	r30, r28
    1edc:	e6 54       	subi	r30, 0x46	; 70
    1ede:	ff 4f       	sbci	r31, 0xFF	; 255
    1ee0:	10 82       	st	Z, r1

		// Minutes decrement PB
		if(!(PINB & (1<<3)) && state == COUNT_OFF && MDFlag == 0){
    1ee2:	e6 e3       	ldi	r30, 0x36	; 54
    1ee4:	f0 e0       	ldi	r31, 0x00	; 0
    1ee6:	80 81       	ld	r24, Z
    1ee8:	88 2f       	mov	r24, r24
    1eea:	90 e0       	ldi	r25, 0x00	; 0
    1eec:	88 70       	andi	r24, 0x08	; 8
    1eee:	90 70       	andi	r25, 0x00	; 0
    1ef0:	00 97       	sbiw	r24, 0x00	; 0
    1ef2:	09 f0       	breq	.+2      	; 0x1ef6 <main+0x11a4>
    1ef4:	a4 c0       	rjmp	.+328    	; 0x203e <main+0x12ec>
    1ef6:	80 91 69 00 	lds	r24, 0x0069
    1efa:	81 30       	cpi	r24, 0x01	; 1
    1efc:	09 f0       	breq	.+2      	; 0x1f00 <main+0x11ae>
    1efe:	9f c0       	rjmp	.+318    	; 0x203e <main+0x12ec>
    1f00:	fe 01       	movw	r30, r28
    1f02:	e7 54       	subi	r30, 0x47	; 71
    1f04:	ff 4f       	sbci	r31, 0xFF	; 255
    1f06:	80 81       	ld	r24, Z
    1f08:	88 23       	and	r24, r24
    1f0a:	09 f0       	breq	.+2      	; 0x1f0e <main+0x11bc>
    1f0c:	98 c0       	rjmp	.+304    	; 0x203e <main+0x12ec>
    1f0e:	80 e0       	ldi	r24, 0x00	; 0
    1f10:	90 e0       	ldi	r25, 0x00	; 0
    1f12:	a0 ea       	ldi	r26, 0xA0	; 160
    1f14:	b1 e4       	ldi	r27, 0x41	; 65
    1f16:	8f a3       	std	Y+39, r24	; 0x27
    1f18:	98 a7       	std	Y+40, r25	; 0x28
    1f1a:	a9 a7       	std	Y+41, r26	; 0x29
    1f1c:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1f1e:	6f a1       	ldd	r22, Y+39	; 0x27
    1f20:	78 a5       	ldd	r23, Y+40	; 0x28
    1f22:	89 a5       	ldd	r24, Y+41	; 0x29
    1f24:	9a a5       	ldd	r25, Y+42	; 0x2a
    1f26:	20 e0       	ldi	r18, 0x00	; 0
    1f28:	30 e0       	ldi	r19, 0x00	; 0
    1f2a:	4a e7       	ldi	r20, 0x7A	; 122
    1f2c:	55 e4       	ldi	r21, 0x45	; 69
    1f2e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1f32:	dc 01       	movw	r26, r24
    1f34:	cb 01       	movw	r24, r22
    1f36:	8b a3       	std	Y+35, r24	; 0x23
    1f38:	9c a3       	std	Y+36, r25	; 0x24
    1f3a:	ad a3       	std	Y+37, r26	; 0x25
    1f3c:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1f3e:	6b a1       	ldd	r22, Y+35	; 0x23
    1f40:	7c a1       	ldd	r23, Y+36	; 0x24
    1f42:	8d a1       	ldd	r24, Y+37	; 0x25
    1f44:	9e a1       	ldd	r25, Y+38	; 0x26
    1f46:	20 e0       	ldi	r18, 0x00	; 0
    1f48:	30 e0       	ldi	r19, 0x00	; 0
    1f4a:	40 e8       	ldi	r20, 0x80	; 128
    1f4c:	5f e3       	ldi	r21, 0x3F	; 63
    1f4e:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1f52:	88 23       	and	r24, r24
    1f54:	2c f4       	brge	.+10     	; 0x1f60 <main+0x120e>
		__ticks = 1;
    1f56:	81 e0       	ldi	r24, 0x01	; 1
    1f58:	90 e0       	ldi	r25, 0x00	; 0
    1f5a:	9a a3       	std	Y+34, r25	; 0x22
    1f5c:	89 a3       	std	Y+33, r24	; 0x21
    1f5e:	3f c0       	rjmp	.+126    	; 0x1fde <main+0x128c>
	else if (__tmp > 65535)
    1f60:	6b a1       	ldd	r22, Y+35	; 0x23
    1f62:	7c a1       	ldd	r23, Y+36	; 0x24
    1f64:	8d a1       	ldd	r24, Y+37	; 0x25
    1f66:	9e a1       	ldd	r25, Y+38	; 0x26
    1f68:	20 e0       	ldi	r18, 0x00	; 0
    1f6a:	3f ef       	ldi	r19, 0xFF	; 255
    1f6c:	4f e7       	ldi	r20, 0x7F	; 127
    1f6e:	57 e4       	ldi	r21, 0x47	; 71
    1f70:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1f74:	18 16       	cp	r1, r24
    1f76:	4c f5       	brge	.+82     	; 0x1fca <main+0x1278>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1f78:	6f a1       	ldd	r22, Y+39	; 0x27
    1f7a:	78 a5       	ldd	r23, Y+40	; 0x28
    1f7c:	89 a5       	ldd	r24, Y+41	; 0x29
    1f7e:	9a a5       	ldd	r25, Y+42	; 0x2a
    1f80:	20 e0       	ldi	r18, 0x00	; 0
    1f82:	30 e0       	ldi	r19, 0x00	; 0
    1f84:	40 e2       	ldi	r20, 0x20	; 32
    1f86:	51 e4       	ldi	r21, 0x41	; 65
    1f88:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1f8c:	dc 01       	movw	r26, r24
    1f8e:	cb 01       	movw	r24, r22
    1f90:	bc 01       	movw	r22, r24
    1f92:	cd 01       	movw	r24, r26
    1f94:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1f98:	dc 01       	movw	r26, r24
    1f9a:	cb 01       	movw	r24, r22
    1f9c:	9a a3       	std	Y+34, r25	; 0x22
    1f9e:	89 a3       	std	Y+33, r24	; 0x21
    1fa0:	0f c0       	rjmp	.+30     	; 0x1fc0 <main+0x126e>
    1fa2:	80 e9       	ldi	r24, 0x90	; 144
    1fa4:	91 e0       	ldi	r25, 0x01	; 1
    1fa6:	98 a3       	std	Y+32, r25	; 0x20
    1fa8:	8f 8f       	std	Y+31, r24	; 0x1f
    1faa:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1fac:	98 a1       	ldd	r25, Y+32	; 0x20
    1fae:	01 97       	sbiw	r24, 0x01	; 1
    1fb0:	f1 f7       	brne	.-4      	; 0x1fae <main+0x125c>
    1fb2:	98 a3       	std	Y+32, r25	; 0x20
    1fb4:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1fb6:	89 a1       	ldd	r24, Y+33	; 0x21
    1fb8:	9a a1       	ldd	r25, Y+34	; 0x22
    1fba:	01 97       	sbiw	r24, 0x01	; 1
    1fbc:	9a a3       	std	Y+34, r25	; 0x22
    1fbe:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1fc0:	89 a1       	ldd	r24, Y+33	; 0x21
    1fc2:	9a a1       	ldd	r25, Y+34	; 0x22
    1fc4:	00 97       	sbiw	r24, 0x00	; 0
    1fc6:	69 f7       	brne	.-38     	; 0x1fa2 <main+0x1250>
    1fc8:	14 c0       	rjmp	.+40     	; 0x1ff2 <main+0x12a0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1fca:	6b a1       	ldd	r22, Y+35	; 0x23
    1fcc:	7c a1       	ldd	r23, Y+36	; 0x24
    1fce:	8d a1       	ldd	r24, Y+37	; 0x25
    1fd0:	9e a1       	ldd	r25, Y+38	; 0x26
    1fd2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1fd6:	dc 01       	movw	r26, r24
    1fd8:	cb 01       	movw	r24, r22
    1fda:	9a a3       	std	Y+34, r25	; 0x22
    1fdc:	89 a3       	std	Y+33, r24	; 0x21
    1fde:	89 a1       	ldd	r24, Y+33	; 0x21
    1fe0:	9a a1       	ldd	r25, Y+34	; 0x22
    1fe2:	9e 8f       	std	Y+30, r25	; 0x1e
    1fe4:	8d 8f       	std	Y+29, r24	; 0x1d
    1fe6:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1fe8:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1fea:	01 97       	sbiw	r24, 0x01	; 1
    1fec:	f1 f7       	brne	.-4      	; 0x1fea <main+0x1298>
    1fee:	9e 8f       	std	Y+30, r25	; 0x1e
    1ff0:	8d 8f       	std	Y+29, r24	; 0x1d
			_delay_ms(20);
			if(!(PINB & (1<<3))){
    1ff2:	e6 e3       	ldi	r30, 0x36	; 54
    1ff4:	f0 e0       	ldi	r31, 0x00	; 0
    1ff6:	80 81       	ld	r24, Z
    1ff8:	88 2f       	mov	r24, r24
    1ffa:	90 e0       	ldi	r25, 0x00	; 0
    1ffc:	88 70       	andi	r24, 0x08	; 8
    1ffe:	90 70       	andi	r25, 0x00	; 0
    2000:	00 97       	sbiw	r24, 0x00	; 0
    2002:	e9 f4       	brne	.+58     	; 0x203e <main+0x12ec>
				minutes--;
    2004:	80 91 6b 00 	lds	r24, 0x006B
    2008:	81 50       	subi	r24, 0x01	; 1
    200a:	80 93 6b 00 	sts	0x006B, r24
				if(minutes<0){hours--;minutes=59;}
    200e:	80 91 6b 00 	lds	r24, 0x006B
    2012:	88 23       	and	r24, r24
    2014:	44 f4       	brge	.+16     	; 0x2026 <main+0x12d4>
    2016:	80 91 6c 00 	lds	r24, 0x006C
    201a:	81 50       	subi	r24, 0x01	; 1
    201c:	80 93 6c 00 	sts	0x006C, r24
    2020:	8b e3       	ldi	r24, 0x3B	; 59
    2022:	80 93 6b 00 	sts	0x006B, r24
				if(hours<0)hours=23;
    2026:	80 91 6c 00 	lds	r24, 0x006C
    202a:	88 23       	and	r24, r24
    202c:	1c f4       	brge	.+6      	; 0x2034 <main+0x12e2>
    202e:	87 e1       	ldi	r24, 0x17	; 23
    2030:	80 93 6c 00 	sts	0x006C, r24
				MDFlag=1;
    2034:	fe 01       	movw	r30, r28
    2036:	e7 54       	subi	r30, 0x47	; 71
    2038:	ff 4f       	sbci	r31, 0xFF	; 255
    203a:	81 e0       	ldi	r24, 0x01	; 1
    203c:	80 83       	st	Z, r24
			}
		}
		if((PINB & (1<<3))) MDFlag=0;
    203e:	e6 e3       	ldi	r30, 0x36	; 54
    2040:	f0 e0       	ldi	r31, 0x00	; 0
    2042:	80 81       	ld	r24, Z
    2044:	88 2f       	mov	r24, r24
    2046:	90 e0       	ldi	r25, 0x00	; 0
    2048:	88 70       	andi	r24, 0x08	; 8
    204a:	90 70       	andi	r25, 0x00	; 0
    204c:	00 97       	sbiw	r24, 0x00	; 0
    204e:	21 f0       	breq	.+8      	; 0x2058 <main+0x1306>
    2050:	fe 01       	movw	r30, r28
    2052:	e7 54       	subi	r30, 0x47	; 71
    2054:	ff 4f       	sbci	r31, 0xFF	; 255
    2056:	10 82       	st	Z, r1

		// Hours increment PB
		if(!(PINB & (1<<1)) && state == COUNT_OFF && HIFlag == 0){
    2058:	e6 e3       	ldi	r30, 0x36	; 54
    205a:	f0 e0       	ldi	r31, 0x00	; 0
    205c:	80 81       	ld	r24, Z
    205e:	88 2f       	mov	r24, r24
    2060:	90 e0       	ldi	r25, 0x00	; 0
    2062:	82 70       	andi	r24, 0x02	; 2
    2064:	90 70       	andi	r25, 0x00	; 0
    2066:	00 97       	sbiw	r24, 0x00	; 0
    2068:	09 f0       	breq	.+2      	; 0x206c <main+0x131a>
    206a:	97 c0       	rjmp	.+302    	; 0x219a <main+0x1448>
    206c:	80 91 69 00 	lds	r24, 0x0069
    2070:	81 30       	cpi	r24, 0x01	; 1
    2072:	09 f0       	breq	.+2      	; 0x2076 <main+0x1324>
    2074:	92 c0       	rjmp	.+292    	; 0x219a <main+0x1448>
    2076:	fe 01       	movw	r30, r28
    2078:	e8 54       	subi	r30, 0x48	; 72
    207a:	ff 4f       	sbci	r31, 0xFF	; 255
    207c:	80 81       	ld	r24, Z
    207e:	88 23       	and	r24, r24
    2080:	09 f0       	breq	.+2      	; 0x2084 <main+0x1332>
    2082:	8b c0       	rjmp	.+278    	; 0x219a <main+0x1448>
    2084:	80 e0       	ldi	r24, 0x00	; 0
    2086:	90 e0       	ldi	r25, 0x00	; 0
    2088:	a0 ea       	ldi	r26, 0xA0	; 160
    208a:	b1 e4       	ldi	r27, 0x41	; 65
    208c:	89 8f       	std	Y+25, r24	; 0x19
    208e:	9a 8f       	std	Y+26, r25	; 0x1a
    2090:	ab 8f       	std	Y+27, r26	; 0x1b
    2092:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2094:	69 8d       	ldd	r22, Y+25	; 0x19
    2096:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2098:	8b 8d       	ldd	r24, Y+27	; 0x1b
    209a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    209c:	20 e0       	ldi	r18, 0x00	; 0
    209e:	30 e0       	ldi	r19, 0x00	; 0
    20a0:	4a e7       	ldi	r20, 0x7A	; 122
    20a2:	55 e4       	ldi	r21, 0x45	; 69
    20a4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    20a8:	dc 01       	movw	r26, r24
    20aa:	cb 01       	movw	r24, r22
    20ac:	8d 8b       	std	Y+21, r24	; 0x15
    20ae:	9e 8b       	std	Y+22, r25	; 0x16
    20b0:	af 8b       	std	Y+23, r26	; 0x17
    20b2:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    20b4:	6d 89       	ldd	r22, Y+21	; 0x15
    20b6:	7e 89       	ldd	r23, Y+22	; 0x16
    20b8:	8f 89       	ldd	r24, Y+23	; 0x17
    20ba:	98 8d       	ldd	r25, Y+24	; 0x18
    20bc:	20 e0       	ldi	r18, 0x00	; 0
    20be:	30 e0       	ldi	r19, 0x00	; 0
    20c0:	40 e8       	ldi	r20, 0x80	; 128
    20c2:	5f e3       	ldi	r21, 0x3F	; 63
    20c4:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    20c8:	88 23       	and	r24, r24
    20ca:	2c f4       	brge	.+10     	; 0x20d6 <main+0x1384>
		__ticks = 1;
    20cc:	81 e0       	ldi	r24, 0x01	; 1
    20ce:	90 e0       	ldi	r25, 0x00	; 0
    20d0:	9c 8b       	std	Y+20, r25	; 0x14
    20d2:	8b 8b       	std	Y+19, r24	; 0x13
    20d4:	3f c0       	rjmp	.+126    	; 0x2154 <main+0x1402>
	else if (__tmp > 65535)
    20d6:	6d 89       	ldd	r22, Y+21	; 0x15
    20d8:	7e 89       	ldd	r23, Y+22	; 0x16
    20da:	8f 89       	ldd	r24, Y+23	; 0x17
    20dc:	98 8d       	ldd	r25, Y+24	; 0x18
    20de:	20 e0       	ldi	r18, 0x00	; 0
    20e0:	3f ef       	ldi	r19, 0xFF	; 255
    20e2:	4f e7       	ldi	r20, 0x7F	; 127
    20e4:	57 e4       	ldi	r21, 0x47	; 71
    20e6:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    20ea:	18 16       	cp	r1, r24
    20ec:	4c f5       	brge	.+82     	; 0x2140 <main+0x13ee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    20ee:	69 8d       	ldd	r22, Y+25	; 0x19
    20f0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    20f2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    20f4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    20f6:	20 e0       	ldi	r18, 0x00	; 0
    20f8:	30 e0       	ldi	r19, 0x00	; 0
    20fa:	40 e2       	ldi	r20, 0x20	; 32
    20fc:	51 e4       	ldi	r21, 0x41	; 65
    20fe:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2102:	dc 01       	movw	r26, r24
    2104:	cb 01       	movw	r24, r22
    2106:	bc 01       	movw	r22, r24
    2108:	cd 01       	movw	r24, r26
    210a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    210e:	dc 01       	movw	r26, r24
    2110:	cb 01       	movw	r24, r22
    2112:	9c 8b       	std	Y+20, r25	; 0x14
    2114:	8b 8b       	std	Y+19, r24	; 0x13
    2116:	0f c0       	rjmp	.+30     	; 0x2136 <main+0x13e4>
    2118:	80 e9       	ldi	r24, 0x90	; 144
    211a:	91 e0       	ldi	r25, 0x01	; 1
    211c:	9a 8b       	std	Y+18, r25	; 0x12
    211e:	89 8b       	std	Y+17, r24	; 0x11
    2120:	89 89       	ldd	r24, Y+17	; 0x11
    2122:	9a 89       	ldd	r25, Y+18	; 0x12
    2124:	01 97       	sbiw	r24, 0x01	; 1
    2126:	f1 f7       	brne	.-4      	; 0x2124 <main+0x13d2>
    2128:	9a 8b       	std	Y+18, r25	; 0x12
    212a:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    212c:	8b 89       	ldd	r24, Y+19	; 0x13
    212e:	9c 89       	ldd	r25, Y+20	; 0x14
    2130:	01 97       	sbiw	r24, 0x01	; 1
    2132:	9c 8b       	std	Y+20, r25	; 0x14
    2134:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2136:	8b 89       	ldd	r24, Y+19	; 0x13
    2138:	9c 89       	ldd	r25, Y+20	; 0x14
    213a:	00 97       	sbiw	r24, 0x00	; 0
    213c:	69 f7       	brne	.-38     	; 0x2118 <main+0x13c6>
    213e:	14 c0       	rjmp	.+40     	; 0x2168 <main+0x1416>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2140:	6d 89       	ldd	r22, Y+21	; 0x15
    2142:	7e 89       	ldd	r23, Y+22	; 0x16
    2144:	8f 89       	ldd	r24, Y+23	; 0x17
    2146:	98 8d       	ldd	r25, Y+24	; 0x18
    2148:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    214c:	dc 01       	movw	r26, r24
    214e:	cb 01       	movw	r24, r22
    2150:	9c 8b       	std	Y+20, r25	; 0x14
    2152:	8b 8b       	std	Y+19, r24	; 0x13
    2154:	8b 89       	ldd	r24, Y+19	; 0x13
    2156:	9c 89       	ldd	r25, Y+20	; 0x14
    2158:	98 8b       	std	Y+16, r25	; 0x10
    215a:	8f 87       	std	Y+15, r24	; 0x0f
    215c:	8f 85       	ldd	r24, Y+15	; 0x0f
    215e:	98 89       	ldd	r25, Y+16	; 0x10
    2160:	01 97       	sbiw	r24, 0x01	; 1
    2162:	f1 f7       	brne	.-4      	; 0x2160 <main+0x140e>
    2164:	98 8b       	std	Y+16, r25	; 0x10
    2166:	8f 87       	std	Y+15, r24	; 0x0f
			_delay_ms(20);
			if(!(PINB & (1<<1))){
    2168:	e6 e3       	ldi	r30, 0x36	; 54
    216a:	f0 e0       	ldi	r31, 0x00	; 0
    216c:	80 81       	ld	r24, Z
    216e:	88 2f       	mov	r24, r24
    2170:	90 e0       	ldi	r25, 0x00	; 0
    2172:	82 70       	andi	r24, 0x02	; 2
    2174:	90 70       	andi	r25, 0x00	; 0
    2176:	00 97       	sbiw	r24, 0x00	; 0
    2178:	81 f4       	brne	.+32     	; 0x219a <main+0x1448>
				hours++;
    217a:	80 91 6c 00 	lds	r24, 0x006C
    217e:	8f 5f       	subi	r24, 0xFF	; 255
    2180:	80 93 6c 00 	sts	0x006C, r24
				if(hours>=24)hours=0;
    2184:	80 91 6c 00 	lds	r24, 0x006C
    2188:	88 31       	cpi	r24, 0x18	; 24
    218a:	14 f0       	brlt	.+4      	; 0x2190 <main+0x143e>
    218c:	10 92 6c 00 	sts	0x006C, r1
				HIFlag=1;
    2190:	fe 01       	movw	r30, r28
    2192:	e8 54       	subi	r30, 0x48	; 72
    2194:	ff 4f       	sbci	r31, 0xFF	; 255
    2196:	81 e0       	ldi	r24, 0x01	; 1
    2198:	80 83       	st	Z, r24
			}
		}
		if((PINB & (1<<1))) HIFlag=0;
    219a:	e6 e3       	ldi	r30, 0x36	; 54
    219c:	f0 e0       	ldi	r31, 0x00	; 0
    219e:	80 81       	ld	r24, Z
    21a0:	88 2f       	mov	r24, r24
    21a2:	90 e0       	ldi	r25, 0x00	; 0
    21a4:	82 70       	andi	r24, 0x02	; 2
    21a6:	90 70       	andi	r25, 0x00	; 0
    21a8:	00 97       	sbiw	r24, 0x00	; 0
    21aa:	21 f0       	breq	.+8      	; 0x21b4 <main+0x1462>
    21ac:	fe 01       	movw	r30, r28
    21ae:	e8 54       	subi	r30, 0x48	; 72
    21b0:	ff 4f       	sbci	r31, 0xFF	; 255
    21b2:	10 82       	st	Z, r1

		// Hours decrement PB
		if(!(PINB & (1<<0)) && state == COUNT_OFF && HDFlag == 0){
    21b4:	e6 e3       	ldi	r30, 0x36	; 54
    21b6:	f0 e0       	ldi	r31, 0x00	; 0
    21b8:	80 81       	ld	r24, Z
    21ba:	88 2f       	mov	r24, r24
    21bc:	90 e0       	ldi	r25, 0x00	; 0
    21be:	81 70       	andi	r24, 0x01	; 1
    21c0:	90 70       	andi	r25, 0x00	; 0
    21c2:	00 97       	sbiw	r24, 0x00	; 0
    21c4:	09 f0       	breq	.+2      	; 0x21c8 <main+0x1476>
    21c6:	98 c0       	rjmp	.+304    	; 0x22f8 <main+0x15a6>
    21c8:	80 91 69 00 	lds	r24, 0x0069
    21cc:	81 30       	cpi	r24, 0x01	; 1
    21ce:	09 f0       	breq	.+2      	; 0x21d2 <main+0x1480>
    21d0:	93 c0       	rjmp	.+294    	; 0x22f8 <main+0x15a6>
    21d2:	fe 01       	movw	r30, r28
    21d4:	e9 54       	subi	r30, 0x49	; 73
    21d6:	ff 4f       	sbci	r31, 0xFF	; 255
    21d8:	80 81       	ld	r24, Z
    21da:	88 23       	and	r24, r24
    21dc:	09 f0       	breq	.+2      	; 0x21e0 <main+0x148e>
    21de:	8c c0       	rjmp	.+280    	; 0x22f8 <main+0x15a6>
    21e0:	80 e0       	ldi	r24, 0x00	; 0
    21e2:	90 e0       	ldi	r25, 0x00	; 0
    21e4:	a0 ea       	ldi	r26, 0xA0	; 160
    21e6:	b1 e4       	ldi	r27, 0x41	; 65
    21e8:	8b 87       	std	Y+11, r24	; 0x0b
    21ea:	9c 87       	std	Y+12, r25	; 0x0c
    21ec:	ad 87       	std	Y+13, r26	; 0x0d
    21ee:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    21f0:	6b 85       	ldd	r22, Y+11	; 0x0b
    21f2:	7c 85       	ldd	r23, Y+12	; 0x0c
    21f4:	8d 85       	ldd	r24, Y+13	; 0x0d
    21f6:	9e 85       	ldd	r25, Y+14	; 0x0e
    21f8:	20 e0       	ldi	r18, 0x00	; 0
    21fa:	30 e0       	ldi	r19, 0x00	; 0
    21fc:	4a e7       	ldi	r20, 0x7A	; 122
    21fe:	55 e4       	ldi	r21, 0x45	; 69
    2200:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2204:	dc 01       	movw	r26, r24
    2206:	cb 01       	movw	r24, r22
    2208:	8f 83       	std	Y+7, r24	; 0x07
    220a:	98 87       	std	Y+8, r25	; 0x08
    220c:	a9 87       	std	Y+9, r26	; 0x09
    220e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2210:	6f 81       	ldd	r22, Y+7	; 0x07
    2212:	78 85       	ldd	r23, Y+8	; 0x08
    2214:	89 85       	ldd	r24, Y+9	; 0x09
    2216:	9a 85       	ldd	r25, Y+10	; 0x0a
    2218:	20 e0       	ldi	r18, 0x00	; 0
    221a:	30 e0       	ldi	r19, 0x00	; 0
    221c:	40 e8       	ldi	r20, 0x80	; 128
    221e:	5f e3       	ldi	r21, 0x3F	; 63
    2220:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2224:	88 23       	and	r24, r24
    2226:	2c f4       	brge	.+10     	; 0x2232 <main+0x14e0>
		__ticks = 1;
    2228:	81 e0       	ldi	r24, 0x01	; 1
    222a:	90 e0       	ldi	r25, 0x00	; 0
    222c:	9e 83       	std	Y+6, r25	; 0x06
    222e:	8d 83       	std	Y+5, r24	; 0x05
    2230:	3f c0       	rjmp	.+126    	; 0x22b0 <main+0x155e>
	else if (__tmp > 65535)
    2232:	6f 81       	ldd	r22, Y+7	; 0x07
    2234:	78 85       	ldd	r23, Y+8	; 0x08
    2236:	89 85       	ldd	r24, Y+9	; 0x09
    2238:	9a 85       	ldd	r25, Y+10	; 0x0a
    223a:	20 e0       	ldi	r18, 0x00	; 0
    223c:	3f ef       	ldi	r19, 0xFF	; 255
    223e:	4f e7       	ldi	r20, 0x7F	; 127
    2240:	57 e4       	ldi	r21, 0x47	; 71
    2242:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2246:	18 16       	cp	r1, r24
    2248:	4c f5       	brge	.+82     	; 0x229c <main+0x154a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    224a:	6b 85       	ldd	r22, Y+11	; 0x0b
    224c:	7c 85       	ldd	r23, Y+12	; 0x0c
    224e:	8d 85       	ldd	r24, Y+13	; 0x0d
    2250:	9e 85       	ldd	r25, Y+14	; 0x0e
    2252:	20 e0       	ldi	r18, 0x00	; 0
    2254:	30 e0       	ldi	r19, 0x00	; 0
    2256:	40 e2       	ldi	r20, 0x20	; 32
    2258:	51 e4       	ldi	r21, 0x41	; 65
    225a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    225e:	dc 01       	movw	r26, r24
    2260:	cb 01       	movw	r24, r22
    2262:	bc 01       	movw	r22, r24
    2264:	cd 01       	movw	r24, r26
    2266:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    226a:	dc 01       	movw	r26, r24
    226c:	cb 01       	movw	r24, r22
    226e:	9e 83       	std	Y+6, r25	; 0x06
    2270:	8d 83       	std	Y+5, r24	; 0x05
    2272:	0f c0       	rjmp	.+30     	; 0x2292 <main+0x1540>
    2274:	80 e9       	ldi	r24, 0x90	; 144
    2276:	91 e0       	ldi	r25, 0x01	; 1
    2278:	9c 83       	std	Y+4, r25	; 0x04
    227a:	8b 83       	std	Y+3, r24	; 0x03
    227c:	8b 81       	ldd	r24, Y+3	; 0x03
    227e:	9c 81       	ldd	r25, Y+4	; 0x04
    2280:	01 97       	sbiw	r24, 0x01	; 1
    2282:	f1 f7       	brne	.-4      	; 0x2280 <main+0x152e>
    2284:	9c 83       	std	Y+4, r25	; 0x04
    2286:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2288:	8d 81       	ldd	r24, Y+5	; 0x05
    228a:	9e 81       	ldd	r25, Y+6	; 0x06
    228c:	01 97       	sbiw	r24, 0x01	; 1
    228e:	9e 83       	std	Y+6, r25	; 0x06
    2290:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2292:	8d 81       	ldd	r24, Y+5	; 0x05
    2294:	9e 81       	ldd	r25, Y+6	; 0x06
    2296:	00 97       	sbiw	r24, 0x00	; 0
    2298:	69 f7       	brne	.-38     	; 0x2274 <main+0x1522>
    229a:	14 c0       	rjmp	.+40     	; 0x22c4 <main+0x1572>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    229c:	6f 81       	ldd	r22, Y+7	; 0x07
    229e:	78 85       	ldd	r23, Y+8	; 0x08
    22a0:	89 85       	ldd	r24, Y+9	; 0x09
    22a2:	9a 85       	ldd	r25, Y+10	; 0x0a
    22a4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    22a8:	dc 01       	movw	r26, r24
    22aa:	cb 01       	movw	r24, r22
    22ac:	9e 83       	std	Y+6, r25	; 0x06
    22ae:	8d 83       	std	Y+5, r24	; 0x05
    22b0:	8d 81       	ldd	r24, Y+5	; 0x05
    22b2:	9e 81       	ldd	r25, Y+6	; 0x06
    22b4:	9a 83       	std	Y+2, r25	; 0x02
    22b6:	89 83       	std	Y+1, r24	; 0x01
    22b8:	89 81       	ldd	r24, Y+1	; 0x01
    22ba:	9a 81       	ldd	r25, Y+2	; 0x02
    22bc:	01 97       	sbiw	r24, 0x01	; 1
    22be:	f1 f7       	brne	.-4      	; 0x22bc <main+0x156a>
    22c0:	9a 83       	std	Y+2, r25	; 0x02
    22c2:	89 83       	std	Y+1, r24	; 0x01
			_delay_ms(20);
			if(!(PINB & (1<<0))){
    22c4:	e6 e3       	ldi	r30, 0x36	; 54
    22c6:	f0 e0       	ldi	r31, 0x00	; 0
    22c8:	80 81       	ld	r24, Z
    22ca:	88 2f       	mov	r24, r24
    22cc:	90 e0       	ldi	r25, 0x00	; 0
    22ce:	81 70       	andi	r24, 0x01	; 1
    22d0:	90 70       	andi	r25, 0x00	; 0
    22d2:	00 97       	sbiw	r24, 0x00	; 0
    22d4:	89 f4       	brne	.+34     	; 0x22f8 <main+0x15a6>
				hours--;
    22d6:	80 91 6c 00 	lds	r24, 0x006C
    22da:	81 50       	subi	r24, 0x01	; 1
    22dc:	80 93 6c 00 	sts	0x006C, r24
				if(hours<0)hours=23;
    22e0:	80 91 6c 00 	lds	r24, 0x006C
    22e4:	88 23       	and	r24, r24
    22e6:	1c f4       	brge	.+6      	; 0x22ee <main+0x159c>
    22e8:	87 e1       	ldi	r24, 0x17	; 23
    22ea:	80 93 6c 00 	sts	0x006C, r24
				HDFlag=1;
    22ee:	fe 01       	movw	r30, r28
    22f0:	e9 54       	subi	r30, 0x49	; 73
    22f2:	ff 4f       	sbci	r31, 0xFF	; 255
    22f4:	81 e0       	ldi	r24, 0x01	; 1
    22f6:	80 83       	st	Z, r24
			}
		}
		if((PINB & (1<<0))) HDFlag=0;
    22f8:	e6 e3       	ldi	r30, 0x36	; 54
    22fa:	f0 e0       	ldi	r31, 0x00	; 0
    22fc:	80 81       	ld	r24, Z
    22fe:	88 2f       	mov	r24, r24
    2300:	90 e0       	ldi	r25, 0x00	; 0
    2302:	81 70       	andi	r24, 0x01	; 1
    2304:	90 70       	andi	r25, 0x00	; 0
    2306:	88 23       	and	r24, r24
    2308:	11 f4       	brne	.+4      	; 0x230e <main+0x15bc>
    230a:	0c 94 1c 07 	jmp	0xe38	; 0xe38 <main+0xe6>
    230e:	fe 01       	movw	r30, r28
    2310:	e9 54       	subi	r30, 0x49	; 73
    2312:	ff 4f       	sbci	r31, 0xFF	; 255
    2314:	10 82       	st	Z, r1
    2316:	0c 94 1c 07 	jmp	0xe38	; 0xe38 <main+0xe6>

0000231a <timer1_CTC_init>:

	}
}

//function to initialize Timer1
void timer1_CTC_init(void){
    231a:	df 93       	push	r29
    231c:	cf 93       	push	r28
    231e:	cd b7       	in	r28, 0x3d	; 61
    2320:	de b7       	in	r29, 0x3e	; 62
	TCCR1A = (1<<FOC1A)|(1<<FOC1B);
    2322:	ef e4       	ldi	r30, 0x4F	; 79
    2324:	f0 e0       	ldi	r31, 0x00	; 0
    2326:	8c e0       	ldi	r24, 0x0C	; 12
    2328:	80 83       	st	Z, r24
	TCCR1B = (1<<WGM12)|(1<<CS10)|(1<<CS12);
    232a:	ee e4       	ldi	r30, 0x4E	; 78
    232c:	f0 e0       	ldi	r31, 0x00	; 0
    232e:	8d e0       	ldi	r24, 0x0D	; 13
    2330:	80 83       	st	Z, r24
	TCNT1  = 0;
    2332:	ec e4       	ldi	r30, 0x4C	; 76
    2334:	f0 e0       	ldi	r31, 0x00	; 0
    2336:	11 82       	std	Z+1, r1	; 0x01
    2338:	10 82       	st	Z, r1
	OCR1A  = 15625;
    233a:	ea e4       	ldi	r30, 0x4A	; 74
    233c:	f0 e0       	ldi	r31, 0x00	; 0
    233e:	89 e0       	ldi	r24, 0x09	; 9
    2340:	9d e3       	ldi	r25, 0x3D	; 61
    2342:	91 83       	std	Z+1, r25	; 0x01
    2344:	80 83       	st	Z, r24
	TIMSK  |=(1<<OCIE1A);
    2346:	a9 e5       	ldi	r26, 0x59	; 89
    2348:	b0 e0       	ldi	r27, 0x00	; 0
    234a:	e9 e5       	ldi	r30, 0x59	; 89
    234c:	f0 e0       	ldi	r31, 0x00	; 0
    234e:	80 81       	ld	r24, Z
    2350:	80 61       	ori	r24, 0x10	; 16
    2352:	8c 93       	st	X, r24
}
    2354:	cf 91       	pop	r28
    2356:	df 91       	pop	r29
    2358:	08 95       	ret

0000235a <EX_Interrupts_init>:

//function to initialize external interrupts
void EX_Interrupts_init(void){
    235a:	df 93       	push	r29
    235c:	cf 93       	push	r28
    235e:	cd b7       	in	r28, 0x3d	; 61
    2360:	de b7       	in	r29, 0x3e	; 62
	MCUCR = (1<<ISC01) | (1<<ISC10) | (1<<ISC11);
    2362:	e5 e5       	ldi	r30, 0x55	; 85
    2364:	f0 e0       	ldi	r31, 0x00	; 0
    2366:	8e e0       	ldi	r24, 0x0E	; 14
    2368:	80 83       	st	Z, r24
	MCUCSR |= (1<<ISC2);
    236a:	a4 e5       	ldi	r26, 0x54	; 84
    236c:	b0 e0       	ldi	r27, 0x00	; 0
    236e:	e4 e5       	ldi	r30, 0x54	; 84
    2370:	f0 e0       	ldi	r31, 0x00	; 0
    2372:	80 81       	ld	r24, Z
    2374:	80 64       	ori	r24, 0x40	; 64
    2376:	8c 93       	st	X, r24
	GICR |= (1<<INT0) | (1<<INT1) | (1<<INT2);
    2378:	ab e5       	ldi	r26, 0x5B	; 91
    237a:	b0 e0       	ldi	r27, 0x00	; 0
    237c:	eb e5       	ldi	r30, 0x5B	; 91
    237e:	f0 e0       	ldi	r31, 0x00	; 0
    2380:	80 81       	ld	r24, Z
    2382:	80 6e       	ori	r24, 0xE0	; 224
    2384:	8c 93       	st	X, r24
}
    2386:	cf 91       	pop	r28
    2388:	df 91       	pop	r29
    238a:	08 95       	ret

0000238c <__divmodqi4>:
    238c:	87 fb       	bst	r24, 7
    238e:	08 2e       	mov	r0, r24
    2390:	06 26       	eor	r0, r22
    2392:	87 fd       	sbrc	r24, 7
    2394:	81 95       	neg	r24
    2396:	67 fd       	sbrc	r22, 7
    2398:	61 95       	neg	r22
    239a:	05 d0       	rcall	.+10     	; 0x23a6 <__udivmodqi4>
    239c:	0e f4       	brtc	.+2      	; 0x23a0 <__divmodqi4_1>
    239e:	91 95       	neg	r25

000023a0 <__divmodqi4_1>:
    23a0:	07 fc       	sbrc	r0, 7
    23a2:	81 95       	neg	r24

000023a4 <__divmodqi4_exit>:
    23a4:	08 95       	ret

000023a6 <__udivmodqi4>:
    23a6:	99 1b       	sub	r25, r25
    23a8:	79 e0       	ldi	r23, 0x09	; 9
    23aa:	04 c0       	rjmp	.+8      	; 0x23b4 <__udivmodqi4_ep>

000023ac <__udivmodqi4_loop>:
    23ac:	99 1f       	adc	r25, r25
    23ae:	96 17       	cp	r25, r22
    23b0:	08 f0       	brcs	.+2      	; 0x23b4 <__udivmodqi4_ep>
    23b2:	96 1b       	sub	r25, r22

000023b4 <__udivmodqi4_ep>:
    23b4:	88 1f       	adc	r24, r24
    23b6:	7a 95       	dec	r23
    23b8:	c9 f7       	brne	.-14     	; 0x23ac <__udivmodqi4_loop>
    23ba:	80 95       	com	r24
    23bc:	08 95       	ret

000023be <__prologue_saves__>:
    23be:	2f 92       	push	r2
    23c0:	3f 92       	push	r3
    23c2:	4f 92       	push	r4
    23c4:	5f 92       	push	r5
    23c6:	6f 92       	push	r6
    23c8:	7f 92       	push	r7
    23ca:	8f 92       	push	r8
    23cc:	9f 92       	push	r9
    23ce:	af 92       	push	r10
    23d0:	bf 92       	push	r11
    23d2:	cf 92       	push	r12
    23d4:	df 92       	push	r13
    23d6:	ef 92       	push	r14
    23d8:	ff 92       	push	r15
    23da:	0f 93       	push	r16
    23dc:	1f 93       	push	r17
    23de:	cf 93       	push	r28
    23e0:	df 93       	push	r29
    23e2:	cd b7       	in	r28, 0x3d	; 61
    23e4:	de b7       	in	r29, 0x3e	; 62
    23e6:	ca 1b       	sub	r28, r26
    23e8:	db 0b       	sbc	r29, r27
    23ea:	0f b6       	in	r0, 0x3f	; 63
    23ec:	f8 94       	cli
    23ee:	de bf       	out	0x3e, r29	; 62
    23f0:	0f be       	out	0x3f, r0	; 63
    23f2:	cd bf       	out	0x3d, r28	; 61
    23f4:	09 94       	ijmp

000023f6 <__epilogue_restores__>:
    23f6:	2a 88       	ldd	r2, Y+18	; 0x12
    23f8:	39 88       	ldd	r3, Y+17	; 0x11
    23fa:	48 88       	ldd	r4, Y+16	; 0x10
    23fc:	5f 84       	ldd	r5, Y+15	; 0x0f
    23fe:	6e 84       	ldd	r6, Y+14	; 0x0e
    2400:	7d 84       	ldd	r7, Y+13	; 0x0d
    2402:	8c 84       	ldd	r8, Y+12	; 0x0c
    2404:	9b 84       	ldd	r9, Y+11	; 0x0b
    2406:	aa 84       	ldd	r10, Y+10	; 0x0a
    2408:	b9 84       	ldd	r11, Y+9	; 0x09
    240a:	c8 84       	ldd	r12, Y+8	; 0x08
    240c:	df 80       	ldd	r13, Y+7	; 0x07
    240e:	ee 80       	ldd	r14, Y+6	; 0x06
    2410:	fd 80       	ldd	r15, Y+5	; 0x05
    2412:	0c 81       	ldd	r16, Y+4	; 0x04
    2414:	1b 81       	ldd	r17, Y+3	; 0x03
    2416:	aa 81       	ldd	r26, Y+2	; 0x02
    2418:	b9 81       	ldd	r27, Y+1	; 0x01
    241a:	ce 0f       	add	r28, r30
    241c:	d1 1d       	adc	r29, r1
    241e:	0f b6       	in	r0, 0x3f	; 63
    2420:	f8 94       	cli
    2422:	de bf       	out	0x3e, r29	; 62
    2424:	0f be       	out	0x3f, r0	; 63
    2426:	cd bf       	out	0x3d, r28	; 61
    2428:	ed 01       	movw	r28, r26
    242a:	08 95       	ret

0000242c <_exit>:
    242c:	f8 94       	cli

0000242e <__stop_program>:
    242e:	ff cf       	rjmp	.-2      	; 0x242e <__stop_program>
