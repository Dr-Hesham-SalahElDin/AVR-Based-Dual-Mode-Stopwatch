/*
 * miniProject.c
 *
 *  Created on: Feb 10, 2025
 *      Author: Hesham
 */

#include<avr/io.h>
#include<avr/interrupt.h>

void timer1_CTC_init(void);

char seconds=0, minutes=0, hours=0;
typedef enum{COUNT_UP, COUNT_DWN}Timer_Mode;

ISR(TIMER1_COMPA_vect){

	seconds++;
	if(seconds>60){minutes++;seconds=0;}
	if(minutes>60){hours++;minutes=0;}
	if(hours>24)hours=0;
}

int main(void){
	// setting first 6 pins of PORTA as outputs and reset them
	DDRA |= 0x3F;
	PORTC &= ~(0x3F);

	// setting whole PORTB as input and enable the PU resistor
	DDRB = 0x00;
	PORTB = 0xFF;

	// setting first 4 pins of PORTC as outputs and reset them
	DDRC |= 0x0F;
	PORTC &= ~(0x0F);

	// setting PD2 & PD3 as inputs, with PD2 has internal resistor
	// setting PD0, PD4, and PD5 as outputs and reset them
	DDRD &= ~(0x0C);
	DDRD |= (0x31);
	PORTD |= 0x04;
	PORTD &= ~(0x31);


	timer1_CTC_init();
	while(1){

	}
}

void timer1_CTC_init(void){
	TCCR1A = (1<<FOC1A)|(1<<FOC1B);
	TCCR1B = (1<<WGM12)|(1<<CS10)|(1<<CS12);
	TCNT1  = 0;
	OCR1A  = 15625;
	TIMSK  |=(1<<OCIE1A);
	SREG   |=(1<<7);
}

